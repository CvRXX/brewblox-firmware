// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OneWireGpioModule_test.proto

#ifndef PROTOBUF_INCLUDED_OneWireGpioModule_5ftest_2eproto
#define PROTOBUF_INCLUDED_OneWireGpioModule_5ftest_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "brewblox_test.pb.h"
#include "nanopb_test.pb.h"
#include "IoArray_test.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_OneWireGpioModule_5ftest_2eproto 

namespace protobuf_OneWireGpioModule_5ftest_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_OneWireGpioModule_5ftest_2eproto
namespace blox {
class GpioChannel;
class GpioChannelDefaultTypeInternal;
extern GpioChannelDefaultTypeInternal _GpioChannel_default_instance_;
class OneWireGpioModule;
class OneWireGpioModuleDefaultTypeInternal;
extern OneWireGpioModuleDefaultTypeInternal _OneWireGpioModule_default_instance_;
}  // namespace blox
namespace google {
namespace protobuf {
template<> ::blox::GpioChannel* Arena::CreateMaybeMessage<::blox::GpioChannel>(Arena*);
template<> ::blox::OneWireGpioModule* Arena::CreateMaybeMessage<::blox::OneWireGpioModule>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace blox {

// ===================================================================

class GpioChannel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:blox.GpioChannel) */ {
 public:
  GpioChannel();
  virtual ~GpioChannel();

  GpioChannel(const GpioChannel& from);

  inline GpioChannel& operator=(const GpioChannel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GpioChannel(GpioChannel&& from) noexcept
    : GpioChannel() {
    *this = ::std::move(from);
  }

  inline GpioChannel& operator=(GpioChannel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GpioChannel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GpioChannel* internal_default_instance() {
    return reinterpret_cast<const GpioChannel*>(
               &_GpioChannel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(GpioChannel* other);
  friend void swap(GpioChannel& a, GpioChannel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GpioChannel* New() const final {
    return CreateMaybeMessage<GpioChannel>(NULL);
  }

  GpioChannel* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GpioChannel>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GpioChannel& from);
  void MergeFrom(const GpioChannel& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GpioChannel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 id = 1 [(.nanopb_test) = {
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // .blox.ChannelConfig config = 2;
  void clear_config();
  static const int kConfigFieldNumber = 2;
  ::blox::ChannelConfig config() const;
  void set_config(::blox::ChannelConfig value);

  // uint32 pins = 3 [(.nanopb_test) = {
  void clear_pins();
  static const int kPinsFieldNumber = 3;
  ::google::protobuf::uint32 pins() const;
  void set_pins(::google::protobuf::uint32 value);

  // uint32 whenActive = 4 [(.nanopb_test) = {
  void clear_whenactive();
  static const int kWhenActiveFieldNumber = 4;
  ::google::protobuf::uint32 whenactive() const;
  void set_whenactive(::google::protobuf::uint32 value);

  // uint32 whenInactive = 5 [(.nanopb_test) = {
  void clear_wheninactive();
  static const int kWhenInactiveFieldNumber = 5;
  ::google::protobuf::uint32 wheninactive() const;
  void set_wheninactive(::google::protobuf::uint32 value);

  // uint32 pwmDuty = 6 [(.nanopb_test) = {
  void clear_pwmduty();
  static const int kPwmDutyFieldNumber = 6;
  ::google::protobuf::uint32 pwmduty() const;
  void set_pwmduty(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:blox.GpioChannel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  int config_;
  ::google::protobuf::uint32 pins_;
  ::google::protobuf::uint32 whenactive_;
  ::google::protobuf::uint32 wheninactive_;
  ::google::protobuf::uint32 pwmduty_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_OneWireGpioModule_5ftest_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OneWireGpioModule : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:blox.OneWireGpioModule) */ {
 public:
  OneWireGpioModule();
  virtual ~OneWireGpioModule();

  OneWireGpioModule(const OneWireGpioModule& from);

  inline OneWireGpioModule& operator=(const OneWireGpioModule& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OneWireGpioModule(OneWireGpioModule&& from) noexcept
    : OneWireGpioModule() {
    *this = ::std::move(from);
  }

  inline OneWireGpioModule& operator=(OneWireGpioModule&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OneWireGpioModule& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OneWireGpioModule* internal_default_instance() {
    return reinterpret_cast<const OneWireGpioModule*>(
               &_OneWireGpioModule_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(OneWireGpioModule* other);
  friend void swap(OneWireGpioModule& a, OneWireGpioModule& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OneWireGpioModule* New() const final {
    return CreateMaybeMessage<OneWireGpioModule>(NULL);
  }

  OneWireGpioModule* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OneWireGpioModule>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OneWireGpioModule& from);
  void MergeFrom(const OneWireGpioModule& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OneWireGpioModule* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .blox.GpioChannel channels = 1 [(.nanopb_test) = {
  int channels_size() const;
  void clear_channels();
  static const int kChannelsFieldNumber = 1;
  ::blox::GpioChannel* mutable_channels(int index);
  ::google::protobuf::RepeatedPtrField< ::blox::GpioChannel >*
      mutable_channels();
  const ::blox::GpioChannel& channels(int index) const;
  ::blox::GpioChannel* add_channels();
  const ::google::protobuf::RepeatedPtrField< ::blox::GpioChannel >&
      channels() const;

  // uint32 modulePosition = 2 [(.nanopb_test) = {
  void clear_moduleposition();
  static const int kModulePositionFieldNumber = 2;
  ::google::protobuf::uint32 moduleposition() const;
  void set_moduleposition(::google::protobuf::uint32 value);

  // uint32 status = 3 [(.nanopb_test) = {
  void clear_status();
  static const int kStatusFieldNumber = 3;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // uint32 drive = 4 [(.nanopb_test) = {
  void clear_drive();
  static const int kDriveFieldNumber = 4;
  ::google::protobuf::uint32 drive() const;
  void set_drive(::google::protobuf::uint32 value);

  // uint32 overCurrent = 5 [(.nanopb_test) = {
  void clear_overcurrent();
  static const int kOverCurrentFieldNumber = 5;
  ::google::protobuf::uint32 overcurrent() const;
  void set_overcurrent(::google::protobuf::uint32 value);

  // uint32 openLoad = 6 [(.nanopb_test) = {
  void clear_openload();
  static const int kOpenLoadFieldNumber = 6;
  ::google::protobuf::uint32 openload() const;
  void set_openload(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:blox.OneWireGpioModule)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::blox::GpioChannel > channels_;
  ::google::protobuf::uint32 moduleposition_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 drive_;
  ::google::protobuf::uint32 overcurrent_;
  ::google::protobuf::uint32 openload_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_OneWireGpioModule_5ftest_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GpioChannel

// uint32 id = 1 [(.nanopb_test) = {
inline void GpioChannel::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 GpioChannel::id() const {
  // @@protoc_insertion_point(field_get:blox.GpioChannel.id)
  return id_;
}
inline void GpioChannel::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:blox.GpioChannel.id)
}

// .blox.ChannelConfig config = 2;
inline void GpioChannel::clear_config() {
  config_ = 0;
}
inline ::blox::ChannelConfig GpioChannel::config() const {
  // @@protoc_insertion_point(field_get:blox.GpioChannel.config)
  return static_cast< ::blox::ChannelConfig >(config_);
}
inline void GpioChannel::set_config(::blox::ChannelConfig value) {
  
  config_ = value;
  // @@protoc_insertion_point(field_set:blox.GpioChannel.config)
}

// uint32 pins = 3 [(.nanopb_test) = {
inline void GpioChannel::clear_pins() {
  pins_ = 0u;
}
inline ::google::protobuf::uint32 GpioChannel::pins() const {
  // @@protoc_insertion_point(field_get:blox.GpioChannel.pins)
  return pins_;
}
inline void GpioChannel::set_pins(::google::protobuf::uint32 value) {
  
  pins_ = value;
  // @@protoc_insertion_point(field_set:blox.GpioChannel.pins)
}

// uint32 whenActive = 4 [(.nanopb_test) = {
inline void GpioChannel::clear_whenactive() {
  whenactive_ = 0u;
}
inline ::google::protobuf::uint32 GpioChannel::whenactive() const {
  // @@protoc_insertion_point(field_get:blox.GpioChannel.whenActive)
  return whenactive_;
}
inline void GpioChannel::set_whenactive(::google::protobuf::uint32 value) {
  
  whenactive_ = value;
  // @@protoc_insertion_point(field_set:blox.GpioChannel.whenActive)
}

// uint32 whenInactive = 5 [(.nanopb_test) = {
inline void GpioChannel::clear_wheninactive() {
  wheninactive_ = 0u;
}
inline ::google::protobuf::uint32 GpioChannel::wheninactive() const {
  // @@protoc_insertion_point(field_get:blox.GpioChannel.whenInactive)
  return wheninactive_;
}
inline void GpioChannel::set_wheninactive(::google::protobuf::uint32 value) {
  
  wheninactive_ = value;
  // @@protoc_insertion_point(field_set:blox.GpioChannel.whenInactive)
}

// uint32 pwmDuty = 6 [(.nanopb_test) = {
inline void GpioChannel::clear_pwmduty() {
  pwmduty_ = 0u;
}
inline ::google::protobuf::uint32 GpioChannel::pwmduty() const {
  // @@protoc_insertion_point(field_get:blox.GpioChannel.pwmDuty)
  return pwmduty_;
}
inline void GpioChannel::set_pwmduty(::google::protobuf::uint32 value) {
  
  pwmduty_ = value;
  // @@protoc_insertion_point(field_set:blox.GpioChannel.pwmDuty)
}

// -------------------------------------------------------------------

// OneWireGpioModule

// repeated .blox.GpioChannel channels = 1 [(.nanopb_test) = {
inline int OneWireGpioModule::channels_size() const {
  return channels_.size();
}
inline void OneWireGpioModule::clear_channels() {
  channels_.Clear();
}
inline ::blox::GpioChannel* OneWireGpioModule::mutable_channels(int index) {
  // @@protoc_insertion_point(field_mutable:blox.OneWireGpioModule.channels)
  return channels_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::blox::GpioChannel >*
OneWireGpioModule::mutable_channels() {
  // @@protoc_insertion_point(field_mutable_list:blox.OneWireGpioModule.channels)
  return &channels_;
}
inline const ::blox::GpioChannel& OneWireGpioModule::channels(int index) const {
  // @@protoc_insertion_point(field_get:blox.OneWireGpioModule.channels)
  return channels_.Get(index);
}
inline ::blox::GpioChannel* OneWireGpioModule::add_channels() {
  // @@protoc_insertion_point(field_add:blox.OneWireGpioModule.channels)
  return channels_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::blox::GpioChannel >&
OneWireGpioModule::channels() const {
  // @@protoc_insertion_point(field_list:blox.OneWireGpioModule.channels)
  return channels_;
}

// uint32 modulePosition = 2 [(.nanopb_test) = {
inline void OneWireGpioModule::clear_moduleposition() {
  moduleposition_ = 0u;
}
inline ::google::protobuf::uint32 OneWireGpioModule::moduleposition() const {
  // @@protoc_insertion_point(field_get:blox.OneWireGpioModule.modulePosition)
  return moduleposition_;
}
inline void OneWireGpioModule::set_moduleposition(::google::protobuf::uint32 value) {
  
  moduleposition_ = value;
  // @@protoc_insertion_point(field_set:blox.OneWireGpioModule.modulePosition)
}

// uint32 status = 3 [(.nanopb_test) = {
inline void OneWireGpioModule::clear_status() {
  status_ = 0u;
}
inline ::google::protobuf::uint32 OneWireGpioModule::status() const {
  // @@protoc_insertion_point(field_get:blox.OneWireGpioModule.status)
  return status_;
}
inline void OneWireGpioModule::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:blox.OneWireGpioModule.status)
}

// uint32 drive = 4 [(.nanopb_test) = {
inline void OneWireGpioModule::clear_drive() {
  drive_ = 0u;
}
inline ::google::protobuf::uint32 OneWireGpioModule::drive() const {
  // @@protoc_insertion_point(field_get:blox.OneWireGpioModule.drive)
  return drive_;
}
inline void OneWireGpioModule::set_drive(::google::protobuf::uint32 value) {
  
  drive_ = value;
  // @@protoc_insertion_point(field_set:blox.OneWireGpioModule.drive)
}

// uint32 overCurrent = 5 [(.nanopb_test) = {
inline void OneWireGpioModule::clear_overcurrent() {
  overcurrent_ = 0u;
}
inline ::google::protobuf::uint32 OneWireGpioModule::overcurrent() const {
  // @@protoc_insertion_point(field_get:blox.OneWireGpioModule.overCurrent)
  return overcurrent_;
}
inline void OneWireGpioModule::set_overcurrent(::google::protobuf::uint32 value) {
  
  overcurrent_ = value;
  // @@protoc_insertion_point(field_set:blox.OneWireGpioModule.overCurrent)
}

// uint32 openLoad = 6 [(.nanopb_test) = {
inline void OneWireGpioModule::clear_openload() {
  openload_ = 0u;
}
inline ::google::protobuf::uint32 OneWireGpioModule::openload() const {
  // @@protoc_insertion_point(field_get:blox.OneWireGpioModule.openLoad)
  return openload_;
}
inline void OneWireGpioModule::set_openload(::google::protobuf::uint32 value) {
  
  openload_ = value;
  // @@protoc_insertion_point(field_set:blox.OneWireGpioModule.openLoad)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace blox

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_OneWireGpioModule_5ftest_2eproto
