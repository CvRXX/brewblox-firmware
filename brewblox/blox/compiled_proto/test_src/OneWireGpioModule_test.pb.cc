// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OneWireGpioModule_test.proto

#include "OneWireGpioModule_test.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_OneWireGpioModule_5ftest_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_OneWireGpioModule_5ftest_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GpioChannel;
}  // namespace protobuf_OneWireGpioModule_5ftest_2eproto
namespace blox {
class GpioChannelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GpioChannel>
      _instance;
} _GpioChannel_default_instance_;
class OneWireGpioModuleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OneWireGpioModule>
      _instance;
} _OneWireGpioModule_default_instance_;
}  // namespace blox
namespace protobuf_OneWireGpioModule_5ftest_2eproto {
static void InitDefaultsGpioChannel() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::blox::_GpioChannel_default_instance_;
    new (ptr) ::blox::GpioChannel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::blox::GpioChannel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GpioChannel =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGpioChannel}, {}};

static void InitDefaultsOneWireGpioModule() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::blox::_OneWireGpioModule_default_instance_;
    new (ptr) ::blox::OneWireGpioModule();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::blox::OneWireGpioModule::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OneWireGpioModule =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOneWireGpioModule}, {
      &protobuf_OneWireGpioModule_5ftest_2eproto::scc_info_GpioChannel.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_GpioChannel.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OneWireGpioModule.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox::GpioChannel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox::GpioChannel, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox::GpioChannel, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox::GpioChannel, pins_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox::GpioChannel, whenactive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox::GpioChannel, wheninactive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox::GpioChannel, pwmduty_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox::OneWireGpioModule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox::OneWireGpioModule, channels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox::OneWireGpioModule, moduleposition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox::OneWireGpioModule, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox::OneWireGpioModule, drive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox::OneWireGpioModule, overcurrent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox::OneWireGpioModule, openload_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::blox::GpioChannel)},
  { 11, -1, sizeof(::blox::OneWireGpioModule)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::blox::_GpioChannel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::blox::_OneWireGpioModule_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "OneWireGpioModule_test.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\034OneWireGpioModule_test.proto\022\004blox\032\023br"
      "ewblox_test.proto\032\021nanopb_test.proto\032\022Io"
      "Array_test.proto\"\252\001\n\013GpioChannel\022\021\n\002id\030\001"
      " \001(\rB\005\222\?\0028\010\022#\n\006config\030\002 \001(\0162\023.blox.Chann"
      "elConfig\022\023\n\004pins\030\003 \001(\rB\005\222\?\0028\020\022\031\n\nwhenAct"
      "ive\030\004 \001(\rB\005\222\?\0028\020\022\033\n\014whenInactive\030\005 \001(\rB\005"
      "\222\?\0028\020\022\026\n\007pwmDuty\030\006 \001(\rB\005\222\?\0028\010\"\355\001\n\021OneWir"
      "eGpioModule\022*\n\010channels\030\001 \003(\0132\021.blox.Gpi"
      "oChannelB\005\222\?\002\020\010\022\035\n\016modulePosition\030\002 \001(\rB"
      "\005\222\?\0028\010\022\033\n\006status\030\003 \001(\rB\013\212\265\030\002(\001\222\?\0028\010\022\032\n\005d"
      "rive\030\004 \001(\rB\013\212\265\030\002(\001\222\?\0028\020\022 \n\013overCurrent\030\005"
      " \001(\rB\013\212\265\030\002(\001\222\?\0028\020\022\035\n\010openLoad\030\006 \001(\rB\013\212\265\030"
      "\002(\001\222\?\0028\020:\023\212\265\030\003\030\305\002\212\265\030\002H\n\212\265\030\002H\014b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 517);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "OneWireGpioModule_test.proto", &protobuf_RegisterTypes);
  ::protobuf_brewblox_5ftest_2eproto::AddDescriptors();
  ::protobuf_nanopb_5ftest_2eproto::AddDescriptors();
  ::protobuf_IoArray_5ftest_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_OneWireGpioModule_5ftest_2eproto
namespace blox {

// ===================================================================

void GpioChannel::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GpioChannel::kIdFieldNumber;
const int GpioChannel::kConfigFieldNumber;
const int GpioChannel::kPinsFieldNumber;
const int GpioChannel::kWhenActiveFieldNumber;
const int GpioChannel::kWhenInactiveFieldNumber;
const int GpioChannel::kPwmDutyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GpioChannel::GpioChannel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_OneWireGpioModule_5ftest_2eproto::scc_info_GpioChannel.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:blox.GpioChannel)
}
GpioChannel::GpioChannel(const GpioChannel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&pwmduty_) -
    reinterpret_cast<char*>(&id_)) + sizeof(pwmduty_));
  // @@protoc_insertion_point(copy_constructor:blox.GpioChannel)
}

void GpioChannel::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pwmduty_) -
      reinterpret_cast<char*>(&id_)) + sizeof(pwmduty_));
}

GpioChannel::~GpioChannel() {
  // @@protoc_insertion_point(destructor:blox.GpioChannel)
  SharedDtor();
}

void GpioChannel::SharedDtor() {
}

void GpioChannel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GpioChannel::descriptor() {
  ::protobuf_OneWireGpioModule_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OneWireGpioModule_5ftest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GpioChannel& GpioChannel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_OneWireGpioModule_5ftest_2eproto::scc_info_GpioChannel.base);
  return *internal_default_instance();
}


void GpioChannel::Clear() {
// @@protoc_insertion_point(message_clear_start:blox.GpioChannel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pwmduty_) -
      reinterpret_cast<char*>(&id_)) + sizeof(pwmduty_));
  _internal_metadata_.Clear();
}

bool GpioChannel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:blox.GpioChannel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1 [(.nanopb_test) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .blox.ChannelConfig config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_config(static_cast< ::blox::ChannelConfig >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pins = 3 [(.nanopb_test) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pins_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 whenActive = 4 [(.nanopb_test) = {
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &whenactive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 whenInactive = 5 [(.nanopb_test) = {
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wheninactive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pwmDuty = 6 [(.nanopb_test) = {
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pwmduty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:blox.GpioChannel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:blox.GpioChannel)
  return false;
#undef DO_
}

void GpioChannel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:blox.GpioChannel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1 [(.nanopb_test) = {
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // .blox.ChannelConfig config = 2;
  if (this->config() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->config(), output);
  }

  // uint32 pins = 3 [(.nanopb_test) = {
  if (this->pins() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->pins(), output);
  }

  // uint32 whenActive = 4 [(.nanopb_test) = {
  if (this->whenactive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->whenactive(), output);
  }

  // uint32 whenInactive = 5 [(.nanopb_test) = {
  if (this->wheninactive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->wheninactive(), output);
  }

  // uint32 pwmDuty = 6 [(.nanopb_test) = {
  if (this->pwmduty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->pwmduty(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:blox.GpioChannel)
}

::google::protobuf::uint8* GpioChannel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:blox.GpioChannel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1 [(.nanopb_test) = {
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // .blox.ChannelConfig config = 2;
  if (this->config() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->config(), target);
  }

  // uint32 pins = 3 [(.nanopb_test) = {
  if (this->pins() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->pins(), target);
  }

  // uint32 whenActive = 4 [(.nanopb_test) = {
  if (this->whenactive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->whenactive(), target);
  }

  // uint32 whenInactive = 5 [(.nanopb_test) = {
  if (this->wheninactive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->wheninactive(), target);
  }

  // uint32 pwmDuty = 6 [(.nanopb_test) = {
  if (this->pwmduty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->pwmduty(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blox.GpioChannel)
  return target;
}

size_t GpioChannel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blox.GpioChannel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 id = 1 [(.nanopb_test) = {
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // .blox.ChannelConfig config = 2;
  if (this->config() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->config());
  }

  // uint32 pins = 3 [(.nanopb_test) = {
  if (this->pins() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pins());
  }

  // uint32 whenActive = 4 [(.nanopb_test) = {
  if (this->whenactive() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->whenactive());
  }

  // uint32 whenInactive = 5 [(.nanopb_test) = {
  if (this->wheninactive() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->wheninactive());
  }

  // uint32 pwmDuty = 6 [(.nanopb_test) = {
  if (this->pwmduty() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pwmduty());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GpioChannel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:blox.GpioChannel)
  GOOGLE_DCHECK_NE(&from, this);
  const GpioChannel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GpioChannel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:blox.GpioChannel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:blox.GpioChannel)
    MergeFrom(*source);
  }
}

void GpioChannel::MergeFrom(const GpioChannel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blox.GpioChannel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.config() != 0) {
    set_config(from.config());
  }
  if (from.pins() != 0) {
    set_pins(from.pins());
  }
  if (from.whenactive() != 0) {
    set_whenactive(from.whenactive());
  }
  if (from.wheninactive() != 0) {
    set_wheninactive(from.wheninactive());
  }
  if (from.pwmduty() != 0) {
    set_pwmduty(from.pwmduty());
  }
}

void GpioChannel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:blox.GpioChannel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GpioChannel::CopyFrom(const GpioChannel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blox.GpioChannel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GpioChannel::IsInitialized() const {
  return true;
}

void GpioChannel::Swap(GpioChannel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GpioChannel::InternalSwap(GpioChannel* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(config_, other->config_);
  swap(pins_, other->pins_);
  swap(whenactive_, other->whenactive_);
  swap(wheninactive_, other->wheninactive_);
  swap(pwmduty_, other->pwmduty_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GpioChannel::GetMetadata() const {
  protobuf_OneWireGpioModule_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OneWireGpioModule_5ftest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OneWireGpioModule::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OneWireGpioModule::kChannelsFieldNumber;
const int OneWireGpioModule::kModulePositionFieldNumber;
const int OneWireGpioModule::kStatusFieldNumber;
const int OneWireGpioModule::kDriveFieldNumber;
const int OneWireGpioModule::kOverCurrentFieldNumber;
const int OneWireGpioModule::kOpenLoadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OneWireGpioModule::OneWireGpioModule()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_OneWireGpioModule_5ftest_2eproto::scc_info_OneWireGpioModule.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:blox.OneWireGpioModule)
}
OneWireGpioModule::OneWireGpioModule(const OneWireGpioModule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      channels_(from.channels_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&moduleposition_, &from.moduleposition_,
    static_cast<size_t>(reinterpret_cast<char*>(&openload_) -
    reinterpret_cast<char*>(&moduleposition_)) + sizeof(openload_));
  // @@protoc_insertion_point(copy_constructor:blox.OneWireGpioModule)
}

void OneWireGpioModule::SharedCtor() {
  ::memset(&moduleposition_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&openload_) -
      reinterpret_cast<char*>(&moduleposition_)) + sizeof(openload_));
}

OneWireGpioModule::~OneWireGpioModule() {
  // @@protoc_insertion_point(destructor:blox.OneWireGpioModule)
  SharedDtor();
}

void OneWireGpioModule::SharedDtor() {
}

void OneWireGpioModule::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OneWireGpioModule::descriptor() {
  ::protobuf_OneWireGpioModule_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OneWireGpioModule_5ftest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OneWireGpioModule& OneWireGpioModule::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_OneWireGpioModule_5ftest_2eproto::scc_info_OneWireGpioModule.base);
  return *internal_default_instance();
}


void OneWireGpioModule::Clear() {
// @@protoc_insertion_point(message_clear_start:blox.OneWireGpioModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channels_.Clear();
  ::memset(&moduleposition_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&openload_) -
      reinterpret_cast<char*>(&moduleposition_)) + sizeof(openload_));
  _internal_metadata_.Clear();
}

bool OneWireGpioModule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:blox.OneWireGpioModule)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .blox.GpioChannel channels = 1 [(.nanopb_test) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_channels()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 modulePosition = 2 [(.nanopb_test) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &moduleposition_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 status = 3 [(.nanopb_test) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 drive = 4 [(.nanopb_test) = {
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &drive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 overCurrent = 5 [(.nanopb_test) = {
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &overcurrent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 openLoad = 6 [(.nanopb_test) = {
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &openload_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:blox.OneWireGpioModule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:blox.OneWireGpioModule)
  return false;
#undef DO_
}

void OneWireGpioModule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:blox.OneWireGpioModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .blox.GpioChannel channels = 1 [(.nanopb_test) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channels_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->channels(static_cast<int>(i)),
      output);
  }

  // uint32 modulePosition = 2 [(.nanopb_test) = {
  if (this->moduleposition() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->moduleposition(), output);
  }

  // uint32 status = 3 [(.nanopb_test) = {
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->status(), output);
  }

  // uint32 drive = 4 [(.nanopb_test) = {
  if (this->drive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->drive(), output);
  }

  // uint32 overCurrent = 5 [(.nanopb_test) = {
  if (this->overcurrent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->overcurrent(), output);
  }

  // uint32 openLoad = 6 [(.nanopb_test) = {
  if (this->openload() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->openload(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:blox.OneWireGpioModule)
}

::google::protobuf::uint8* OneWireGpioModule::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:blox.OneWireGpioModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .blox.GpioChannel channels = 1 [(.nanopb_test) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channels_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->channels(static_cast<int>(i)), deterministic, target);
  }

  // uint32 modulePosition = 2 [(.nanopb_test) = {
  if (this->moduleposition() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->moduleposition(), target);
  }

  // uint32 status = 3 [(.nanopb_test) = {
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->status(), target);
  }

  // uint32 drive = 4 [(.nanopb_test) = {
  if (this->drive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->drive(), target);
  }

  // uint32 overCurrent = 5 [(.nanopb_test) = {
  if (this->overcurrent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->overcurrent(), target);
  }

  // uint32 openLoad = 6 [(.nanopb_test) = {
  if (this->openload() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->openload(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blox.OneWireGpioModule)
  return target;
}

size_t OneWireGpioModule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blox.OneWireGpioModule)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .blox.GpioChannel channels = 1 [(.nanopb_test) = {
  {
    unsigned int count = static_cast<unsigned int>(this->channels_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->channels(static_cast<int>(i)));
    }
  }

  // uint32 modulePosition = 2 [(.nanopb_test) = {
  if (this->moduleposition() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->moduleposition());
  }

  // uint32 status = 3 [(.nanopb_test) = {
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());
  }

  // uint32 drive = 4 [(.nanopb_test) = {
  if (this->drive() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->drive());
  }

  // uint32 overCurrent = 5 [(.nanopb_test) = {
  if (this->overcurrent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->overcurrent());
  }

  // uint32 openLoad = 6 [(.nanopb_test) = {
  if (this->openload() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->openload());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OneWireGpioModule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:blox.OneWireGpioModule)
  GOOGLE_DCHECK_NE(&from, this);
  const OneWireGpioModule* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OneWireGpioModule>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:blox.OneWireGpioModule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:blox.OneWireGpioModule)
    MergeFrom(*source);
  }
}

void OneWireGpioModule::MergeFrom(const OneWireGpioModule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blox.OneWireGpioModule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  channels_.MergeFrom(from.channels_);
  if (from.moduleposition() != 0) {
    set_moduleposition(from.moduleposition());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.drive() != 0) {
    set_drive(from.drive());
  }
  if (from.overcurrent() != 0) {
    set_overcurrent(from.overcurrent());
  }
  if (from.openload() != 0) {
    set_openload(from.openload());
  }
}

void OneWireGpioModule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:blox.OneWireGpioModule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneWireGpioModule::CopyFrom(const OneWireGpioModule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blox.OneWireGpioModule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneWireGpioModule::IsInitialized() const {
  return true;
}

void OneWireGpioModule::Swap(OneWireGpioModule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OneWireGpioModule::InternalSwap(OneWireGpioModule* other) {
  using std::swap;
  CastToBase(&channels_)->InternalSwap(CastToBase(&other->channels_));
  swap(moduleposition_, other->moduleposition_);
  swap(status_, other->status_);
  swap(drive_, other->drive_);
  swap(overcurrent_, other->overcurrent_);
  swap(openload_, other->openload_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OneWireGpioModule::GetMetadata() const {
  protobuf_OneWireGpioModule_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OneWireGpioModule_5ftest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace blox
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::blox::GpioChannel* Arena::CreateMaybeMessage< ::blox::GpioChannel >(Arena* arena) {
  return Arena::CreateInternal< ::blox::GpioChannel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::blox::OneWireGpioModule* Arena::CreateMaybeMessage< ::blox::OneWireGpioModule >(Arena* arena) {
  return Arena::CreateInternal< ::blox::OneWireGpioModule >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
