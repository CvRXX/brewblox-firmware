// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SysInfo_test.proto

#include "SysInfo_test.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_SysInfo_5ftest_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_SysInfo_5ftest_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Trace;
}  // namespace protobuf_SysInfo_5ftest_2eproto
namespace blox {
class TraceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Trace>
      _instance;
} _Trace_default_instance_;
class SysInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SysInfo>
      _instance;
} _SysInfo_default_instance_;
}  // namespace blox
namespace protobuf_SysInfo_5ftest_2eproto {
static void InitDefaultsTrace() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::blox::_Trace_default_instance_;
    new (ptr) ::blox::Trace();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::blox::Trace::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Trace =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTrace}, {}};

static void InitDefaultsSysInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::blox::_SysInfo_default_instance_;
    new (ptr) ::blox::SysInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::blox::SysInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SysInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSysInfo}, {
      &protobuf_SysInfo_5ftest_2eproto::scc_info_Trace.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Trace.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SysInfo.base);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox::Trace, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox::Trace, action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox::Trace, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox::Trace, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox::SysInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox::SysInfo, deviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox::SysInfo, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox::SysInfo, platform_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox::SysInfo, protocolversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox::SysInfo, releasedate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox::SysInfo, protocoldate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox::SysInfo, command_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox::SysInfo, trace_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::blox::Trace)},
  { 8, -1, sizeof(::blox::SysInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::blox::_Trace_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::blox::_SysInfo_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "SysInfo_test.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022SysInfo_test.proto\022\004blox\032\023brewblox_tes"
      "t.proto\032\021nanopb_test.proto\"\352\005\n\005Trace\022\"\n\006"
      "action\030\001 \001(\0162\022.blox.Trace.Action\022\021\n\002id\030\002"
      " \001(\rB\005\222\?\0028\020\022\023\n\004type\030\003 \001(\rB\005\222\?\0028\020\"\224\005\n\006Act"
      "ion\022\010\n\004NONE\020\000\022\017\n\013READ_OBJECT\020\001\022\020\n\014WRITE_"
      "OBJECT\020\002\022\021\n\rCREATE_OBJECT\020\003\022\021\n\rDELETE_OB"
      "JECT\020\004\022\027\n\023LIST_ACTIVE_OBJECTS\020\005\022\026\n\022READ_"
      "STORED_OBJECT\020\006\022\027\n\023LIST_STORED_OBJECTS\020\007"
      "\022\021\n\rCLEAR_OBJECTS\020\010\022\n\n\006REBOOT\020\t\022\021\n\rFACTO"
      "RY_RESET\020\n\022\033\n\027LIST_COMPATIBLE_OBJECTS\020\013\022"
      "\030\n\024DISCOVER_NEW_OBJECTS\020\014\022\024\n\020CONSTRUCT_O"
      "BJECT\020\024\022\023\n\017DESTRUCT_OBJECT\020\025\022\026\n\022STREAM_F"
      "ROM_OBJECT\020\026\022\024\n\020STREAM_TO_OBJECT\020\027\022\021\n\rUP"
      "DATE_OBJECT\020\030\022\022\n\016PERSIST_OBJECT\020\031\022\026\n\022LOA"
      "D_STORED_OBJECT\020\032\022\022\n\016UPDATE_OBJECTS\020\033\022\026\n"
      "\022UPDATE_CONNECTIONS\020\034\022\022\n\016UPDATE_DISPLAY\020"
      "e\022\020\n\014SYSTEM_TASKS\020f\022\027\n\023MANAGE_CONNECTIVI"
      "TY\020g\022\016\n\nMDNS_START\020h\022\020\n\014MDNS_PROCESS\020i\022\016"
      "\n\nHTTP_START\020j\022\r\n\tHTTP_STOP\020k\022\021\n\rHTTP_RE"
      "SPONSE\020l\022\020\n\014WIFI_CONNECT\020m\022\033\n\027FIRMWARE_U"
      "PDATE_STARTED\020n\"\231\004\n\007SysInfo\022#\n\010deviceId\030"
      "\001 \001(\014B\021\212\265\030\002(\001\222\?\002\010\014\212\265\030\0028\001\022\034\n\007version\030\002 \001("
      "\tB\013\212\265\030\002(\001\222\?\002\010\014\0220\n\010platform\030\003 \001(\0162\026.blox."
      "SysInfo.PlatformB\006\212\265\030\002(\001\022$\n\017protocolVers"
      "ion\030\007 \001(\tB\013\212\265\030\002(\001\222\?\002\010\014\022 \n\013releaseDate\030\010 "
      "\001(\tB\013\212\265\030\002(\001\222\?\002\010\014\022!\n\014protocolDate\030\t \001(\tB\013"
      "\212\265\030\002(\001\222\?\002\010\014\022-\n\007command\030\n \001(\0162\034.blox.SysI"
      "nfo.SysInfoCommand\022\'\n\005trace\030\013 \003(\0132\013.blox"
      ".TraceB\013\212\265\030\002(\001\222\?\002\020\n\"X\n\010Platform\022\024\n\020PLATF"
      "ORM_UNKNOWN\020\000\022\020\n\014PLATFORM_GCC\020\003\022\023\n\017PLATF"
      "ORM_PHOTON\020\006\022\017\n\013PLATFORM_P1\020\010\"s\n\016SysInfo"
      "Command\022\020\n\014SYS_CMD_NONE\020\000\022\026\n\022SYS_CMD_TRA"
      "CE_READ\020\001\022\030\n\024SYS_CMD_TRACE_RESUME\020\002\022\035\n\031S"
      "YS_CMD_TRACE_READ_RESUME\020\003:\007\212\265\030\003\030\200\002b\006pro"
      "to3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1363);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "SysInfo_test.proto", &protobuf_RegisterTypes);
  ::protobuf_brewblox_5ftest_2eproto::AddDescriptors();
  ::protobuf_nanopb_5ftest_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_SysInfo_5ftest_2eproto
namespace blox {
const ::google::protobuf::EnumDescriptor* Trace_Action_descriptor() {
  protobuf_SysInfo_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SysInfo_5ftest_2eproto::file_level_enum_descriptors[0];
}
bool Trace_Action_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Trace_Action Trace::NONE;
const Trace_Action Trace::READ_OBJECT;
const Trace_Action Trace::WRITE_OBJECT;
const Trace_Action Trace::CREATE_OBJECT;
const Trace_Action Trace::DELETE_OBJECT;
const Trace_Action Trace::LIST_ACTIVE_OBJECTS;
const Trace_Action Trace::READ_STORED_OBJECT;
const Trace_Action Trace::LIST_STORED_OBJECTS;
const Trace_Action Trace::CLEAR_OBJECTS;
const Trace_Action Trace::REBOOT;
const Trace_Action Trace::FACTORY_RESET;
const Trace_Action Trace::LIST_COMPATIBLE_OBJECTS;
const Trace_Action Trace::DISCOVER_NEW_OBJECTS;
const Trace_Action Trace::CONSTRUCT_OBJECT;
const Trace_Action Trace::DESTRUCT_OBJECT;
const Trace_Action Trace::STREAM_FROM_OBJECT;
const Trace_Action Trace::STREAM_TO_OBJECT;
const Trace_Action Trace::UPDATE_OBJECT;
const Trace_Action Trace::PERSIST_OBJECT;
const Trace_Action Trace::LOAD_STORED_OBJECT;
const Trace_Action Trace::UPDATE_OBJECTS;
const Trace_Action Trace::UPDATE_CONNECTIONS;
const Trace_Action Trace::UPDATE_DISPLAY;
const Trace_Action Trace::SYSTEM_TASKS;
const Trace_Action Trace::MANAGE_CONNECTIVITY;
const Trace_Action Trace::MDNS_START;
const Trace_Action Trace::MDNS_PROCESS;
const Trace_Action Trace::HTTP_START;
const Trace_Action Trace::HTTP_STOP;
const Trace_Action Trace::HTTP_RESPONSE;
const Trace_Action Trace::WIFI_CONNECT;
const Trace_Action Trace::FIRMWARE_UPDATE_STARTED;
const Trace_Action Trace::Action_MIN;
const Trace_Action Trace::Action_MAX;
const int Trace::Action_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SysInfo_Platform_descriptor() {
  protobuf_SysInfo_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SysInfo_5ftest_2eproto::file_level_enum_descriptors[1];
}
bool SysInfo_Platform_IsValid(int value) {
  switch (value) {
    case 0:
    case 3:
    case 6:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SysInfo_Platform SysInfo::PLATFORM_UNKNOWN;
const SysInfo_Platform SysInfo::PLATFORM_GCC;
const SysInfo_Platform SysInfo::PLATFORM_PHOTON;
const SysInfo_Platform SysInfo::PLATFORM_P1;
const SysInfo_Platform SysInfo::Platform_MIN;
const SysInfo_Platform SysInfo::Platform_MAX;
const int SysInfo::Platform_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SysInfo_SysInfoCommand_descriptor() {
  protobuf_SysInfo_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SysInfo_5ftest_2eproto::file_level_enum_descriptors[2];
}
bool SysInfo_SysInfoCommand_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SysInfo_SysInfoCommand SysInfo::SYS_CMD_NONE;
const SysInfo_SysInfoCommand SysInfo::SYS_CMD_TRACE_READ;
const SysInfo_SysInfoCommand SysInfo::SYS_CMD_TRACE_RESUME;
const SysInfo_SysInfoCommand SysInfo::SYS_CMD_TRACE_READ_RESUME;
const SysInfo_SysInfoCommand SysInfo::SysInfoCommand_MIN;
const SysInfo_SysInfoCommand SysInfo::SysInfoCommand_MAX;
const int SysInfo::SysInfoCommand_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Trace::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Trace::kActionFieldNumber;
const int Trace::kIdFieldNumber;
const int Trace::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Trace::Trace()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_SysInfo_5ftest_2eproto::scc_info_Trace.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:blox.Trace)
}
Trace::Trace(const Trace& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&action_, &from.action_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&action_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:blox.Trace)
}

void Trace::SharedCtor() {
  ::memset(&action_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&action_)) + sizeof(type_));
}

Trace::~Trace() {
  // @@protoc_insertion_point(destructor:blox.Trace)
  SharedDtor();
}

void Trace::SharedDtor() {
}

void Trace::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Trace::descriptor() {
  ::protobuf_SysInfo_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_SysInfo_5ftest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Trace& Trace::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_SysInfo_5ftest_2eproto::scc_info_Trace.base);
  return *internal_default_instance();
}


void Trace::Clear() {
// @@protoc_insertion_point(message_clear_start:blox.Trace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&action_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&action_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool Trace::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:blox.Trace)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .blox.Trace.Action action = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_action(static_cast< ::blox::Trace_Action >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 id = 2 [(.nanopb_test) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 type = 3 [(.nanopb_test) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:blox.Trace)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:blox.Trace)
  return false;
#undef DO_
}

void Trace::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:blox.Trace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .blox.Trace.Action action = 1;
  if (this->action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->action(), output);
  }

  // uint32 id = 2 [(.nanopb_test) = {
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->id(), output);
  }

  // uint32 type = 3 [(.nanopb_test) = {
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:blox.Trace)
}

::google::protobuf::uint8* Trace::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:blox.Trace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .blox.Trace.Action action = 1;
  if (this->action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->action(), target);
  }

  // uint32 id = 2 [(.nanopb_test) = {
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->id(), target);
  }

  // uint32 type = 3 [(.nanopb_test) = {
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blox.Trace)
  return target;
}

size_t Trace::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blox.Trace)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .blox.Trace.Action action = 1;
  if (this->action() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->action());
  }

  // uint32 id = 2 [(.nanopb_test) = {
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // uint32 type = 3 [(.nanopb_test) = {
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Trace::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:blox.Trace)
  GOOGLE_DCHECK_NE(&from, this);
  const Trace* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Trace>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:blox.Trace)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:blox.Trace)
    MergeFrom(*source);
  }
}

void Trace::MergeFrom(const Trace& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blox.Trace)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.action() != 0) {
    set_action(from.action());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Trace::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:blox.Trace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Trace::CopyFrom(const Trace& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blox.Trace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Trace::IsInitialized() const {
  return true;
}

void Trace::Swap(Trace* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Trace::InternalSwap(Trace* other) {
  using std::swap;
  swap(action_, other->action_);
  swap(id_, other->id_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Trace::GetMetadata() const {
  protobuf_SysInfo_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_SysInfo_5ftest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SysInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SysInfo::kDeviceIdFieldNumber;
const int SysInfo::kVersionFieldNumber;
const int SysInfo::kPlatformFieldNumber;
const int SysInfo::kProtocolVersionFieldNumber;
const int SysInfo::kReleaseDateFieldNumber;
const int SysInfo::kProtocolDateFieldNumber;
const int SysInfo::kCommandFieldNumber;
const int SysInfo::kTraceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SysInfo::SysInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_SysInfo_5ftest_2eproto::scc_info_SysInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:blox.SysInfo)
}
SysInfo::SysInfo(const SysInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      trace_(from.trace_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deviceid().size() > 0) {
    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  protocolversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.protocolversion().size() > 0) {
    protocolversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.protocolversion_);
  }
  releasedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.releasedate().size() > 0) {
    releasedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.releasedate_);
  }
  protocoldate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.protocoldate().size() > 0) {
    protocoldate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.protocoldate_);
  }
  ::memcpy(&platform_, &from.platform_,
    static_cast<size_t>(reinterpret_cast<char*>(&command_) -
    reinterpret_cast<char*>(&platform_)) + sizeof(command_));
  // @@protoc_insertion_point(copy_constructor:blox.SysInfo)
}

void SysInfo::SharedCtor() {
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  protocolversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  releasedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  protocoldate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&platform_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&command_) -
      reinterpret_cast<char*>(&platform_)) + sizeof(command_));
}

SysInfo::~SysInfo() {
  // @@protoc_insertion_point(destructor:blox.SysInfo)
  SharedDtor();
}

void SysInfo::SharedDtor() {
  deviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  protocolversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  releasedate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  protocoldate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SysInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SysInfo::descriptor() {
  ::protobuf_SysInfo_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_SysInfo_5ftest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SysInfo& SysInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_SysInfo_5ftest_2eproto::scc_info_SysInfo.base);
  return *internal_default_instance();
}


void SysInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:blox.SysInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  trace_.Clear();
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  protocolversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  releasedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  protocoldate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&platform_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&command_) -
      reinterpret_cast<char*>(&platform_)) + sizeof(command_));
  _internal_metadata_.Clear();
}

bool SysInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:blox.SysInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes deviceId = 1 [(.nanopb_test) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_deviceid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version = 2 [(.nanopb_test) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "blox.SysInfo.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .blox.SysInfo.Platform platform = 3 [(.brewblox_test) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_platform(static_cast< ::blox::SysInfo_Platform >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string protocolVersion = 7 [(.nanopb_test) = {
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_protocolversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->protocolversion().data(), static_cast<int>(this->protocolversion().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "blox.SysInfo.protocolVersion"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string releaseDate = 8 [(.nanopb_test) = {
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_releasedate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->releasedate().data(), static_cast<int>(this->releasedate().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "blox.SysInfo.releaseDate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string protocolDate = 9 [(.nanopb_test) = {
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_protocoldate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->protocoldate().data(), static_cast<int>(this->protocoldate().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "blox.SysInfo.protocolDate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .blox.SysInfo.SysInfoCommand command = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_command(static_cast< ::blox::SysInfo_SysInfoCommand >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .blox.Trace trace = 11 [(.nanopb_test) = {
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_trace()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:blox.SysInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:blox.SysInfo)
  return false;
#undef DO_
}

void SysInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:blox.SysInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes deviceId = 1 [(.nanopb_test) = {
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->deviceid(), output);
  }

  // string version = 2 [(.nanopb_test) = {
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "blox.SysInfo.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->version(), output);
  }

  // .blox.SysInfo.Platform platform = 3 [(.brewblox_test) = {
  if (this->platform() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->platform(), output);
  }

  // string protocolVersion = 7 [(.nanopb_test) = {
  if (this->protocolversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->protocolversion().data(), static_cast<int>(this->protocolversion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "blox.SysInfo.protocolVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->protocolversion(), output);
  }

  // string releaseDate = 8 [(.nanopb_test) = {
  if (this->releasedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->releasedate().data(), static_cast<int>(this->releasedate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "blox.SysInfo.releaseDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->releasedate(), output);
  }

  // string protocolDate = 9 [(.nanopb_test) = {
  if (this->protocoldate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->protocoldate().data(), static_cast<int>(this->protocoldate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "blox.SysInfo.protocolDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->protocoldate(), output);
  }

  // .blox.SysInfo.SysInfoCommand command = 10;
  if (this->command() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->command(), output);
  }

  // repeated .blox.Trace trace = 11 [(.nanopb_test) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->trace_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->trace(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:blox.SysInfo)
}

::google::protobuf::uint8* SysInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:blox.SysInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes deviceId = 1 [(.nanopb_test) = {
  if (this->deviceid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->deviceid(), target);
  }

  // string version = 2 [(.nanopb_test) = {
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "blox.SysInfo.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->version(), target);
  }

  // .blox.SysInfo.Platform platform = 3 [(.brewblox_test) = {
  if (this->platform() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->platform(), target);
  }

  // string protocolVersion = 7 [(.nanopb_test) = {
  if (this->protocolversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->protocolversion().data(), static_cast<int>(this->protocolversion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "blox.SysInfo.protocolVersion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->protocolversion(), target);
  }

  // string releaseDate = 8 [(.nanopb_test) = {
  if (this->releasedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->releasedate().data(), static_cast<int>(this->releasedate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "blox.SysInfo.releaseDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->releasedate(), target);
  }

  // string protocolDate = 9 [(.nanopb_test) = {
  if (this->protocoldate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->protocoldate().data(), static_cast<int>(this->protocoldate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "blox.SysInfo.protocolDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->protocoldate(), target);
  }

  // .blox.SysInfo.SysInfoCommand command = 10;
  if (this->command() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->command(), target);
  }

  // repeated .blox.Trace trace = 11 [(.nanopb_test) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->trace_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->trace(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blox.SysInfo)
  return target;
}

size_t SysInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blox.SysInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .blox.Trace trace = 11 [(.nanopb_test) = {
  {
    unsigned int count = static_cast<unsigned int>(this->trace_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->trace(static_cast<int>(i)));
    }
  }

  // bytes deviceId = 1 [(.nanopb_test) = {
  if (this->deviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->deviceid());
  }

  // string version = 2 [(.nanopb_test) = {
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // string protocolVersion = 7 [(.nanopb_test) = {
  if (this->protocolversion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->protocolversion());
  }

  // string releaseDate = 8 [(.nanopb_test) = {
  if (this->releasedate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->releasedate());
  }

  // string protocolDate = 9 [(.nanopb_test) = {
  if (this->protocoldate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->protocoldate());
  }

  // .blox.SysInfo.Platform platform = 3 [(.brewblox_test) = {
  if (this->platform() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->platform());
  }

  // .blox.SysInfo.SysInfoCommand command = 10;
  if (this->command() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->command());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SysInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:blox.SysInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SysInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SysInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:blox.SysInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:blox.SysInfo)
    MergeFrom(*source);
  }
}

void SysInfo::MergeFrom(const SysInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blox.SysInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  trace_.MergeFrom(from.trace_);
  if (from.deviceid().size() > 0) {

    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.protocolversion().size() > 0) {

    protocolversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.protocolversion_);
  }
  if (from.releasedate().size() > 0) {

    releasedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.releasedate_);
  }
  if (from.protocoldate().size() > 0) {

    protocoldate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.protocoldate_);
  }
  if (from.platform() != 0) {
    set_platform(from.platform());
  }
  if (from.command() != 0) {
    set_command(from.command());
  }
}

void SysInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:blox.SysInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SysInfo::CopyFrom(const SysInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blox.SysInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SysInfo::IsInitialized() const {
  return true;
}

void SysInfo::Swap(SysInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SysInfo::InternalSwap(SysInfo* other) {
  using std::swap;
  CastToBase(&trace_)->InternalSwap(CastToBase(&other->trace_));
  deviceid_.Swap(&other->deviceid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  protocolversion_.Swap(&other->protocolversion_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  releasedate_.Swap(&other->releasedate_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  protocoldate_.Swap(&other->protocoldate_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(platform_, other->platform_);
  swap(command_, other->command_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SysInfo::GetMetadata() const {
  protobuf_SysInfo_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_SysInfo_5ftest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace blox
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::blox::Trace* Arena::CreateMaybeMessage< ::blox::Trace >(Arena* arena) {
  return Arena::CreateInternal< ::blox::Trace >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::blox::SysInfo* Arena::CreateMaybeMessage< ::blox::SysInfo >(Arena* arena) {
  return Arena::CreateInternal< ::blox::SysInfo >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
