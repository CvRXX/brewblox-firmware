// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Ticks_test.proto

#include "Ticks_test.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace blox {
constexpr Ticks::Ticks(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : millissinceboot_(0u)
  , secondssinceepoch_(0u)
  , avgcommunicationtask_(0u)
  , avgblocksupdatetask_(0u)
  , avgdisplaytask_(0u)
  , avgsystemtask_(0u){}
struct TicksDefaultTypeInternal {
  constexpr TicksDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TicksDefaultTypeInternal() {}
  union {
    Ticks _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TicksDefaultTypeInternal _Ticks_default_instance_;
}  // namespace blox
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_Ticks_5ftest_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_Ticks_5ftest_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_Ticks_5ftest_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_Ticks_5ftest_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::blox::Ticks, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::blox::Ticks, millissinceboot_),
  PROTOBUF_FIELD_OFFSET(::blox::Ticks, secondssinceepoch_),
  PROTOBUF_FIELD_OFFSET(::blox::Ticks, avgcommunicationtask_),
  PROTOBUF_FIELD_OFFSET(::blox::Ticks, avgblocksupdatetask_),
  PROTOBUF_FIELD_OFFSET(::blox::Ticks, avgdisplaytask_),
  PROTOBUF_FIELD_OFFSET(::blox::Ticks, avgsystemtask_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::blox::Ticks)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::blox::_Ticks_default_instance_),
};

const char descriptor_table_protodef_Ticks_5ftest_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020Ticks_test.proto\022\004blox\032\023brewblox_test."
  "proto\032\021nanopb_test.proto\"\216\002\n\005Ticks\022$\n\017mi"
  "llisSinceBoot\030\001 \001(\rB\013\212\265\030\002(\001\222\?\0028 \022 \n\021seco"
  "ndsSinceEpoch\030\002 \001(\rB\005\222\?\0028 \022/\n\024avgCommuni"
  "cationTask\030\003 \001(\rB\021\212\265\030\002(\001\212\265\030\002\020 \222\?\0028 \022.\n\023a"
  "vgBlocksUpdateTask\030\004 \001(\rB\021\212\265\030\002(\001\212\265\030\002\020 \222\?"
  "\0028 \022)\n\016avgDisplayTask\030\005 \001(\rB\021\212\265\030\002(\001\212\265\030\002\020"
  " \222\?\0028 \022(\n\ravgSystemTask\030\006 \001(\rB\021\212\265\030\002(\001\212\265\030"
  "\002\020 \222\?\0028 :\007\212\265\030\003\030\201\002b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_Ticks_5ftest_2eproto_deps[2] = {
  &::descriptor_table_brewblox_5ftest_2eproto,
  &::descriptor_table_nanopb_5ftest_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_Ticks_5ftest_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Ticks_5ftest_2eproto = {
  false, false, 345, descriptor_table_protodef_Ticks_5ftest_2eproto, "Ticks_test.proto", 
  &descriptor_table_Ticks_5ftest_2eproto_once, descriptor_table_Ticks_5ftest_2eproto_deps, 2, 1,
  schemas, file_default_instances, TableStruct_Ticks_5ftest_2eproto::offsets,
  file_level_metadata_Ticks_5ftest_2eproto, file_level_enum_descriptors_Ticks_5ftest_2eproto, file_level_service_descriptors_Ticks_5ftest_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_Ticks_5ftest_2eproto_getter() {
  return &descriptor_table_Ticks_5ftest_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_Ticks_5ftest_2eproto(&descriptor_table_Ticks_5ftest_2eproto);
namespace blox {

// ===================================================================

class Ticks::_Internal {
 public:
};

Ticks::Ticks(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:blox.Ticks)
}
Ticks::Ticks(const Ticks& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&millissinceboot_, &from.millissinceboot_,
    static_cast<size_t>(reinterpret_cast<char*>(&avgsystemtask_) -
    reinterpret_cast<char*>(&millissinceboot_)) + sizeof(avgsystemtask_));
  // @@protoc_insertion_point(copy_constructor:blox.Ticks)
}

inline void Ticks::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&millissinceboot_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&avgsystemtask_) -
    reinterpret_cast<char*>(&millissinceboot_)) + sizeof(avgsystemtask_));
}

Ticks::~Ticks() {
  // @@protoc_insertion_point(destructor:blox.Ticks)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Ticks::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Ticks::ArenaDtor(void* object) {
  Ticks* _this = reinterpret_cast< Ticks* >(object);
  (void)_this;
}
void Ticks::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Ticks::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Ticks::Clear() {
// @@protoc_insertion_point(message_clear_start:blox.Ticks)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&millissinceboot_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avgsystemtask_) -
      reinterpret_cast<char*>(&millissinceboot_)) + sizeof(avgsystemtask_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Ticks::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 millisSinceBoot = 1 [(.nanopb_test) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          millissinceboot_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 secondsSinceEpoch = 2 [(.nanopb_test) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          secondssinceepoch_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 avgCommunicationTask = 3 [(.nanopb_test) = {
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          avgcommunicationtask_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 avgBlocksUpdateTask = 4 [(.nanopb_test) = {
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          avgblocksupdatetask_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 avgDisplayTask = 5 [(.nanopb_test) = {
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          avgdisplaytask_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 avgSystemTask = 6 [(.nanopb_test) = {
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          avgsystemtask_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Ticks::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:blox.Ticks)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 millisSinceBoot = 1 [(.nanopb_test) = {
  if (this->_internal_millissinceboot() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_millissinceboot(), target);
  }

  // uint32 secondsSinceEpoch = 2 [(.nanopb_test) = {
  if (this->_internal_secondssinceepoch() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_secondssinceepoch(), target);
  }

  // uint32 avgCommunicationTask = 3 [(.nanopb_test) = {
  if (this->_internal_avgcommunicationtask() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_avgcommunicationtask(), target);
  }

  // uint32 avgBlocksUpdateTask = 4 [(.nanopb_test) = {
  if (this->_internal_avgblocksupdatetask() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_avgblocksupdatetask(), target);
  }

  // uint32 avgDisplayTask = 5 [(.nanopb_test) = {
  if (this->_internal_avgdisplaytask() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_avgdisplaytask(), target);
  }

  // uint32 avgSystemTask = 6 [(.nanopb_test) = {
  if (this->_internal_avgsystemtask() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_avgsystemtask(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blox.Ticks)
  return target;
}

size_t Ticks::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blox.Ticks)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 millisSinceBoot = 1 [(.nanopb_test) = {
  if (this->_internal_millissinceboot() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_millissinceboot());
  }

  // uint32 secondsSinceEpoch = 2 [(.nanopb_test) = {
  if (this->_internal_secondssinceepoch() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_secondssinceepoch());
  }

  // uint32 avgCommunicationTask = 3 [(.nanopb_test) = {
  if (this->_internal_avgcommunicationtask() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_avgcommunicationtask());
  }

  // uint32 avgBlocksUpdateTask = 4 [(.nanopb_test) = {
  if (this->_internal_avgblocksupdatetask() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_avgblocksupdatetask());
  }

  // uint32 avgDisplayTask = 5 [(.nanopb_test) = {
  if (this->_internal_avgdisplaytask() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_avgdisplaytask());
  }

  // uint32 avgSystemTask = 6 [(.nanopb_test) = {
  if (this->_internal_avgsystemtask() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_avgsystemtask());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Ticks::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Ticks::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Ticks::GetClassData() const { return &_class_data_; }

void Ticks::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<Ticks *>(to)->MergeFrom(
      static_cast<const Ticks &>(from));
}


void Ticks::MergeFrom(const Ticks& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blox.Ticks)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_millissinceboot() != 0) {
    _internal_set_millissinceboot(from._internal_millissinceboot());
  }
  if (from._internal_secondssinceepoch() != 0) {
    _internal_set_secondssinceepoch(from._internal_secondssinceepoch());
  }
  if (from._internal_avgcommunicationtask() != 0) {
    _internal_set_avgcommunicationtask(from._internal_avgcommunicationtask());
  }
  if (from._internal_avgblocksupdatetask() != 0) {
    _internal_set_avgblocksupdatetask(from._internal_avgblocksupdatetask());
  }
  if (from._internal_avgdisplaytask() != 0) {
    _internal_set_avgdisplaytask(from._internal_avgdisplaytask());
  }
  if (from._internal_avgsystemtask() != 0) {
    _internal_set_avgsystemtask(from._internal_avgsystemtask());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Ticks::CopyFrom(const Ticks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blox.Ticks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ticks::IsInitialized() const {
  return true;
}

void Ticks::InternalSwap(Ticks* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Ticks, avgsystemtask_)
      + sizeof(Ticks::avgsystemtask_)
      - PROTOBUF_FIELD_OFFSET(Ticks, millissinceboot_)>(
          reinterpret_cast<char*>(&millissinceboot_),
          reinterpret_cast<char*>(&other->millissinceboot_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Ticks::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Ticks_5ftest_2eproto_getter, &descriptor_table_Ticks_5ftest_2eproto_once,
      file_level_metadata_Ticks_5ftest_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace blox
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::blox::Ticks* Arena::CreateMaybeMessage< ::blox::Ticks >(Arena* arena) {
  return Arena::CreateMessageInternal< ::blox::Ticks >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
