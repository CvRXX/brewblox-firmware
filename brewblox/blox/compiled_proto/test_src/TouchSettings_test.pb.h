// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TouchSettings_test.proto

#ifndef PROTOBUF_INCLUDED_TouchSettings_5ftest_2eproto
#define PROTOBUF_INCLUDED_TouchSettings_5ftest_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "brewblox_test.pb.h"
#include "nanopb_test.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_TouchSettings_5ftest_2eproto 

namespace protobuf_TouchSettings_5ftest_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_TouchSettings_5ftest_2eproto
namespace blox_test {
namespace TouchSettings {
class Block;
class BlockDefaultTypeInternal;
extern BlockDefaultTypeInternal _Block_default_instance_;
}  // namespace TouchSettings
}  // namespace blox_test
namespace google {
namespace protobuf {
template<> ::blox_test::TouchSettings::Block* Arena::CreateMaybeMessage<::blox_test::TouchSettings::Block>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace blox_test {
namespace TouchSettings {

enum Calibrated {
  CALIBRATED_NO = 0,
  CALIBRATED_YES = 1,
  CALIBRATED_NEW = 2,
  Calibrated_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Calibrated_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Calibrated_IsValid(int value);
const Calibrated Calibrated_MIN = CALIBRATED_NO;
const Calibrated Calibrated_MAX = CALIBRATED_NEW;
const int Calibrated_ARRAYSIZE = Calibrated_MAX + 1;

const ::google::protobuf::EnumDescriptor* Calibrated_descriptor();
inline const ::std::string& Calibrated_Name(Calibrated value) {
  return ::google::protobuf::internal::NameOfEnum(
    Calibrated_descriptor(), value);
}
inline bool Calibrated_Parse(
    const ::std::string& name, Calibrated* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Calibrated>(
    Calibrated_descriptor(), name, value);
}
// ===================================================================

class Block : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:blox_test.TouchSettings.Block) */ {
 public:
  Block();
  virtual ~Block();

  Block(const Block& from);

  inline Block& operator=(const Block& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Block(Block&& from) noexcept
    : Block() {
    *this = ::std::move(from);
  }

  inline Block& operator=(Block&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Block& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Block* internal_default_instance() {
    return reinterpret_cast<const Block*>(
               &_Block_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Block* other);
  friend void swap(Block& a, Block& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Block* New() const final {
    return CreateMaybeMessage<Block>(NULL);
  }

  Block* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Block>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Block& from);
  void MergeFrom(const Block& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Block* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .blox_test.TouchSettings.Calibrated calibrated = 1;
  void clear_calibrated();
  static const int kCalibratedFieldNumber = 1;
  ::blox_test::TouchSettings::Calibrated calibrated() const;
  void set_calibrated(::blox_test::TouchSettings::Calibrated value);

  // int32 xOffset = 2 [(.nanopb) = {
  void clear_xoffset();
  static const int kXOffsetFieldNumber = 2;
  ::google::protobuf::int32 xoffset() const;
  void set_xoffset(::google::protobuf::int32 value);

  // int32 yOffset = 3 [(.nanopb) = {
  void clear_yoffset();
  static const int kYOffsetFieldNumber = 3;
  ::google::protobuf::int32 yoffset() const;
  void set_yoffset(::google::protobuf::int32 value);

  // uint32 xBitsPerPixelX16 = 4 [(.nanopb) = {
  void clear_xbitsperpixelx16();
  static const int kXBitsPerPixelX16FieldNumber = 4;
  ::google::protobuf::uint32 xbitsperpixelx16() const;
  void set_xbitsperpixelx16(::google::protobuf::uint32 value);

  // uint32 yBitsPerPixelX16 = 5 [(.nanopb) = {
  void clear_ybitsperpixelx16();
  static const int kYBitsPerPixelX16FieldNumber = 5;
  ::google::protobuf::uint32 ybitsperpixelx16() const;
  void set_ybitsperpixelx16(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:blox_test.TouchSettings.Block)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int calibrated_;
  ::google::protobuf::int32 xoffset_;
  ::google::protobuf::int32 yoffset_;
  ::google::protobuf::uint32 xbitsperpixelx16_;
  ::google::protobuf::uint32 ybitsperpixelx16_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_TouchSettings_5ftest_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Block

// .blox_test.TouchSettings.Calibrated calibrated = 1;
inline void Block::clear_calibrated() {
  calibrated_ = 0;
}
inline ::blox_test::TouchSettings::Calibrated Block::calibrated() const {
  // @@protoc_insertion_point(field_get:blox_test.TouchSettings.Block.calibrated)
  return static_cast< ::blox_test::TouchSettings::Calibrated >(calibrated_);
}
inline void Block::set_calibrated(::blox_test::TouchSettings::Calibrated value) {
  
  calibrated_ = value;
  // @@protoc_insertion_point(field_set:blox_test.TouchSettings.Block.calibrated)
}

// int32 xOffset = 2 [(.nanopb) = {
inline void Block::clear_xoffset() {
  xoffset_ = 0;
}
inline ::google::protobuf::int32 Block::xoffset() const {
  // @@protoc_insertion_point(field_get:blox_test.TouchSettings.Block.xOffset)
  return xoffset_;
}
inline void Block::set_xoffset(::google::protobuf::int32 value) {
  
  xoffset_ = value;
  // @@protoc_insertion_point(field_set:blox_test.TouchSettings.Block.xOffset)
}

// int32 yOffset = 3 [(.nanopb) = {
inline void Block::clear_yoffset() {
  yoffset_ = 0;
}
inline ::google::protobuf::int32 Block::yoffset() const {
  // @@protoc_insertion_point(field_get:blox_test.TouchSettings.Block.yOffset)
  return yoffset_;
}
inline void Block::set_yoffset(::google::protobuf::int32 value) {
  
  yoffset_ = value;
  // @@protoc_insertion_point(field_set:blox_test.TouchSettings.Block.yOffset)
}

// uint32 xBitsPerPixelX16 = 4 [(.nanopb) = {
inline void Block::clear_xbitsperpixelx16() {
  xbitsperpixelx16_ = 0u;
}
inline ::google::protobuf::uint32 Block::xbitsperpixelx16() const {
  // @@protoc_insertion_point(field_get:blox_test.TouchSettings.Block.xBitsPerPixelX16)
  return xbitsperpixelx16_;
}
inline void Block::set_xbitsperpixelx16(::google::protobuf::uint32 value) {
  
  xbitsperpixelx16_ = value;
  // @@protoc_insertion_point(field_set:blox_test.TouchSettings.Block.xBitsPerPixelX16)
}

// uint32 yBitsPerPixelX16 = 5 [(.nanopb) = {
inline void Block::clear_ybitsperpixelx16() {
  ybitsperpixelx16_ = 0u;
}
inline ::google::protobuf::uint32 Block::ybitsperpixelx16() const {
  // @@protoc_insertion_point(field_get:blox_test.TouchSettings.Block.yBitsPerPixelX16)
  return ybitsperpixelx16_;
}
inline void Block::set_ybitsperpixelx16(::google::protobuf::uint32 value) {
  
  ybitsperpixelx16_ = value;
  // @@protoc_insertion_point(field_set:blox_test.TouchSettings.Block.yBitsPerPixelX16)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace TouchSettings
}  // namespace blox_test

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::blox_test::TouchSettings::Calibrated> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::blox_test::TouchSettings::Calibrated>() {
  return ::blox_test::TouchSettings::Calibrated_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_TouchSettings_5ftest_2eproto
