// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SetpointSensorPair_test.proto

#ifndef PROTOBUF_INCLUDED_SetpointSensorPair_5ftest_2eproto
#define PROTOBUF_INCLUDED_SetpointSensorPair_5ftest_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "brewblox_test.pb.h"
#include "nanopb_test.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_SetpointSensorPair_5ftest_2eproto 

namespace protobuf_SetpointSensorPair_5ftest_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_SetpointSensorPair_5ftest_2eproto
namespace blox {
class SetpointSensorPair;
class SetpointSensorPairDefaultTypeInternal;
extern SetpointSensorPairDefaultTypeInternal _SetpointSensorPair_default_instance_;
}  // namespace blox
namespace google {
namespace protobuf {
template<> ::blox::SetpointSensorPair* Arena::CreateMaybeMessage<::blox::SetpointSensorPair>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace blox {

enum FilterChoice {
  FILTER_NONE = 0,
  FILTER_15s = 1,
  FILTER_45s = 2,
  FILTER_90s = 3,
  FILTER_3m = 4,
  FILTER_10m = 5,
  FILTER_30m = 6,
  FilterChoice_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FilterChoice_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FilterChoice_IsValid(int value);
const FilterChoice FilterChoice_MIN = FILTER_NONE;
const FilterChoice FilterChoice_MAX = FILTER_30m;
const int FilterChoice_ARRAYSIZE = FilterChoice_MAX + 1;

const ::google::protobuf::EnumDescriptor* FilterChoice_descriptor();
inline const ::std::string& FilterChoice_Name(FilterChoice value) {
  return ::google::protobuf::internal::NameOfEnum(
    FilterChoice_descriptor(), value);
}
inline bool FilterChoice_Parse(
    const ::std::string& name, FilterChoice* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FilterChoice>(
    FilterChoice_descriptor(), name, value);
}
// ===================================================================

class SetpointSensorPair : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:blox.SetpointSensorPair) */ {
 public:
  SetpointSensorPair();
  virtual ~SetpointSensorPair();

  SetpointSensorPair(const SetpointSensorPair& from);

  inline SetpointSensorPair& operator=(const SetpointSensorPair& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetpointSensorPair(SetpointSensorPair&& from) noexcept
    : SetpointSensorPair() {
    *this = ::std::move(from);
  }

  inline SetpointSensorPair& operator=(SetpointSensorPair&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetpointSensorPair& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetpointSensorPair* internal_default_instance() {
    return reinterpret_cast<const SetpointSensorPair*>(
               &_SetpointSensorPair_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(SetpointSensorPair* other);
  friend void swap(SetpointSensorPair& a, SetpointSensorPair& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetpointSensorPair* New() const final {
    return CreateMaybeMessage<SetpointSensorPair>(NULL);
  }

  SetpointSensorPair* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetpointSensorPair>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetpointSensorPair& from);
  void MergeFrom(const SetpointSensorPair& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetpointSensorPair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 strippedFields = 99 [(.nanopb_test) = {
  int strippedfields_size() const;
  void clear_strippedfields();
  static const int kStrippedFieldsFieldNumber = 99;
  ::google::protobuf::uint32 strippedfields(int index) const;
  void set_strippedfields(int index, ::google::protobuf::uint32 value);
  void add_strippedfields(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      strippedfields() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_strippedfields();

  // uint32 sensorId = 2 [(.nanopb_test) = {
  void clear_sensorid();
  static const int kSensorIdFieldNumber = 2;
  ::google::protobuf::uint32 sensorid() const;
  void set_sensorid(::google::protobuf::uint32 value);

  // sint32 setting = 5 [(.nanopb_test) = {
  void clear_setting();
  static const int kSettingFieldNumber = 5;
  ::google::protobuf::int32 setting() const;
  void set_setting(::google::protobuf::int32 value);

  // sint32 value = 6 [(.nanopb_test) = {
  void clear_value();
  static const int kValueFieldNumber = 6;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // sint32 storedSetting = 8 [(.nanopb_test) = {
  void clear_storedsetting();
  static const int kStoredSettingFieldNumber = 8;
  ::google::protobuf::int32 storedsetting() const;
  void set_storedsetting(::google::protobuf::int32 value);

  // .blox.FilterChoice filter = 9;
  void clear_filter();
  static const int kFilterFieldNumber = 9;
  ::blox::FilterChoice filter() const;
  void set_filter(::blox::FilterChoice value);

  // bool settingEnabled = 7;
  void clear_settingenabled();
  static const int kSettingEnabledFieldNumber = 7;
  bool settingenabled() const;
  void set_settingenabled(bool value);

  // bool resetFilter = 12;
  void clear_resetfilter();
  static const int kResetFilterFieldNumber = 12;
  bool resetfilter() const;
  void set_resetfilter(bool value);

  // sint32 filterThreshold = 10 [(.nanopb_test) = {
  void clear_filterthreshold();
  static const int kFilterThresholdFieldNumber = 10;
  ::google::protobuf::int32 filterthreshold() const;
  void set_filterthreshold(::google::protobuf::int32 value);

  // sint32 valueUnfiltered = 11 [(.nanopb_test) = {
  void clear_valueunfiltered();
  static const int kValueUnfilteredFieldNumber = 11;
  ::google::protobuf::int32 valueunfiltered() const;
  void set_valueunfiltered(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:blox.SetpointSensorPair)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > strippedfields_;
  mutable int _strippedfields_cached_byte_size_;
  ::google::protobuf::uint32 sensorid_;
  ::google::protobuf::int32 setting_;
  ::google::protobuf::int32 value_;
  ::google::protobuf::int32 storedsetting_;
  int filter_;
  bool settingenabled_;
  bool resetfilter_;
  ::google::protobuf::int32 filterthreshold_;
  ::google::protobuf::int32 valueunfiltered_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_SetpointSensorPair_5ftest_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SetpointSensorPair

// uint32 sensorId = 2 [(.nanopb_test) = {
inline void SetpointSensorPair::clear_sensorid() {
  sensorid_ = 0u;
}
inline ::google::protobuf::uint32 SetpointSensorPair::sensorid() const {
  // @@protoc_insertion_point(field_get:blox.SetpointSensorPair.sensorId)
  return sensorid_;
}
inline void SetpointSensorPair::set_sensorid(::google::protobuf::uint32 value) {
  
  sensorid_ = value;
  // @@protoc_insertion_point(field_set:blox.SetpointSensorPair.sensorId)
}

// sint32 setting = 5 [(.nanopb_test) = {
inline void SetpointSensorPair::clear_setting() {
  setting_ = 0;
}
inline ::google::protobuf::int32 SetpointSensorPair::setting() const {
  // @@protoc_insertion_point(field_get:blox.SetpointSensorPair.setting)
  return setting_;
}
inline void SetpointSensorPair::set_setting(::google::protobuf::int32 value) {
  
  setting_ = value;
  // @@protoc_insertion_point(field_set:blox.SetpointSensorPair.setting)
}

// sint32 value = 6 [(.nanopb_test) = {
inline void SetpointSensorPair::clear_value() {
  value_ = 0;
}
inline ::google::protobuf::int32 SetpointSensorPair::value() const {
  // @@protoc_insertion_point(field_get:blox.SetpointSensorPair.value)
  return value_;
}
inline void SetpointSensorPair::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:blox.SetpointSensorPair.value)
}

// bool settingEnabled = 7;
inline void SetpointSensorPair::clear_settingenabled() {
  settingenabled_ = false;
}
inline bool SetpointSensorPair::settingenabled() const {
  // @@protoc_insertion_point(field_get:blox.SetpointSensorPair.settingEnabled)
  return settingenabled_;
}
inline void SetpointSensorPair::set_settingenabled(bool value) {
  
  settingenabled_ = value;
  // @@protoc_insertion_point(field_set:blox.SetpointSensorPair.settingEnabled)
}

// sint32 storedSetting = 8 [(.nanopb_test) = {
inline void SetpointSensorPair::clear_storedsetting() {
  storedsetting_ = 0;
}
inline ::google::protobuf::int32 SetpointSensorPair::storedsetting() const {
  // @@protoc_insertion_point(field_get:blox.SetpointSensorPair.storedSetting)
  return storedsetting_;
}
inline void SetpointSensorPair::set_storedsetting(::google::protobuf::int32 value) {
  
  storedsetting_ = value;
  // @@protoc_insertion_point(field_set:blox.SetpointSensorPair.storedSetting)
}

// .blox.FilterChoice filter = 9;
inline void SetpointSensorPair::clear_filter() {
  filter_ = 0;
}
inline ::blox::FilterChoice SetpointSensorPair::filter() const {
  // @@protoc_insertion_point(field_get:blox.SetpointSensorPair.filter)
  return static_cast< ::blox::FilterChoice >(filter_);
}
inline void SetpointSensorPair::set_filter(::blox::FilterChoice value) {
  
  filter_ = value;
  // @@protoc_insertion_point(field_set:blox.SetpointSensorPair.filter)
}

// sint32 filterThreshold = 10 [(.nanopb_test) = {
inline void SetpointSensorPair::clear_filterthreshold() {
  filterthreshold_ = 0;
}
inline ::google::protobuf::int32 SetpointSensorPair::filterthreshold() const {
  // @@protoc_insertion_point(field_get:blox.SetpointSensorPair.filterThreshold)
  return filterthreshold_;
}
inline void SetpointSensorPair::set_filterthreshold(::google::protobuf::int32 value) {
  
  filterthreshold_ = value;
  // @@protoc_insertion_point(field_set:blox.SetpointSensorPair.filterThreshold)
}

// sint32 valueUnfiltered = 11 [(.nanopb_test) = {
inline void SetpointSensorPair::clear_valueunfiltered() {
  valueunfiltered_ = 0;
}
inline ::google::protobuf::int32 SetpointSensorPair::valueunfiltered() const {
  // @@protoc_insertion_point(field_get:blox.SetpointSensorPair.valueUnfiltered)
  return valueunfiltered_;
}
inline void SetpointSensorPair::set_valueunfiltered(::google::protobuf::int32 value) {
  
  valueunfiltered_ = value;
  // @@protoc_insertion_point(field_set:blox.SetpointSensorPair.valueUnfiltered)
}

// bool resetFilter = 12;
inline void SetpointSensorPair::clear_resetfilter() {
  resetfilter_ = false;
}
inline bool SetpointSensorPair::resetfilter() const {
  // @@protoc_insertion_point(field_get:blox.SetpointSensorPair.resetFilter)
  return resetfilter_;
}
inline void SetpointSensorPair::set_resetfilter(bool value) {
  
  resetfilter_ = value;
  // @@protoc_insertion_point(field_set:blox.SetpointSensorPair.resetFilter)
}

// repeated uint32 strippedFields = 99 [(.nanopb_test) = {
inline int SetpointSensorPair::strippedfields_size() const {
  return strippedfields_.size();
}
inline void SetpointSensorPair::clear_strippedfields() {
  strippedfields_.Clear();
}
inline ::google::protobuf::uint32 SetpointSensorPair::strippedfields(int index) const {
  // @@protoc_insertion_point(field_get:blox.SetpointSensorPair.strippedFields)
  return strippedfields_.Get(index);
}
inline void SetpointSensorPair::set_strippedfields(int index, ::google::protobuf::uint32 value) {
  strippedfields_.Set(index, value);
  // @@protoc_insertion_point(field_set:blox.SetpointSensorPair.strippedFields)
}
inline void SetpointSensorPair::add_strippedfields(::google::protobuf::uint32 value) {
  strippedfields_.Add(value);
  // @@protoc_insertion_point(field_add:blox.SetpointSensorPair.strippedFields)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SetpointSensorPair::strippedfields() const {
  // @@protoc_insertion_point(field_list:blox.SetpointSensorPair.strippedFields)
  return strippedfields_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SetpointSensorPair::mutable_strippedfields() {
  // @@protoc_insertion_point(field_mutable_list:blox.SetpointSensorPair.strippedFields)
  return &strippedfields_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace blox

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::blox::FilterChoice> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::blox::FilterChoice>() {
  return ::blox::FilterChoice_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_SetpointSensorPair_5ftest_2eproto
