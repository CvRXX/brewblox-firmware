// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SetpointProfile_test.proto

#ifndef PROTOBUF_INCLUDED_SetpointProfile_5ftest_2eproto
#define PROTOBUF_INCLUDED_SetpointProfile_5ftest_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "brewblox_test.pb.h"
#include "nanopb_test.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_SetpointProfile_5ftest_2eproto 

namespace protobuf_SetpointProfile_5ftest_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_SetpointProfile_5ftest_2eproto
namespace blox {
class Point;
class PointDefaultTypeInternal;
extern PointDefaultTypeInternal _Point_default_instance_;
class SetpointProfile;
class SetpointProfileDefaultTypeInternal;
extern SetpointProfileDefaultTypeInternal _SetpointProfile_default_instance_;
}  // namespace blox
namespace google {
namespace protobuf {
template<> ::blox::Point* Arena::CreateMaybeMessage<::blox::Point>(Arena*);
template<> ::blox::SetpointProfile* Arena::CreateMaybeMessage<::blox::SetpointProfile>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace blox {

// ===================================================================

class Point : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:blox.Point) */ {
 public:
  Point();
  virtual ~Point();

  Point(const Point& from);

  inline Point& operator=(const Point& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Point(Point&& from) noexcept
    : Point() {
    *this = ::std::move(from);
  }

  inline Point& operator=(Point&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Point& default_instance();

  enum TemperatureOneofCase {
    kTemperature = 2,
    TEMPERATURE_ONEOF_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Point* internal_default_instance() {
    return reinterpret_cast<const Point*>(
               &_Point_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Point* other);
  friend void swap(Point& a, Point& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Point* New() const final {
    return CreateMaybeMessage<Point>(NULL);
  }

  Point* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Point>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Point& from);
  void MergeFrom(const Point& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Point* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 time = 1;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::uint32 time() const;
  void set_time(::google::protobuf::uint32 value);

  // int32 temperature = 2 [(.nanopb_test) = {
  private:
  bool has_temperature() const;
  public:
  void clear_temperature();
  static const int kTemperatureFieldNumber = 2;
  ::google::protobuf::int32 temperature() const;
  void set_temperature(::google::protobuf::int32 value);

  void clear_temperature_oneof();
  TemperatureOneofCase temperature_oneof_case() const;
  // @@protoc_insertion_point(class_scope:blox.Point)
 private:
  void set_has_temperature();

  inline bool has_temperature_oneof() const;
  inline void clear_has_temperature_oneof();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 time_;
  union TemperatureOneofUnion {
    TemperatureOneofUnion() {}
    ::google::protobuf::int32 temperature_;
  } temperature_oneof_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_SetpointProfile_5ftest_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetpointProfile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:blox.SetpointProfile) */ {
 public:
  SetpointProfile();
  virtual ~SetpointProfile();

  SetpointProfile(const SetpointProfile& from);

  inline SetpointProfile& operator=(const SetpointProfile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetpointProfile(SetpointProfile&& from) noexcept
    : SetpointProfile() {
    *this = ::std::move(from);
  }

  inline SetpointProfile& operator=(SetpointProfile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetpointProfile& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetpointProfile* internal_default_instance() {
    return reinterpret_cast<const SetpointProfile*>(
               &_SetpointProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(SetpointProfile* other);
  friend void swap(SetpointProfile& a, SetpointProfile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetpointProfile* New() const final {
    return CreateMaybeMessage<SetpointProfile>(NULL);
  }

  SetpointProfile* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetpointProfile>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetpointProfile& from);
  void MergeFrom(const SetpointProfile& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetpointProfile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .blox.Point points = 1;
  int points_size() const;
  void clear_points();
  static const int kPointsFieldNumber = 1;
  ::blox::Point* mutable_points(int index);
  ::google::protobuf::RepeatedPtrField< ::blox::Point >*
      mutable_points();
  const ::blox::Point& points(int index) const;
  ::blox::Point* add_points();
  const ::google::protobuf::RepeatedPtrField< ::blox::Point >&
      points() const;

  // bool enabled = 3;
  void clear_enabled();
  static const int kEnabledFieldNumber = 3;
  bool enabled() const;
  void set_enabled(bool value);

  // uint32 targetId = 4 [(.nanopb_test) = {
  void clear_targetid();
  static const int kTargetIdFieldNumber = 4;
  ::google::protobuf::uint32 targetid() const;
  void set_targetid(::google::protobuf::uint32 value);

  // uint32 drivenTargetId = 5 [(.nanopb_test) = {
  void clear_driventargetid();
  static const int kDrivenTargetIdFieldNumber = 5;
  ::google::protobuf::uint32 driventargetid() const;
  void set_driventargetid(::google::protobuf::uint32 value);

  // uint32 start = 6;
  void clear_start();
  static const int kStartFieldNumber = 6;
  ::google::protobuf::uint32 start() const;
  void set_start(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:blox.SetpointProfile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::blox::Point > points_;
  bool enabled_;
  ::google::protobuf::uint32 targetid_;
  ::google::protobuf::uint32 driventargetid_;
  ::google::protobuf::uint32 start_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_SetpointProfile_5ftest_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Point

// uint32 time = 1;
inline void Point::clear_time() {
  time_ = 0u;
}
inline ::google::protobuf::uint32 Point::time() const {
  // @@protoc_insertion_point(field_get:blox.Point.time)
  return time_;
}
inline void Point::set_time(::google::protobuf::uint32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:blox.Point.time)
}

// int32 temperature = 2 [(.nanopb_test) = {
inline bool Point::has_temperature() const {
  return temperature_oneof_case() == kTemperature;
}
inline void Point::set_has_temperature() {
  _oneof_case_[0] = kTemperature;
}
inline void Point::clear_temperature() {
  if (has_temperature()) {
    temperature_oneof_.temperature_ = 0;
    clear_has_temperature_oneof();
  }
}
inline ::google::protobuf::int32 Point::temperature() const {
  // @@protoc_insertion_point(field_get:blox.Point.temperature)
  if (has_temperature()) {
    return temperature_oneof_.temperature_;
  }
  return 0;
}
inline void Point::set_temperature(::google::protobuf::int32 value) {
  if (!has_temperature()) {
    clear_temperature_oneof();
    set_has_temperature();
  }
  temperature_oneof_.temperature_ = value;
  // @@protoc_insertion_point(field_set:blox.Point.temperature)
}

inline bool Point::has_temperature_oneof() const {
  return temperature_oneof_case() != TEMPERATURE_ONEOF_NOT_SET;
}
inline void Point::clear_has_temperature_oneof() {
  _oneof_case_[0] = TEMPERATURE_ONEOF_NOT_SET;
}
inline Point::TemperatureOneofCase Point::temperature_oneof_case() const {
  return Point::TemperatureOneofCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// SetpointProfile

// repeated .blox.Point points = 1;
inline int SetpointProfile::points_size() const {
  return points_.size();
}
inline void SetpointProfile::clear_points() {
  points_.Clear();
}
inline ::blox::Point* SetpointProfile::mutable_points(int index) {
  // @@protoc_insertion_point(field_mutable:blox.SetpointProfile.points)
  return points_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::blox::Point >*
SetpointProfile::mutable_points() {
  // @@protoc_insertion_point(field_mutable_list:blox.SetpointProfile.points)
  return &points_;
}
inline const ::blox::Point& SetpointProfile::points(int index) const {
  // @@protoc_insertion_point(field_get:blox.SetpointProfile.points)
  return points_.Get(index);
}
inline ::blox::Point* SetpointProfile::add_points() {
  // @@protoc_insertion_point(field_add:blox.SetpointProfile.points)
  return points_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::blox::Point >&
SetpointProfile::points() const {
  // @@protoc_insertion_point(field_list:blox.SetpointProfile.points)
  return points_;
}

// bool enabled = 3;
inline void SetpointProfile::clear_enabled() {
  enabled_ = false;
}
inline bool SetpointProfile::enabled() const {
  // @@protoc_insertion_point(field_get:blox.SetpointProfile.enabled)
  return enabled_;
}
inline void SetpointProfile::set_enabled(bool value) {
  
  enabled_ = value;
  // @@protoc_insertion_point(field_set:blox.SetpointProfile.enabled)
}

// uint32 targetId = 4 [(.nanopb_test) = {
inline void SetpointProfile::clear_targetid() {
  targetid_ = 0u;
}
inline ::google::protobuf::uint32 SetpointProfile::targetid() const {
  // @@protoc_insertion_point(field_get:blox.SetpointProfile.targetId)
  return targetid_;
}
inline void SetpointProfile::set_targetid(::google::protobuf::uint32 value) {
  
  targetid_ = value;
  // @@protoc_insertion_point(field_set:blox.SetpointProfile.targetId)
}

// uint32 drivenTargetId = 5 [(.nanopb_test) = {
inline void SetpointProfile::clear_driventargetid() {
  driventargetid_ = 0u;
}
inline ::google::protobuf::uint32 SetpointProfile::driventargetid() const {
  // @@protoc_insertion_point(field_get:blox.SetpointProfile.drivenTargetId)
  return driventargetid_;
}
inline void SetpointProfile::set_driventargetid(::google::protobuf::uint32 value) {
  
  driventargetid_ = value;
  // @@protoc_insertion_point(field_set:blox.SetpointProfile.drivenTargetId)
}

// uint32 start = 6;
inline void SetpointProfile::clear_start() {
  start_ = 0u;
}
inline ::google::protobuf::uint32 SetpointProfile::start() const {
  // @@protoc_insertion_point(field_get:blox.SetpointProfile.start)
  return start_;
}
inline void SetpointProfile::set_start(::google::protobuf::uint32 value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:blox.SetpointProfile.start)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace blox

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_SetpointProfile_5ftest_2eproto
