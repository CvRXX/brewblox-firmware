// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ActuatorPwm_test.proto

#ifndef PROTOBUF_INCLUDED_ActuatorPwm_5ftest_2eproto
#define PROTOBUF_INCLUDED_ActuatorPwm_5ftest_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "brewblox_test.pb.h"
#include "nanopb_test.pb.h"
#include "AnalogConstraints_test.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_ActuatorPwm_5ftest_2eproto 

namespace protobuf_ActuatorPwm_5ftest_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_ActuatorPwm_5ftest_2eproto
namespace blox {
class ActuatorPwm;
class ActuatorPwmDefaultTypeInternal;
extern ActuatorPwmDefaultTypeInternal _ActuatorPwm_default_instance_;
}  // namespace blox
namespace google {
namespace protobuf {
template<> ::blox::ActuatorPwm* Arena::CreateMaybeMessage<::blox::ActuatorPwm>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace blox {

// ===================================================================

class ActuatorPwm : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:blox.ActuatorPwm) */ {
 public:
  ActuatorPwm();
  virtual ~ActuatorPwm();

  ActuatorPwm(const ActuatorPwm& from);

  inline ActuatorPwm& operator=(const ActuatorPwm& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActuatorPwm(ActuatorPwm&& from) noexcept
    : ActuatorPwm() {
    *this = ::std::move(from);
  }

  inline ActuatorPwm& operator=(ActuatorPwm&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActuatorPwm& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActuatorPwm* internal_default_instance() {
    return reinterpret_cast<const ActuatorPwm*>(
               &_ActuatorPwm_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ActuatorPwm* other);
  friend void swap(ActuatorPwm& a, ActuatorPwm& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActuatorPwm* New() const final {
    return CreateMaybeMessage<ActuatorPwm>(NULL);
  }

  ActuatorPwm* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ActuatorPwm>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ActuatorPwm& from);
  void MergeFrom(const ActuatorPwm& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActuatorPwm* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 strippedFields = 99 [(.nanopb_test) = {
  int strippedfields_size() const;
  void clear_strippedfields();
  static const int kStrippedFieldsFieldNumber = 99;
  ::google::protobuf::uint32 strippedfields(int index) const;
  void set_strippedfields(int index, ::google::protobuf::uint32 value);
  void add_strippedfields(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      strippedfields() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_strippedfields();

  // .blox.AnalogConstraints constrainedBy = 6;
  bool has_constrainedby() const;
  void clear_constrainedby();
  static const int kConstrainedByFieldNumber = 6;
  private:
  const ::blox::AnalogConstraints& _internal_constrainedby() const;
  public:
  const ::blox::AnalogConstraints& constrainedby() const;
  ::blox::AnalogConstraints* release_constrainedby();
  ::blox::AnalogConstraints* mutable_constrainedby();
  void set_allocated_constrainedby(::blox::AnalogConstraints* constrainedby);

  // uint32 actuatorId = 1 [(.nanopb_test) = {
  void clear_actuatorid();
  static const int kActuatorIdFieldNumber = 1;
  ::google::protobuf::uint32 actuatorid() const;
  void set_actuatorid(::google::protobuf::uint32 value);

  // uint32 period = 3 [(.brewblox_test) = {
  void clear_period();
  static const int kPeriodFieldNumber = 3;
  ::google::protobuf::uint32 period() const;
  void set_period(::google::protobuf::uint32 value);

  // sint32 setting = 4 [(.nanopb_test) = {
  void clear_setting();
  static const int kSettingFieldNumber = 4;
  ::google::protobuf::int32 setting() const;
  void set_setting(::google::protobuf::int32 value);

  // sint32 value = 5 [(.nanopb_test) = {
  void clear_value();
  static const int kValueFieldNumber = 5;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // uint32 drivenActuatorId = 7 [(.nanopb_test) = {
  void clear_drivenactuatorid();
  static const int kDrivenActuatorIdFieldNumber = 7;
  ::google::protobuf::uint32 drivenactuatorid() const;
  void set_drivenactuatorid(::google::protobuf::uint32 value);

  // bool enabled = 8;
  void clear_enabled();
  static const int kEnabledFieldNumber = 8;
  bool enabled() const;
  void set_enabled(bool value);

  // sint32 desiredSetting = 9 [(.nanopb_test) = {
  void clear_desiredsetting();
  static const int kDesiredSettingFieldNumber = 9;
  ::google::protobuf::int32 desiredsetting() const;
  void set_desiredsetting(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:blox.ActuatorPwm)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > strippedfields_;
  mutable int _strippedfields_cached_byte_size_;
  ::blox::AnalogConstraints* constrainedby_;
  ::google::protobuf::uint32 actuatorid_;
  ::google::protobuf::uint32 period_;
  ::google::protobuf::int32 setting_;
  ::google::protobuf::int32 value_;
  ::google::protobuf::uint32 drivenactuatorid_;
  bool enabled_;
  ::google::protobuf::int32 desiredsetting_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ActuatorPwm_5ftest_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ActuatorPwm

// uint32 actuatorId = 1 [(.nanopb_test) = {
inline void ActuatorPwm::clear_actuatorid() {
  actuatorid_ = 0u;
}
inline ::google::protobuf::uint32 ActuatorPwm::actuatorid() const {
  // @@protoc_insertion_point(field_get:blox.ActuatorPwm.actuatorId)
  return actuatorid_;
}
inline void ActuatorPwm::set_actuatorid(::google::protobuf::uint32 value) {
  
  actuatorid_ = value;
  // @@protoc_insertion_point(field_set:blox.ActuatorPwm.actuatorId)
}

// uint32 period = 3 [(.brewblox_test) = {
inline void ActuatorPwm::clear_period() {
  period_ = 0u;
}
inline ::google::protobuf::uint32 ActuatorPwm::period() const {
  // @@protoc_insertion_point(field_get:blox.ActuatorPwm.period)
  return period_;
}
inline void ActuatorPwm::set_period(::google::protobuf::uint32 value) {
  
  period_ = value;
  // @@protoc_insertion_point(field_set:blox.ActuatorPwm.period)
}

// sint32 setting = 4 [(.nanopb_test) = {
inline void ActuatorPwm::clear_setting() {
  setting_ = 0;
}
inline ::google::protobuf::int32 ActuatorPwm::setting() const {
  // @@protoc_insertion_point(field_get:blox.ActuatorPwm.setting)
  return setting_;
}
inline void ActuatorPwm::set_setting(::google::protobuf::int32 value) {
  
  setting_ = value;
  // @@protoc_insertion_point(field_set:blox.ActuatorPwm.setting)
}

// sint32 value = 5 [(.nanopb_test) = {
inline void ActuatorPwm::clear_value() {
  value_ = 0;
}
inline ::google::protobuf::int32 ActuatorPwm::value() const {
  // @@protoc_insertion_point(field_get:blox.ActuatorPwm.value)
  return value_;
}
inline void ActuatorPwm::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:blox.ActuatorPwm.value)
}

// .blox.AnalogConstraints constrainedBy = 6;
inline bool ActuatorPwm::has_constrainedby() const {
  return this != internal_default_instance() && constrainedby_ != NULL;
}
inline const ::blox::AnalogConstraints& ActuatorPwm::_internal_constrainedby() const {
  return *constrainedby_;
}
inline const ::blox::AnalogConstraints& ActuatorPwm::constrainedby() const {
  const ::blox::AnalogConstraints* p = constrainedby_;
  // @@protoc_insertion_point(field_get:blox.ActuatorPwm.constrainedBy)
  return p != NULL ? *p : *reinterpret_cast<const ::blox::AnalogConstraints*>(
      &::blox::_AnalogConstraints_default_instance_);
}
inline ::blox::AnalogConstraints* ActuatorPwm::release_constrainedby() {
  // @@protoc_insertion_point(field_release:blox.ActuatorPwm.constrainedBy)
  
  ::blox::AnalogConstraints* temp = constrainedby_;
  constrainedby_ = NULL;
  return temp;
}
inline ::blox::AnalogConstraints* ActuatorPwm::mutable_constrainedby() {
  
  if (constrainedby_ == NULL) {
    auto* p = CreateMaybeMessage<::blox::AnalogConstraints>(GetArenaNoVirtual());
    constrainedby_ = p;
  }
  // @@protoc_insertion_point(field_mutable:blox.ActuatorPwm.constrainedBy)
  return constrainedby_;
}
inline void ActuatorPwm::set_allocated_constrainedby(::blox::AnalogConstraints* constrainedby) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(constrainedby_);
  }
  if (constrainedby) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      constrainedby = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, constrainedby, submessage_arena);
    }
    
  } else {
    
  }
  constrainedby_ = constrainedby;
  // @@protoc_insertion_point(field_set_allocated:blox.ActuatorPwm.constrainedBy)
}

// uint32 drivenActuatorId = 7 [(.nanopb_test) = {
inline void ActuatorPwm::clear_drivenactuatorid() {
  drivenactuatorid_ = 0u;
}
inline ::google::protobuf::uint32 ActuatorPwm::drivenactuatorid() const {
  // @@protoc_insertion_point(field_get:blox.ActuatorPwm.drivenActuatorId)
  return drivenactuatorid_;
}
inline void ActuatorPwm::set_drivenactuatorid(::google::protobuf::uint32 value) {
  
  drivenactuatorid_ = value;
  // @@protoc_insertion_point(field_set:blox.ActuatorPwm.drivenActuatorId)
}

// bool enabled = 8;
inline void ActuatorPwm::clear_enabled() {
  enabled_ = false;
}
inline bool ActuatorPwm::enabled() const {
  // @@protoc_insertion_point(field_get:blox.ActuatorPwm.enabled)
  return enabled_;
}
inline void ActuatorPwm::set_enabled(bool value) {
  
  enabled_ = value;
  // @@protoc_insertion_point(field_set:blox.ActuatorPwm.enabled)
}

// sint32 desiredSetting = 9 [(.nanopb_test) = {
inline void ActuatorPwm::clear_desiredsetting() {
  desiredsetting_ = 0;
}
inline ::google::protobuf::int32 ActuatorPwm::desiredsetting() const {
  // @@protoc_insertion_point(field_get:blox.ActuatorPwm.desiredSetting)
  return desiredsetting_;
}
inline void ActuatorPwm::set_desiredsetting(::google::protobuf::int32 value) {
  
  desiredsetting_ = value;
  // @@protoc_insertion_point(field_set:blox.ActuatorPwm.desiredSetting)
}

// repeated uint32 strippedFields = 99 [(.nanopb_test) = {
inline int ActuatorPwm::strippedfields_size() const {
  return strippedfields_.size();
}
inline void ActuatorPwm::clear_strippedfields() {
  strippedfields_.Clear();
}
inline ::google::protobuf::uint32 ActuatorPwm::strippedfields(int index) const {
  // @@protoc_insertion_point(field_get:blox.ActuatorPwm.strippedFields)
  return strippedfields_.Get(index);
}
inline void ActuatorPwm::set_strippedfields(int index, ::google::protobuf::uint32 value) {
  strippedfields_.Set(index, value);
  // @@protoc_insertion_point(field_set:blox.ActuatorPwm.strippedFields)
}
inline void ActuatorPwm::add_strippedfields(::google::protobuf::uint32 value) {
  strippedfields_.Add(value);
  // @@protoc_insertion_point(field_add:blox.ActuatorPwm.strippedFields)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ActuatorPwm::strippedfields() const {
  // @@protoc_insertion_point(field_list:blox.ActuatorPwm.strippedFields)
  return strippedfields_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ActuatorPwm::mutable_strippedfields() {
  // @@protoc_insertion_point(field_mutable_list:blox.ActuatorPwm.strippedFields)
  return &strippedfields_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace blox

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_ActuatorPwm_5ftest_2eproto
