// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: controlbox_test.proto

#ifndef PROTOBUF_INCLUDED_controlbox_5ftest_2eproto
#define PROTOBUF_INCLUDED_controlbox_5ftest_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "brewblox_test.pb.h"
#include "nanopb_test.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_controlbox_5ftest_2eproto 

namespace protobuf_controlbox_5ftest_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_controlbox_5ftest_2eproto
namespace controlbox {
class Payload;
class PayloadDefaultTypeInternal;
extern PayloadDefaultTypeInternal _Payload_default_instance_;
class Request;
class RequestDefaultTypeInternal;
extern RequestDefaultTypeInternal _Request_default_instance_;
class Response;
class ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
}  // namespace controlbox
namespace google {
namespace protobuf {
template<> ::controlbox::Payload* Arena::CreateMaybeMessage<::controlbox::Payload>(Arena*);
template<> ::controlbox::Request* Arena::CreateMaybeMessage<::controlbox::Request>(Arena*);
template<> ::controlbox::Response* Arena::CreateMaybeMessage<::controlbox::Response>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace controlbox {

enum Opcode {
  OPCODE_NONE = 0,
  OPCODE_READ_OBJECT = 1,
  OPCODE_WRITE_OBJECT = 2,
  OPCODE_CREATE_OBJECT = 3,
  OPCODE_DELETE_OBJECT = 4,
  OPCODE_LIST_OBJECTS = 5,
  OPCODE_READ_STORED_OBJECT = 6,
  OPCODE_LIST_STORED_OBJECTS = 7,
  OPCODE_CLEAR_OBJECTS = 8,
  OPCODE_REBOOT = 9,
  OPCODE_FACTORY_RESET = 10,
  OPCODE_LIST_COMPATIBLE_OBJECTS = 11,
  OPCODE_DISCOVER_OBJECTS = 12,
  OPCODE_FIRMWARE_UPDATE = 100,
  Opcode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Opcode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Opcode_IsValid(int value);
const Opcode Opcode_MIN = OPCODE_NONE;
const Opcode Opcode_MAX = OPCODE_FIRMWARE_UPDATE;
const int Opcode_ARRAYSIZE = Opcode_MAX + 1;

const ::google::protobuf::EnumDescriptor* Opcode_descriptor();
inline const ::std::string& Opcode_Name(Opcode value) {
  return ::google::protobuf::internal::NameOfEnum(
    Opcode_descriptor(), value);
}
inline bool Opcode_Parse(
    const ::std::string& name, Opcode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Opcode>(
    Opcode_descriptor(), name, value);
}
enum ErrorCode {
  ERR_OK = 0,
  ERR_UNKNOWN_ERROR = 1,
  ERR_INSUFFICIENT_HEAP = 4,
  ERR_STREAM_ERROR_UNSPECIFIED = 8,
  ERR_OUTPUT_STREAM_WRITE_ERROR = 9,
  ERR_INPUT_STREAM_READ_ERROR = 10,
  ERR_INPUT_STREAM_DECODING_ERROR = 11,
  ERR_OUTPUT_STREAM_ENCODING_ERROR = 12,
  ERR_INSUFFICIENT_PERSISTENT_STORAGE = 16,
  ERR_PERSISTED_OBJECT_NOT_FOUND = 17,
  ERR_INVALID_PERSISTED_BLOCK_TYPE = 18,
  ERR_COULD_NOT_READ_PERSISTED_BLOCK_SIZE = 19,
  ERR_PERSISTED_BLOCK_STREAM_ERROR = 20,
  ERR_PERSISTED_STORAGE_WRITE_ERROR = 21,
  ERR_CRC_ERROR_IN_STORED_OBJECT = 22,
  ERR_OBJECT_NOT_WRITABLE = 32,
  ERR_OBJECT_NOT_READABLE = 33,
  ERR_OBJECT_NOT_CREATABLE = 34,
  ERR_OBJECT_NOT_DELETABLE = 35,
  ERR_INVALID_COMMAND = 63,
  ERR_INVALID_OBJECT_ID = 64,
  ERR_INVALID_OBJECT_TYPE = 65,
  ERR_INVALID_OBJECT_GROUPS = 66,
  ERR_CRC_ERROR_IN_COMMAND = 67,
  ERR_OBJECT_DATA_NOT_ACCEPTED = 68,
  ERR_WRITE_TO_INACTIVE_OBJECT = 200,
  ErrorCode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ErrorCode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ErrorCode_IsValid(int value);
const ErrorCode ErrorCode_MIN = ERR_OK;
const ErrorCode ErrorCode_MAX = ERR_WRITE_TO_INACTIVE_OBJECT;
const int ErrorCode_ARRAYSIZE = ErrorCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor();
inline const ::std::string& ErrorCode_Name(ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ErrorCode_descriptor(), value);
}
inline bool ErrorCode_Parse(
    const ::std::string& name, ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ErrorCode>(
    ErrorCode_descriptor(), name, value);
}
// ===================================================================

class Payload : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:controlbox.Payload) */ {
 public:
  Payload();
  virtual ~Payload();

  Payload(const Payload& from);

  inline Payload& operator=(const Payload& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Payload(Payload&& from) noexcept
    : Payload() {
    *this = ::std::move(from);
  }

  inline Payload& operator=(Payload&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Payload& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Payload* internal_default_instance() {
    return reinterpret_cast<const Payload*>(
               &_Payload_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Payload* other);
  friend void swap(Payload& a, Payload& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Payload* New() const final {
    return CreateMaybeMessage<Payload>(NULL);
  }

  Payload* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Payload>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Payload& from);
  void MergeFrom(const Payload& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Payload* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string data = 4;
  void clear_data();
  static const int kDataFieldNumber = 4;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // uint32 blockId = 1;
  void clear_blockid();
  static const int kBlockIdFieldNumber = 1;
  ::google::protobuf::uint32 blockid() const;
  void set_blockid(::google::protobuf::uint32 value);

  // .brewblox.BlockType objtype = 2;
  void clear_objtype();
  static const int kObjtypeFieldNumber = 2;
  ::brewblox::BlockType objtype() const;
  void set_objtype(::brewblox::BlockType value);

  // uint32 subtype = 3 [(.nanopb) = {
  void clear_subtype();
  static const int kSubtypeFieldNumber = 3;
  ::google::protobuf::uint32 subtype() const;
  void set_subtype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:controlbox.Payload)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::uint32 blockid_;
  int objtype_;
  ::google::protobuf::uint32 subtype_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_controlbox_5ftest_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:controlbox.Request) */ {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request(Request&& from) noexcept
    : Request() {
    *this = ::std::move(from);
  }

  inline Request& operator=(Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Request* internal_default_instance() {
    return reinterpret_cast<const Request*>(
               &_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Request* other);
  friend void swap(Request& a, Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request* New() const final {
    return CreateMaybeMessage<Request>(NULL);
  }

  Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .controlbox.Payload payload = 3;
  bool has_payload() const;
  void clear_payload();
  static const int kPayloadFieldNumber = 3;
  private:
  const ::controlbox::Payload& _internal_payload() const;
  public:
  const ::controlbox::Payload& payload() const;
  ::controlbox::Payload* release_payload();
  ::controlbox::Payload* mutable_payload();
  void set_allocated_payload(::controlbox::Payload* payload);

  // uint32 msgId = 1;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 1;
  ::google::protobuf::uint32 msgid() const;
  void set_msgid(::google::protobuf::uint32 value);

  // .controlbox.Opcode opcode = 2;
  void clear_opcode();
  static const int kOpcodeFieldNumber = 2;
  ::controlbox::Opcode opcode() const;
  void set_opcode(::controlbox::Opcode value);

  // @@protoc_insertion_point(class_scope:controlbox.Request)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::controlbox::Payload* payload_;
  ::google::protobuf::uint32 msgid_;
  int opcode_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_controlbox_5ftest_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:controlbox.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response(Response&& from) noexcept
    : Response() {
    *this = ::std::move(from);
  }

  inline Response& operator=(Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Response* internal_default_instance() {
    return reinterpret_cast<const Response*>(
               &_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Response* other);
  friend void swap(Response& a, Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response* New() const final {
    return CreateMaybeMessage<Response>(NULL);
  }

  Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .controlbox.Payload payload = 3;
  int payload_size() const;
  void clear_payload();
  static const int kPayloadFieldNumber = 3;
  ::controlbox::Payload* mutable_payload(int index);
  ::google::protobuf::RepeatedPtrField< ::controlbox::Payload >*
      mutable_payload();
  const ::controlbox::Payload& payload(int index) const;
  ::controlbox::Payload* add_payload();
  const ::google::protobuf::RepeatedPtrField< ::controlbox::Payload >&
      payload() const;

  // uint32 msgId = 1;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 1;
  ::google::protobuf::uint32 msgid() const;
  void set_msgid(::google::protobuf::uint32 value);

  // .controlbox.ErrorCode error = 2;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  ::controlbox::ErrorCode error() const;
  void set_error(::controlbox::ErrorCode value);

  // @@protoc_insertion_point(class_scope:controlbox.Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::controlbox::Payload > payload_;
  ::google::protobuf::uint32 msgid_;
  int error_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_controlbox_5ftest_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Payload

// uint32 blockId = 1;
inline void Payload::clear_blockid() {
  blockid_ = 0u;
}
inline ::google::protobuf::uint32 Payload::blockid() const {
  // @@protoc_insertion_point(field_get:controlbox.Payload.blockId)
  return blockid_;
}
inline void Payload::set_blockid(::google::protobuf::uint32 value) {
  
  blockid_ = value;
  // @@protoc_insertion_point(field_set:controlbox.Payload.blockId)
}

// .brewblox.BlockType objtype = 2;
inline void Payload::clear_objtype() {
  objtype_ = 0;
}
inline ::brewblox::BlockType Payload::objtype() const {
  // @@protoc_insertion_point(field_get:controlbox.Payload.objtype)
  return static_cast< ::brewblox::BlockType >(objtype_);
}
inline void Payload::set_objtype(::brewblox::BlockType value) {
  
  objtype_ = value;
  // @@protoc_insertion_point(field_set:controlbox.Payload.objtype)
}

// uint32 subtype = 3 [(.nanopb) = {
inline void Payload::clear_subtype() {
  subtype_ = 0u;
}
inline ::google::protobuf::uint32 Payload::subtype() const {
  // @@protoc_insertion_point(field_get:controlbox.Payload.subtype)
  return subtype_;
}
inline void Payload::set_subtype(::google::protobuf::uint32 value) {
  
  subtype_ = value;
  // @@protoc_insertion_point(field_set:controlbox.Payload.subtype)
}

// string data = 4;
inline void Payload::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Payload::data() const {
  // @@protoc_insertion_point(field_get:controlbox.Payload.data)
  return data_.GetNoArena();
}
inline void Payload::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:controlbox.Payload.data)
}
#if LANG_CXX11
inline void Payload::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:controlbox.Payload.data)
}
#endif
inline void Payload::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:controlbox.Payload.data)
}
inline void Payload::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:controlbox.Payload.data)
}
inline ::std::string* Payload::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:controlbox.Payload.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Payload::release_data() {
  // @@protoc_insertion_point(field_release:controlbox.Payload.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Payload::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:controlbox.Payload.data)
}

// -------------------------------------------------------------------

// Request

// uint32 msgId = 1;
inline void Request::clear_msgid() {
  msgid_ = 0u;
}
inline ::google::protobuf::uint32 Request::msgid() const {
  // @@protoc_insertion_point(field_get:controlbox.Request.msgId)
  return msgid_;
}
inline void Request::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:controlbox.Request.msgId)
}

// .controlbox.Opcode opcode = 2;
inline void Request::clear_opcode() {
  opcode_ = 0;
}
inline ::controlbox::Opcode Request::opcode() const {
  // @@protoc_insertion_point(field_get:controlbox.Request.opcode)
  return static_cast< ::controlbox::Opcode >(opcode_);
}
inline void Request::set_opcode(::controlbox::Opcode value) {
  
  opcode_ = value;
  // @@protoc_insertion_point(field_set:controlbox.Request.opcode)
}

// .controlbox.Payload payload = 3;
inline bool Request::has_payload() const {
  return this != internal_default_instance() && payload_ != NULL;
}
inline void Request::clear_payload() {
  if (GetArenaNoVirtual() == NULL && payload_ != NULL) {
    delete payload_;
  }
  payload_ = NULL;
}
inline const ::controlbox::Payload& Request::_internal_payload() const {
  return *payload_;
}
inline const ::controlbox::Payload& Request::payload() const {
  const ::controlbox::Payload* p = payload_;
  // @@protoc_insertion_point(field_get:controlbox.Request.payload)
  return p != NULL ? *p : *reinterpret_cast<const ::controlbox::Payload*>(
      &::controlbox::_Payload_default_instance_);
}
inline ::controlbox::Payload* Request::release_payload() {
  // @@protoc_insertion_point(field_release:controlbox.Request.payload)
  
  ::controlbox::Payload* temp = payload_;
  payload_ = NULL;
  return temp;
}
inline ::controlbox::Payload* Request::mutable_payload() {
  
  if (payload_ == NULL) {
    auto* p = CreateMaybeMessage<::controlbox::Payload>(GetArenaNoVirtual());
    payload_ = p;
  }
  // @@protoc_insertion_point(field_mutable:controlbox.Request.payload)
  return payload_;
}
inline void Request::set_allocated_payload(::controlbox::Payload* payload) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete payload_;
  }
  if (payload) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      payload = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, payload, submessage_arena);
    }
    
  } else {
    
  }
  payload_ = payload;
  // @@protoc_insertion_point(field_set_allocated:controlbox.Request.payload)
}

// -------------------------------------------------------------------

// Response

// uint32 msgId = 1;
inline void Response::clear_msgid() {
  msgid_ = 0u;
}
inline ::google::protobuf::uint32 Response::msgid() const {
  // @@protoc_insertion_point(field_get:controlbox.Response.msgId)
  return msgid_;
}
inline void Response::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:controlbox.Response.msgId)
}

// .controlbox.ErrorCode error = 2;
inline void Response::clear_error() {
  error_ = 0;
}
inline ::controlbox::ErrorCode Response::error() const {
  // @@protoc_insertion_point(field_get:controlbox.Response.error)
  return static_cast< ::controlbox::ErrorCode >(error_);
}
inline void Response::set_error(::controlbox::ErrorCode value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:controlbox.Response.error)
}

// repeated .controlbox.Payload payload = 3;
inline int Response::payload_size() const {
  return payload_.size();
}
inline void Response::clear_payload() {
  payload_.Clear();
}
inline ::controlbox::Payload* Response::mutable_payload(int index) {
  // @@protoc_insertion_point(field_mutable:controlbox.Response.payload)
  return payload_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::controlbox::Payload >*
Response::mutable_payload() {
  // @@protoc_insertion_point(field_mutable_list:controlbox.Response.payload)
  return &payload_;
}
inline const ::controlbox::Payload& Response::payload(int index) const {
  // @@protoc_insertion_point(field_get:controlbox.Response.payload)
  return payload_.Get(index);
}
inline ::controlbox::Payload* Response::add_payload() {
  // @@protoc_insertion_point(field_add:controlbox.Response.payload)
  return payload_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::controlbox::Payload >&
Response::payload() const {
  // @@protoc_insertion_point(field_list:controlbox.Response.payload)
  return payload_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace controlbox

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::controlbox::Opcode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::controlbox::Opcode>() {
  return ::controlbox::Opcode_descriptor();
}
template <> struct is_proto_enum< ::controlbox::ErrorCode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::controlbox::ErrorCode>() {
  return ::controlbox::ErrorCode_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_controlbox_5ftest_2eproto
