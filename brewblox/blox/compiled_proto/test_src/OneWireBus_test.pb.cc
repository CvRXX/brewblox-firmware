// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OneWireBus_test.proto

#include "OneWireBus_test.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace blox {
constexpr OneWireBusCommand::OneWireBusCommand(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : opcode_(0u)
  , data_(0u){}
struct OneWireBusCommandDefaultTypeInternal {
  constexpr OneWireBusCommandDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~OneWireBusCommandDefaultTypeInternal() {}
  union {
    OneWireBusCommand _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT OneWireBusCommandDefaultTypeInternal _OneWireBusCommand_default_instance_;
constexpr OneWireBus::OneWireBus(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : address_()
  , command_(nullptr){}
struct OneWireBusDefaultTypeInternal {
  constexpr OneWireBusDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~OneWireBusDefaultTypeInternal() {}
  union {
    OneWireBus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT OneWireBusDefaultTypeInternal _OneWireBus_default_instance_;
}  // namespace blox
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_OneWireBus_5ftest_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_OneWireBus_5ftest_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_OneWireBus_5ftest_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_OneWireBus_5ftest_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::blox::OneWireBusCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::blox::OneWireBusCommand, opcode_),
  PROTOBUF_FIELD_OFFSET(::blox::OneWireBusCommand, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::blox::OneWireBus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::blox::OneWireBus, command_),
  PROTOBUF_FIELD_OFFSET(::blox::OneWireBus, address_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::blox::OneWireBusCommand)},
  { 7, -1, sizeof(::blox::OneWireBus)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::blox::_OneWireBusCommand_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::blox::_OneWireBus_default_instance_),
};

const char descriptor_table_protodef_OneWireBus_5ftest_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025OneWireBus_test.proto\022\004blox\032\023brewblox_"
  "test.proto\032\021nanopb_test.proto\"\?\n\021OneWire"
  "BusCommand\022\025\n\006opcode\030\001 \001(\rB\005\222\?\0028\010\022\023\n\004dat"
  "a\030\002 \001(\rB\005\222\?\0028\010\"^\n\nOneWireBus\022(\n\007command\030"
  "\001 \001(\0132\027.blox.OneWireBusCommand\022\035\n\007addres"
  "s\030\002 \003(\006B\014\212\265\030\002 \001\212\265\030\002(\001:\007\212\265\030\003\030\202\002b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_OneWireBus_5ftest_2eproto_deps[2] = {
  &::descriptor_table_brewblox_5ftest_2eproto,
  &::descriptor_table_nanopb_5ftest_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_OneWireBus_5ftest_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_OneWireBus_5ftest_2eproto = {
  false, false, 238, descriptor_table_protodef_OneWireBus_5ftest_2eproto, "OneWireBus_test.proto", 
  &descriptor_table_OneWireBus_5ftest_2eproto_once, descriptor_table_OneWireBus_5ftest_2eproto_deps, 2, 2,
  schemas, file_default_instances, TableStruct_OneWireBus_5ftest_2eproto::offsets,
  file_level_metadata_OneWireBus_5ftest_2eproto, file_level_enum_descriptors_OneWireBus_5ftest_2eproto, file_level_service_descriptors_OneWireBus_5ftest_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_OneWireBus_5ftest_2eproto_getter() {
  return &descriptor_table_OneWireBus_5ftest_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_OneWireBus_5ftest_2eproto(&descriptor_table_OneWireBus_5ftest_2eproto);
namespace blox {

// ===================================================================

class OneWireBusCommand::_Internal {
 public:
};

OneWireBusCommand::OneWireBusCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:blox.OneWireBusCommand)
}
OneWireBusCommand::OneWireBusCommand(const OneWireBusCommand& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&opcode_, &from.opcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&data_) -
    reinterpret_cast<char*>(&opcode_)) + sizeof(data_));
  // @@protoc_insertion_point(copy_constructor:blox.OneWireBusCommand)
}

inline void OneWireBusCommand::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&opcode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&data_) -
    reinterpret_cast<char*>(&opcode_)) + sizeof(data_));
}

OneWireBusCommand::~OneWireBusCommand() {
  // @@protoc_insertion_point(destructor:blox.OneWireBusCommand)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void OneWireBusCommand::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void OneWireBusCommand::ArenaDtor(void* object) {
  OneWireBusCommand* _this = reinterpret_cast< OneWireBusCommand* >(object);
  (void)_this;
}
void OneWireBusCommand::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OneWireBusCommand::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OneWireBusCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:blox.OneWireBusCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&opcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_) -
      reinterpret_cast<char*>(&opcode_)) + sizeof(data_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OneWireBusCommand::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 opcode = 1 [(.nanopb_test) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          opcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 data = 2 [(.nanopb_test) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          data_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OneWireBusCommand::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:blox.OneWireBusCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 opcode = 1 [(.nanopb_test) = {
  if (this->_internal_opcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_opcode(), target);
  }

  // uint32 data = 2 [(.nanopb_test) = {
  if (this->_internal_data() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blox.OneWireBusCommand)
  return target;
}

size_t OneWireBusCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blox.OneWireBusCommand)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 opcode = 1 [(.nanopb_test) = {
  if (this->_internal_opcode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_opcode());
  }

  // uint32 data = 2 [(.nanopb_test) = {
  if (this->_internal_data() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_data());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OneWireBusCommand::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    OneWireBusCommand::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OneWireBusCommand::GetClassData() const { return &_class_data_; }

void OneWireBusCommand::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<OneWireBusCommand *>(to)->MergeFrom(
      static_cast<const OneWireBusCommand &>(from));
}


void OneWireBusCommand::MergeFrom(const OneWireBusCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blox.OneWireBusCommand)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_opcode() != 0) {
    _internal_set_opcode(from._internal_opcode());
  }
  if (from._internal_data() != 0) {
    _internal_set_data(from._internal_data());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OneWireBusCommand::CopyFrom(const OneWireBusCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blox.OneWireBusCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneWireBusCommand::IsInitialized() const {
  return true;
}

void OneWireBusCommand::InternalSwap(OneWireBusCommand* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OneWireBusCommand, data_)
      + sizeof(OneWireBusCommand::data_)
      - PROTOBUF_FIELD_OFFSET(OneWireBusCommand, opcode_)>(
          reinterpret_cast<char*>(&opcode_),
          reinterpret_cast<char*>(&other->opcode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OneWireBusCommand::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_OneWireBus_5ftest_2eproto_getter, &descriptor_table_OneWireBus_5ftest_2eproto_once,
      file_level_metadata_OneWireBus_5ftest_2eproto[0]);
}

// ===================================================================

class OneWireBus::_Internal {
 public:
  static const ::blox::OneWireBusCommand& command(const OneWireBus* msg);
};

const ::blox::OneWireBusCommand&
OneWireBus::_Internal::command(const OneWireBus* msg) {
  return *msg->command_;
}
OneWireBus::OneWireBus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  address_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:blox.OneWireBus)
}
OneWireBus::OneWireBus(const OneWireBus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      address_(from.address_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_command()) {
    command_ = new ::blox::OneWireBusCommand(*from.command_);
  } else {
    command_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:blox.OneWireBus)
}

inline void OneWireBus::SharedCtor() {
command_ = nullptr;
}

OneWireBus::~OneWireBus() {
  // @@protoc_insertion_point(destructor:blox.OneWireBus)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void OneWireBus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete command_;
}

void OneWireBus::ArenaDtor(void* object) {
  OneWireBus* _this = reinterpret_cast< OneWireBus* >(object);
  (void)_this;
}
void OneWireBus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OneWireBus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OneWireBus::Clear() {
// @@protoc_insertion_point(message_clear_start:blox.OneWireBus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.Clear();
  if (GetArenaForAllocation() == nullptr && command_ != nullptr) {
    delete command_;
  }
  command_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OneWireBus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .blox.OneWireBusCommand command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_command(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated fixed64 address = 2 [(.brewblox_test) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFixed64Parser(_internal_mutable_address(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17) {
          _internal_add_address(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr));
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OneWireBus::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:blox.OneWireBus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .blox.OneWireBusCommand command = 1;
  if (this->_internal_has_command()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::command(this), target, stream);
  }

  // repeated fixed64 address = 2 [(.brewblox_test) = {
  if (this->_internal_address_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_address(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blox.OneWireBus)
  return target;
}

size_t OneWireBus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blox.OneWireBus)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated fixed64 address = 2 [(.brewblox_test) = {
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_address_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    total_size += data_size;
  }

  // .blox.OneWireBusCommand command = 1;
  if (this->_internal_has_command()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *command_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OneWireBus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    OneWireBus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OneWireBus::GetClassData() const { return &_class_data_; }

void OneWireBus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<OneWireBus *>(to)->MergeFrom(
      static_cast<const OneWireBus &>(from));
}


void OneWireBus::MergeFrom(const OneWireBus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blox.OneWireBus)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  address_.MergeFrom(from.address_);
  if (from._internal_has_command()) {
    _internal_mutable_command()->::blox::OneWireBusCommand::MergeFrom(from._internal_command());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OneWireBus::CopyFrom(const OneWireBus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blox.OneWireBus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneWireBus::IsInitialized() const {
  return true;
}

void OneWireBus::InternalSwap(OneWireBus* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  address_.InternalSwap(&other->address_);
  swap(command_, other->command_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OneWireBus::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_OneWireBus_5ftest_2eproto_getter, &descriptor_table_OneWireBus_5ftest_2eproto_once,
      file_level_metadata_OneWireBus_5ftest_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace blox
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::blox::OneWireBusCommand* Arena::CreateMaybeMessage< ::blox::OneWireBusCommand >(Arena* arena) {
  return Arena::CreateMessageInternal< ::blox::OneWireBusCommand >(arena);
}
template<> PROTOBUF_NOINLINE ::blox::OneWireBus* Arena::CreateMaybeMessage< ::blox::OneWireBus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::blox::OneWireBus >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
