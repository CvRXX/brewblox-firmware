## -*- Makefile -*-
ROOT_DIR = $(shell git rev-parse --show-toplevel)

# include ../checkers.mk # sanitizer and gcov

# lib/gui
INCLUDE_DIRS += $(ROOT_DIR)/lib/guis


INCLUDE_DIRS += $(ROOT_DIR)/external_libs/expected/expected/include/


INCLUDE_DIRS += $(ROOT_DIR)/external_libs/lvgl_wrapper/lvgl/src

# Recursive wildcard function
rwildcard = $(wildcard $1$2) $(foreach d,$(wildcard $1*),$(call rwildcard,$d/,$2))

# enumerates files in the filesystem and returns their path relative to the project root
# $1 the directory relative to the project root
# $2 the pattern to match, e.g. *.cpp
target_files = $(patsubst $(ROOT_DIR)/%,%,$(call rwildcard,$(ROOT_DIR)/$1,$2))

CSRC += $(call target_files,external_libs/lvgl_wrapper/lvgl/src,*.c)

# CSRC += $(wildcard $(ROOT_DIR)/external_libs/lvgl_wrapper/lvgl/src/*.c)
CFLAGS += -DLV_CONF_INCLUDE_SIMPLE -DLV_LVGL_H_INCLUDE_SIMPLE


CPPSRC += $(wildcard $(ROOT_DIR)/lib/guis/dynamic_gui/styles/*.cpp)
CSRC += $(wildcard $(ROOT_DIR)/lib/guis/dynamic_gui/fonts/*.c)


# lib/proto

CPPFLAGS += -isystem $(ROOT_DIR)/lib/proto/inc
CSRC += $(wildcard $(ROOT_DIR)/lib/proto/inc/proto/*.pb.c)



# test/proto
# protobuf sources generated by google protobuf for tests

CPPFLAGS += -isystem $(ROOT_DIR)/test/proto/inc
CCSRC += $(wildcard $(ROOT_DIR)/test/proto/inc/proto/*.pb.cc)

# device-os nanopb
INCLUDE_DIRS += $(ROOT_DIR)/external_libs/device-os/third_party/nanopb/nanopb
CSRC += $(wildcard $(ROOT_DIR)/external_libs/device-os/third_party/nanopb/nanopb/*.c)

# catch test
INCLUDE_DIRS += $(ROOT_DIR)/external_libs/device-os/third_party/catch2/catch2/single_include/catch2



# test/gui
# listed individually to help with refactoring
CPPSRC += $(ROOT_DIR)/test/gui/dynamicDisplay_test.cpp
CPPSRC += $(ROOT_DIR)/test/gui/content_test.cpp
CPPSRC += $(ROOT_DIR)/test/gui/horizontal_split_test.cpp
CPPSRC += $(ROOT_DIR)/test/gui/vertical_split_test.cpp
CPPSRC += $(ROOT_DIR)/test/gui/runner.cpp




# include boost
CPPFLAGS += -isystem $(BOOST_ROOT)

# include google protobuf dependencies
CPPFLAGS += $(shell pkg-config --cflags protobuf)
LDFLAGS += $(shell pkg-config --libs protobuf)
CFLAGS += -DPB_MSGID=1

# Generate dependency files automatically.
CFLAGS += -g -Og
CFLAGS += -MD -MP -MF $@.d
CFLAGS += -DDEBUG_BUILD

CFLAGS += -ffunction-sections -Wall
CFLAGS += -Werror=deprecated-declarations

CPPFLAGS += -std=gnu++17
CPPFLAGS += -Werror

CFLAGS += -pthread

CPPFLAGS += -Wsuggest-override
CPPFLAGS += -Wsuggest-final-types
CPPFLAGS += -Wsuggest-final-methods

# don't generate warnings for system headers
CFLAGS += -Wno-system-headers

include ../targets.mk
