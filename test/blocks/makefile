## -*- Makefile -*-
ROOT_DIR = $(shell git rev-parse --show-toplevel)

include ../coverage.mk
# include ../sanitize.mk

# lib/blocks
INCLUDE_DIRS += $(ROOT_DIR)/lib/blocks/inc
CPPSRC += $(wildcard $(ROOT_DIR)/lib/blocks/src/*.cpp)

# lib/cbox
INCLUDE_DIRS += $(ROOT_DIR)/lib/cbox/inc
CPPSRC += $(wildcard $(ROOT_DIR)/lib/cbox/src/*.cpp)

# lib/control
INCLUDE_DIRS += $(ROOT_DIR)/lib/control/inc
# CPPSRC += $(call here_files,lib/control/src,*.cpp)
CPPSRC += $(wildcard $(ROOT_DIR)/lib/control/src/*.cpp)

# lib/hal - only build stubs
INCLUDE_DIRS += $(ROOT_DIR)/lib/blox_hal/inc
CPPSRC += $(wildcard $(ROOT_DIR)/platform/stub/*.cpp)

# lib/proto
INCLUDE_DIRS += $(ROOT_DIR)/lib/proto/inc
CSRC += $(wildcard $(ROOT_DIR)/lib/proto/inc/proto/*.pb.c)

# test/proto
# protobuf sources generated by google protobuf for tests
INCLUDE_DIRS += $(ROOT_DIR)/test/proto/inc
CCSRC += $(wildcard $(ROOT_DIR)/test/proto/inc/proto/*.pb.cc)

# platform
INCLUDE_DIRS += $(ROOT_DIR)/platform/particle/spark/inc
INCLUDE_DIRS += $(ROOT_DIR)/platform/particle/d4d_display/inc
INCLUDE_DIRS += $(ROOT_DIR)/platform/particle/mdns/inc
INCLUDE_DIRS += $(ROOT_DIR)/platform/particle/eGUI/D4D

# add spark files (tests use emulated hardware)
CPPSRC += platform/particle/spark/src/Board.cpp
CPPSRC += platform/particle/spark/src/Brewblox.cpp
CPPSRC += platform/particle/spark/src/Spark2PinsBlock.cpp
CPPSRC += platform/particle/spark/src/Spark3PinsBlock.cpp
CPPSRC += platform/particle/spark/src/ConnectionPool.cpp

# device-os nanopb
INCLUDE_DIRS += $(ROOT_DIR)/external_libs/device-os/third_party/nanopb/nanopb
CSRC += $(wildcard $(ROOT_DIR)/external_libs/device-os/third_party/nanopb/nanopb/*.c)

# expected
INCLUDE_DIRS += $(ROOT_DIR)/external_libs/expected/expected/include

# catch test
INCLUDE_DIRS += $(ROOT_DIR)/external_libs/device-os/third_party/catch2/catch2/single_include/catch2

# spark HAL includes
CPPFLAGS += -isystem $(ROOT_DIR)/external_libs/device-os/hal/inc
CPPFLAGS += -isystem $(ROOT_DIR)/external_libs/device-os/hal/shared
CPPFLAGS += -isystem $(ROOT_DIR)/external_libs/device-os/services/inc
CPPFLAGS += -isystem $(ROOT_DIR)/external_libs/device-os/hal/src/gcc
CPPFLAGS += -isystem $(ROOT_DIR)/external_libs/device-os/hal/src/photon
CPPFLAGS += -isystem $(ROOT_DIR)/external_libs/device-os/hal/src/newhal
CPPFLAGS += -isystem $(ROOT_DIR)/external_libs/device-os/wiring/inc
CPPFLAGS += -isystem $(ROOT_DIR)/external_libs/cnl/cnl/include

CPPSRC += external_libs/device-os/hal/src/gcc/gpio_hal.cpp
CPPSRC += external_libs/device-os/hal/src/gcc/eeprom_hal.cpp
CPPSRC += external_libs/device-os/hal/src/gcc/filesystem.cpp
CPPSRC += external_libs/device-os/test/unit_tests/communication/hal_stubs.cpp

CFLAGS += -DPLATFORM_ID=3

# test/shared
INCLUDE_DIRS += $(ROOT_DIR)/test/shared
CPPSRC += $(wildcard $(ROOT_DIR)/test/shared/*.cpp)

# test/blocks
# listed individually to help with refactoring
CPPSRC += $(ROOT_DIR)/test/blocks/runner.cpp
CPPSRC += $(ROOT_DIR)/test/blocks/TestApplication.cpp
CPPSRC += $(ROOT_DIR)/test/blocks/ActuatorLogicBlock_test.cpp
CPPSRC += $(ROOT_DIR)/test/blocks/ActuatorOffsetBlock_test.cpp
CPPSRC += $(ROOT_DIR)/test/blocks/ActuatorPwmBlock_test.cpp
CPPSRC += $(ROOT_DIR)/test/blocks/AutoDiscover_test.cpp
CPPSRC += $(ROOT_DIR)/test/blocks/BalancerAndMutexBlock_test.cpp
CPPSRC += $(ROOT_DIR)/test/blocks/DigitalActuatorBlock_test.cpp
CPPSRC += $(ROOT_DIR)/test/blocks/DisplaySettingsBlock_test.cpp
CPPSRC += $(ROOT_DIR)/test/blocks/FastPwmBlock_test.cpp
CPPSRC += $(ROOT_DIR)/test/blocks/OneWireBusBlock_test.cpp
CPPSRC += $(ROOT_DIR)/test/blocks/OneWireTempSensorBlock_test.cpp
CPPSRC += $(ROOT_DIR)/test/blocks/PidBlock_test.cpp
CPPSRC += $(ROOT_DIR)/test/blocks/SequenceBlock_test.cpp
CPPSRC += $(ROOT_DIR)/test/blocks/SetpointProfileBlock_test.cpp
CPPSRC += $(ROOT_DIR)/test/blocks/SetpointSensorPairBlock_test.cpp
CPPSRC += $(ROOT_DIR)/test/blocks/SysInfoBlock_test.cpp
CPPSRC += $(ROOT_DIR)/test/blocks/TempSensorCombiBlock_test.cpp
CPPSRC += $(ROOT_DIR)/test/blocks/TempSensorExternalBlock_test.cpp
CPPSRC += $(ROOT_DIR)/test/blocks/TempSensorMockBlock_test.cpp


# include boost
CPPFLAGS += -isystem $(BOOST_ROOT)

# include google protobuf dependencies
CPPFLAGS += $(shell pkg-config --cflags protobuf)
LDFLAGS += $(shell pkg-config --libs protobuf)
CFLAGS += -DPB_MSGID=1

# Generate dependency files automatically.
CFLAGS += -g -Og
CFLAGS += -MD -MP -MF $@.d
CFLAGS += -DDEBUG_BUILD

CFLAGS += -ffunction-sections -Wall
CFLAGS += -Werror=deprecated-declarations

CPPFLAGS += -std=gnu++17
CFLAGS += -pthread

CPPFLAGS += -Wsuggest-override
CPPFLAGS += -Wsuggest-final-types
CPPFLAGS += -Wsuggest-final-methods

# don't generate warnings for system headers
CFLAGS += -Wno-system-headers

# ignore warnings for generated protobuf files
CCFLAGS += -Wno-maybe-uninitialized

include ../targets.mk
