// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Stepper_test.proto

#ifndef PROTOBUF_INCLUDED_Stepper_5ftest_2eproto
#define PROTOBUF_INCLUDED_Stepper_5ftest_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "brewblox_test.pb.h"
#include "nanopb_test.pb.h"
#include "IoArray_test.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_Stepper_5ftest_2eproto 

namespace protobuf_Stepper_5ftest_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_Stepper_5ftest_2eproto
namespace blox_test {
namespace Stepper {
class Block;
class BlockDefaultTypeInternal;
extern BlockDefaultTypeInternal _Block_default_instance_;
class Step;
class StepDefaultTypeInternal;
extern StepDefaultTypeInternal _Step_default_instance_;
}  // namespace Stepper
}  // namespace blox_test
namespace google {
namespace protobuf {
template<> ::blox_test::Stepper::Block* Arena::CreateMaybeMessage<::blox_test::Stepper::Block>(Arena*);
template<> ::blox_test::Stepper::Step* Arena::CreateMaybeMessage<::blox_test::Stepper::Step>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace blox_test {
namespace Stepper {

enum Instruction {
  NOOP = 0,
  RESTART = 1,
  TIME_WAIT_DURATION = 2,
  TIME_WAIT_ABSOLUTE = 3,
  PROFILE_ENABLE = 10,
  PROFILE_RESET = 11,
  PROFILE_WAIT = 12,
  SETPOINT_ENABLE = 20,
  SETPOINT_SETTING = 21,
  SETPOINT_WAIT = 22,
  DIGITAL_ENABLE = 30,
  DIGITAL_SETTING = 31,
  DIGITAL_WAIT = 32,
  ANALOG_ENABLE = 40,
  ANALOG_SETTING = 41,
  ANALOG_WAIT = 42,
  Instruction_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Instruction_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Instruction_IsValid(int value);
const Instruction Instruction_MIN = NOOP;
const Instruction Instruction_MAX = ANALOG_WAIT;
const int Instruction_ARRAYSIZE = Instruction_MAX + 1;

const ::google::protobuf::EnumDescriptor* Instruction_descriptor();
inline const ::std::string& Instruction_Name(Instruction value) {
  return ::google::protobuf::internal::NameOfEnum(
    Instruction_descriptor(), value);
}
inline bool Instruction_Parse(
    const ::std::string& name, Instruction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Instruction>(
    Instruction_descriptor(), name, value);
}
// ===================================================================

class Step : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:blox_test.Stepper.Step) */ {
 public:
  Step();
  virtual ~Step();

  Step(const Step& from);

  inline Step& operator=(const Step& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Step(Step&& from) noexcept
    : Step() {
    *this = ::std::move(from);
  }

  inline Step& operator=(Step&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Step& default_instance();

  enum TargetOneofCase {
    kSetpointId = 2,
    kDigitalId = 3,
    kAnalogId = 4,
    kProfileId = 5,
    TARGET_ONEOF_NOT_SET = 0,
  };

  enum ValueOneofCase {
    kBooleanValue = 10,
    kTimeValue = 11,
    kSetpointValue = 12,
    kSetpointOffsetValue = 13,
    kDigitalValue = 14,
    kAnalogValue = 15,
    VALUE_ONEOF_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Step* internal_default_instance() {
    return reinterpret_cast<const Step*>(
               &_Step_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Step* other);
  friend void swap(Step& a, Step& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Step* New() const final {
    return CreateMaybeMessage<Step>(NULL);
  }

  Step* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Step>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Step& from);
  void MergeFrom(const Step& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Step* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .blox_test.Stepper.Instruction instruction = 1;
  void clear_instruction();
  static const int kInstructionFieldNumber = 1;
  ::blox_test::Stepper::Instruction instruction() const;
  void set_instruction(::blox_test::Stepper::Instruction value);

  // uint32 setpointId = 2 [(.nanopb) = {
  private:
  bool has_setpointid() const;
  public:
  void clear_setpointid();
  static const int kSetpointIdFieldNumber = 2;
  ::google::protobuf::uint32 setpointid() const;
  void set_setpointid(::google::protobuf::uint32 value);

  // uint32 digitalId = 3 [(.nanopb) = {
  private:
  bool has_digitalid() const;
  public:
  void clear_digitalid();
  static const int kDigitalIdFieldNumber = 3;
  ::google::protobuf::uint32 digitalid() const;
  void set_digitalid(::google::protobuf::uint32 value);

  // uint32 analogId = 4 [(.nanopb) = {
  private:
  bool has_analogid() const;
  public:
  void clear_analogid();
  static const int kAnalogIdFieldNumber = 4;
  ::google::protobuf::uint32 analogid() const;
  void set_analogid(::google::protobuf::uint32 value);

  // uint32 profileId = 5 [(.nanopb) = {
  private:
  bool has_profileid() const;
  public:
  void clear_profileid();
  static const int kProfileIdFieldNumber = 5;
  ::google::protobuf::uint32 profileid() const;
  void set_profileid(::google::protobuf::uint32 value);

  // bool booleanValue = 10 [(.brewblox.field) = {
  private:
  bool has_booleanvalue() const;
  public:
  void clear_booleanvalue();
  static const int kBooleanValueFieldNumber = 10;
  bool booleanvalue() const;
  void set_booleanvalue(bool value);

  // uint32 timeValue = 11 [(.nanopb) = {
  private:
  bool has_timevalue() const;
  public:
  void clear_timevalue();
  static const int kTimeValueFieldNumber = 11;
  ::google::protobuf::uint32 timevalue() const;
  void set_timevalue(::google::protobuf::uint32 value);

  // sint32 setpointValue = 12 [(.nanopb) = {
  private:
  bool has_setpointvalue() const;
  public:
  void clear_setpointvalue();
  static const int kSetpointValueFieldNumber = 12;
  ::google::protobuf::int32 setpointvalue() const;
  void set_setpointvalue(::google::protobuf::int32 value);

  // sint32 setpointOffsetValue = 13 [(.nanopb) = {
  private:
  bool has_setpointoffsetvalue() const;
  public:
  void clear_setpointoffsetvalue();
  static const int kSetpointOffsetValueFieldNumber = 13;
  ::google::protobuf::int32 setpointoffsetvalue() const;
  void set_setpointoffsetvalue(::google::protobuf::int32 value);

  // .blox_test.IoArray.DigitalState digitalValue = 14 [(.brewblox.field) = {
  private:
  bool has_digitalvalue() const;
  public:
  void clear_digitalvalue();
  static const int kDigitalValueFieldNumber = 14;
  ::blox_test::IoArray::DigitalState digitalvalue() const;
  void set_digitalvalue(::blox_test::IoArray::DigitalState value);

  // sint32 analogValue = 15 [(.nanopb) = {
  private:
  bool has_analogvalue() const;
  public:
  void clear_analogvalue();
  static const int kAnalogValueFieldNumber = 15;
  ::google::protobuf::int32 analogvalue() const;
  void set_analogvalue(::google::protobuf::int32 value);

  void clear_target_oneof();
  TargetOneofCase target_oneof_case() const;
  void clear_value_oneof();
  ValueOneofCase value_oneof_case() const;
  // @@protoc_insertion_point(class_scope:blox_test.Stepper.Step)
 private:
  void set_has_setpointid();
  void set_has_digitalid();
  void set_has_analogid();
  void set_has_profileid();
  void set_has_booleanvalue();
  void set_has_timevalue();
  void set_has_setpointvalue();
  void set_has_setpointoffsetvalue();
  void set_has_digitalvalue();
  void set_has_analogvalue();

  inline bool has_target_oneof() const;
  inline void clear_has_target_oneof();

  inline bool has_value_oneof() const;
  inline void clear_has_value_oneof();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int instruction_;
  union TargetOneofUnion {
    TargetOneofUnion() {}
    ::google::protobuf::uint32 setpointid_;
    ::google::protobuf::uint32 digitalid_;
    ::google::protobuf::uint32 analogid_;
    ::google::protobuf::uint32 profileid_;
  } target_oneof_;
  union ValueOneofUnion {
    ValueOneofUnion() {}
    bool booleanvalue_;
    ::google::protobuf::uint32 timevalue_;
    ::google::protobuf::int32 setpointvalue_;
    ::google::protobuf::int32 setpointoffsetvalue_;
    int digitalvalue_;
    ::google::protobuf::int32 analogvalue_;
  } value_oneof_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[2];

  friend struct ::protobuf_Stepper_5ftest_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Block : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:blox_test.Stepper.Block) */ {
 public:
  Block();
  virtual ~Block();

  Block(const Block& from);

  inline Block& operator=(const Block& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Block(Block&& from) noexcept
    : Block() {
    *this = ::std::move(from);
  }

  inline Block& operator=(Block&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Block& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Block* internal_default_instance() {
    return reinterpret_cast<const Block*>(
               &_Block_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Block* other);
  friend void swap(Block& a, Block& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Block* New() const final {
    return CreateMaybeMessage<Block>(NULL);
  }

  Block* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Block>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Block& from);
  void MergeFrom(const Block& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Block* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .blox_test.Stepper.Step steps = 4;
  int steps_size() const;
  void clear_steps();
  static const int kStepsFieldNumber = 4;
  ::blox_test::Stepper::Step* mutable_steps(int index);
  ::google::protobuf::RepeatedPtrField< ::blox_test::Stepper::Step >*
      mutable_steps();
  const ::blox_test::Stepper::Step& steps(int index) const;
  ::blox_test::Stepper::Step* add_steps();
  const ::google::protobuf::RepeatedPtrField< ::blox_test::Stepper::Step >&
      steps() const;

  // bool enabled = 1 [(.brewblox.field) = {
  void clear_enabled();
  static const int kEnabledFieldNumber = 1;
  bool enabled() const;
  void set_enabled(bool value);

  // uint32 activeStep = 2 [(.nanopb) = {
  void clear_activestep();
  static const int kActiveStepFieldNumber = 2;
  ::google::protobuf::uint32 activestep() const;
  void set_activestep(::google::protobuf::uint32 value);

  // uint32 activeStepStartedAt = 3 [(.brewblox.field) = {
  void clear_activestepstartedat();
  static const int kActiveStepStartedAtFieldNumber = 3;
  ::google::protobuf::uint32 activestepstartedat() const;
  void set_activestepstartedat(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:blox_test.Stepper.Block)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::blox_test::Stepper::Step > steps_;
  bool enabled_;
  ::google::protobuf::uint32 activestep_;
  ::google::protobuf::uint32 activestepstartedat_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Stepper_5ftest_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Step

// .blox_test.Stepper.Instruction instruction = 1;
inline void Step::clear_instruction() {
  instruction_ = 0;
}
inline ::blox_test::Stepper::Instruction Step::instruction() const {
  // @@protoc_insertion_point(field_get:blox_test.Stepper.Step.instruction)
  return static_cast< ::blox_test::Stepper::Instruction >(instruction_);
}
inline void Step::set_instruction(::blox_test::Stepper::Instruction value) {
  
  instruction_ = value;
  // @@protoc_insertion_point(field_set:blox_test.Stepper.Step.instruction)
}

// uint32 setpointId = 2 [(.nanopb) = {
inline bool Step::has_setpointid() const {
  return target_oneof_case() == kSetpointId;
}
inline void Step::set_has_setpointid() {
  _oneof_case_[0] = kSetpointId;
}
inline void Step::clear_setpointid() {
  if (has_setpointid()) {
    target_oneof_.setpointid_ = 0u;
    clear_has_target_oneof();
  }
}
inline ::google::protobuf::uint32 Step::setpointid() const {
  // @@protoc_insertion_point(field_get:blox_test.Stepper.Step.setpointId)
  if (has_setpointid()) {
    return target_oneof_.setpointid_;
  }
  return 0u;
}
inline void Step::set_setpointid(::google::protobuf::uint32 value) {
  if (!has_setpointid()) {
    clear_target_oneof();
    set_has_setpointid();
  }
  target_oneof_.setpointid_ = value;
  // @@protoc_insertion_point(field_set:blox_test.Stepper.Step.setpointId)
}

// uint32 digitalId = 3 [(.nanopb) = {
inline bool Step::has_digitalid() const {
  return target_oneof_case() == kDigitalId;
}
inline void Step::set_has_digitalid() {
  _oneof_case_[0] = kDigitalId;
}
inline void Step::clear_digitalid() {
  if (has_digitalid()) {
    target_oneof_.digitalid_ = 0u;
    clear_has_target_oneof();
  }
}
inline ::google::protobuf::uint32 Step::digitalid() const {
  // @@protoc_insertion_point(field_get:blox_test.Stepper.Step.digitalId)
  if (has_digitalid()) {
    return target_oneof_.digitalid_;
  }
  return 0u;
}
inline void Step::set_digitalid(::google::protobuf::uint32 value) {
  if (!has_digitalid()) {
    clear_target_oneof();
    set_has_digitalid();
  }
  target_oneof_.digitalid_ = value;
  // @@protoc_insertion_point(field_set:blox_test.Stepper.Step.digitalId)
}

// uint32 analogId = 4 [(.nanopb) = {
inline bool Step::has_analogid() const {
  return target_oneof_case() == kAnalogId;
}
inline void Step::set_has_analogid() {
  _oneof_case_[0] = kAnalogId;
}
inline void Step::clear_analogid() {
  if (has_analogid()) {
    target_oneof_.analogid_ = 0u;
    clear_has_target_oneof();
  }
}
inline ::google::protobuf::uint32 Step::analogid() const {
  // @@protoc_insertion_point(field_get:blox_test.Stepper.Step.analogId)
  if (has_analogid()) {
    return target_oneof_.analogid_;
  }
  return 0u;
}
inline void Step::set_analogid(::google::protobuf::uint32 value) {
  if (!has_analogid()) {
    clear_target_oneof();
    set_has_analogid();
  }
  target_oneof_.analogid_ = value;
  // @@protoc_insertion_point(field_set:blox_test.Stepper.Step.analogId)
}

// uint32 profileId = 5 [(.nanopb) = {
inline bool Step::has_profileid() const {
  return target_oneof_case() == kProfileId;
}
inline void Step::set_has_profileid() {
  _oneof_case_[0] = kProfileId;
}
inline void Step::clear_profileid() {
  if (has_profileid()) {
    target_oneof_.profileid_ = 0u;
    clear_has_target_oneof();
  }
}
inline ::google::protobuf::uint32 Step::profileid() const {
  // @@protoc_insertion_point(field_get:blox_test.Stepper.Step.profileId)
  if (has_profileid()) {
    return target_oneof_.profileid_;
  }
  return 0u;
}
inline void Step::set_profileid(::google::protobuf::uint32 value) {
  if (!has_profileid()) {
    clear_target_oneof();
    set_has_profileid();
  }
  target_oneof_.profileid_ = value;
  // @@protoc_insertion_point(field_set:blox_test.Stepper.Step.profileId)
}

// bool booleanValue = 10 [(.brewblox.field) = {
inline bool Step::has_booleanvalue() const {
  return value_oneof_case() == kBooleanValue;
}
inline void Step::set_has_booleanvalue() {
  _oneof_case_[1] = kBooleanValue;
}
inline void Step::clear_booleanvalue() {
  if (has_booleanvalue()) {
    value_oneof_.booleanvalue_ = false;
    clear_has_value_oneof();
  }
}
inline bool Step::booleanvalue() const {
  // @@protoc_insertion_point(field_get:blox_test.Stepper.Step.booleanValue)
  if (has_booleanvalue()) {
    return value_oneof_.booleanvalue_;
  }
  return false;
}
inline void Step::set_booleanvalue(bool value) {
  if (!has_booleanvalue()) {
    clear_value_oneof();
    set_has_booleanvalue();
  }
  value_oneof_.booleanvalue_ = value;
  // @@protoc_insertion_point(field_set:blox_test.Stepper.Step.booleanValue)
}

// uint32 timeValue = 11 [(.nanopb) = {
inline bool Step::has_timevalue() const {
  return value_oneof_case() == kTimeValue;
}
inline void Step::set_has_timevalue() {
  _oneof_case_[1] = kTimeValue;
}
inline void Step::clear_timevalue() {
  if (has_timevalue()) {
    value_oneof_.timevalue_ = 0u;
    clear_has_value_oneof();
  }
}
inline ::google::protobuf::uint32 Step::timevalue() const {
  // @@protoc_insertion_point(field_get:blox_test.Stepper.Step.timeValue)
  if (has_timevalue()) {
    return value_oneof_.timevalue_;
  }
  return 0u;
}
inline void Step::set_timevalue(::google::protobuf::uint32 value) {
  if (!has_timevalue()) {
    clear_value_oneof();
    set_has_timevalue();
  }
  value_oneof_.timevalue_ = value;
  // @@protoc_insertion_point(field_set:blox_test.Stepper.Step.timeValue)
}

// sint32 setpointValue = 12 [(.nanopb) = {
inline bool Step::has_setpointvalue() const {
  return value_oneof_case() == kSetpointValue;
}
inline void Step::set_has_setpointvalue() {
  _oneof_case_[1] = kSetpointValue;
}
inline void Step::clear_setpointvalue() {
  if (has_setpointvalue()) {
    value_oneof_.setpointvalue_ = 0;
    clear_has_value_oneof();
  }
}
inline ::google::protobuf::int32 Step::setpointvalue() const {
  // @@protoc_insertion_point(field_get:blox_test.Stepper.Step.setpointValue)
  if (has_setpointvalue()) {
    return value_oneof_.setpointvalue_;
  }
  return 0;
}
inline void Step::set_setpointvalue(::google::protobuf::int32 value) {
  if (!has_setpointvalue()) {
    clear_value_oneof();
    set_has_setpointvalue();
  }
  value_oneof_.setpointvalue_ = value;
  // @@protoc_insertion_point(field_set:blox_test.Stepper.Step.setpointValue)
}

// sint32 setpointOffsetValue = 13 [(.nanopb) = {
inline bool Step::has_setpointoffsetvalue() const {
  return value_oneof_case() == kSetpointOffsetValue;
}
inline void Step::set_has_setpointoffsetvalue() {
  _oneof_case_[1] = kSetpointOffsetValue;
}
inline void Step::clear_setpointoffsetvalue() {
  if (has_setpointoffsetvalue()) {
    value_oneof_.setpointoffsetvalue_ = 0;
    clear_has_value_oneof();
  }
}
inline ::google::protobuf::int32 Step::setpointoffsetvalue() const {
  // @@protoc_insertion_point(field_get:blox_test.Stepper.Step.setpointOffsetValue)
  if (has_setpointoffsetvalue()) {
    return value_oneof_.setpointoffsetvalue_;
  }
  return 0;
}
inline void Step::set_setpointoffsetvalue(::google::protobuf::int32 value) {
  if (!has_setpointoffsetvalue()) {
    clear_value_oneof();
    set_has_setpointoffsetvalue();
  }
  value_oneof_.setpointoffsetvalue_ = value;
  // @@protoc_insertion_point(field_set:blox_test.Stepper.Step.setpointOffsetValue)
}

// .blox_test.IoArray.DigitalState digitalValue = 14 [(.brewblox.field) = {
inline bool Step::has_digitalvalue() const {
  return value_oneof_case() == kDigitalValue;
}
inline void Step::set_has_digitalvalue() {
  _oneof_case_[1] = kDigitalValue;
}
inline void Step::clear_digitalvalue() {
  if (has_digitalvalue()) {
    value_oneof_.digitalvalue_ = 0;
    clear_has_value_oneof();
  }
}
inline ::blox_test::IoArray::DigitalState Step::digitalvalue() const {
  // @@protoc_insertion_point(field_get:blox_test.Stepper.Step.digitalValue)
  if (has_digitalvalue()) {
    return static_cast< ::blox_test::IoArray::DigitalState >(value_oneof_.digitalvalue_);
  }
  return static_cast< ::blox_test::IoArray::DigitalState >(0);
}
inline void Step::set_digitalvalue(::blox_test::IoArray::DigitalState value) {
  if (!has_digitalvalue()) {
    clear_value_oneof();
    set_has_digitalvalue();
  }
  value_oneof_.digitalvalue_ = value;
  // @@protoc_insertion_point(field_set:blox_test.Stepper.Step.digitalValue)
}

// sint32 analogValue = 15 [(.nanopb) = {
inline bool Step::has_analogvalue() const {
  return value_oneof_case() == kAnalogValue;
}
inline void Step::set_has_analogvalue() {
  _oneof_case_[1] = kAnalogValue;
}
inline void Step::clear_analogvalue() {
  if (has_analogvalue()) {
    value_oneof_.analogvalue_ = 0;
    clear_has_value_oneof();
  }
}
inline ::google::protobuf::int32 Step::analogvalue() const {
  // @@protoc_insertion_point(field_get:blox_test.Stepper.Step.analogValue)
  if (has_analogvalue()) {
    return value_oneof_.analogvalue_;
  }
  return 0;
}
inline void Step::set_analogvalue(::google::protobuf::int32 value) {
  if (!has_analogvalue()) {
    clear_value_oneof();
    set_has_analogvalue();
  }
  value_oneof_.analogvalue_ = value;
  // @@protoc_insertion_point(field_set:blox_test.Stepper.Step.analogValue)
}

inline bool Step::has_target_oneof() const {
  return target_oneof_case() != TARGET_ONEOF_NOT_SET;
}
inline void Step::clear_has_target_oneof() {
  _oneof_case_[0] = TARGET_ONEOF_NOT_SET;
}
inline bool Step::has_value_oneof() const {
  return value_oneof_case() != VALUE_ONEOF_NOT_SET;
}
inline void Step::clear_has_value_oneof() {
  _oneof_case_[1] = VALUE_ONEOF_NOT_SET;
}
inline Step::TargetOneofCase Step::target_oneof_case() const {
  return Step::TargetOneofCase(_oneof_case_[0]);
}
inline Step::ValueOneofCase Step::value_oneof_case() const {
  return Step::ValueOneofCase(_oneof_case_[1]);
}
// -------------------------------------------------------------------

// Block

// bool enabled = 1 [(.brewblox.field) = {
inline void Block::clear_enabled() {
  enabled_ = false;
}
inline bool Block::enabled() const {
  // @@protoc_insertion_point(field_get:blox_test.Stepper.Block.enabled)
  return enabled_;
}
inline void Block::set_enabled(bool value) {
  
  enabled_ = value;
  // @@protoc_insertion_point(field_set:blox_test.Stepper.Block.enabled)
}

// uint32 activeStep = 2 [(.nanopb) = {
inline void Block::clear_activestep() {
  activestep_ = 0u;
}
inline ::google::protobuf::uint32 Block::activestep() const {
  // @@protoc_insertion_point(field_get:blox_test.Stepper.Block.activeStep)
  return activestep_;
}
inline void Block::set_activestep(::google::protobuf::uint32 value) {
  
  activestep_ = value;
  // @@protoc_insertion_point(field_set:blox_test.Stepper.Block.activeStep)
}

// uint32 activeStepStartedAt = 3 [(.brewblox.field) = {
inline void Block::clear_activestepstartedat() {
  activestepstartedat_ = 0u;
}
inline ::google::protobuf::uint32 Block::activestepstartedat() const {
  // @@protoc_insertion_point(field_get:blox_test.Stepper.Block.activeStepStartedAt)
  return activestepstartedat_;
}
inline void Block::set_activestepstartedat(::google::protobuf::uint32 value) {
  
  activestepstartedat_ = value;
  // @@protoc_insertion_point(field_set:blox_test.Stepper.Block.activeStepStartedAt)
}

// repeated .blox_test.Stepper.Step steps = 4;
inline int Block::steps_size() const {
  return steps_.size();
}
inline void Block::clear_steps() {
  steps_.Clear();
}
inline ::blox_test::Stepper::Step* Block::mutable_steps(int index) {
  // @@protoc_insertion_point(field_mutable:blox_test.Stepper.Block.steps)
  return steps_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::blox_test::Stepper::Step >*
Block::mutable_steps() {
  // @@protoc_insertion_point(field_mutable_list:blox_test.Stepper.Block.steps)
  return &steps_;
}
inline const ::blox_test::Stepper::Step& Block::steps(int index) const {
  // @@protoc_insertion_point(field_get:blox_test.Stepper.Block.steps)
  return steps_.Get(index);
}
inline ::blox_test::Stepper::Step* Block::add_steps() {
  // @@protoc_insertion_point(field_add:blox_test.Stepper.Block.steps)
  return steps_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::blox_test::Stepper::Step >&
Block::steps() const {
  // @@protoc_insertion_point(field_list:blox_test.Stepper.Block.steps)
  return steps_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Stepper
}  // namespace blox_test

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::blox_test::Stepper::Instruction> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::blox_test::Stepper::Instruction>() {
  return ::blox_test::Stepper::Instruction_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_Stepper_5ftest_2eproto
