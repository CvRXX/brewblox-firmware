// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Sequence_test.proto

#include "Sequence_test.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_Sequence_5ftest_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Sequence_5ftest_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_EnableDisable;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Sequence_5ftest_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Restart;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Sequence_5ftest_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SetDigital;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Sequence_5ftest_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SetPwm;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Sequence_5ftest_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SetSetpoint;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Sequence_5ftest_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TargetProfile;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Sequence_5ftest_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TargetSequence;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Sequence_5ftest_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_WaitDigital;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Sequence_5ftest_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_WaitDuration;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Sequence_5ftest_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_WaitSetpoint;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Sequence_5ftest_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_WaitTemperatureBoundary;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Sequence_5ftest_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_WaitTemperatureRange;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Sequence_5ftest_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_WaitUntil;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Sequence_5ftest_2eproto ::google::protobuf::internal::SCCInfo<13> scc_info_Instruction;
}  // namespace protobuf_Sequence_5ftest_2eproto
namespace blox_test {
namespace Sequence {
class RestartDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Restart>
      _instance;
} _Restart_default_instance_;
class EnableDisableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnableDisable>
      _instance;
} _EnableDisable_default_instance_;
class WaitDurationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WaitDuration>
      _instance;
} _WaitDuration_default_instance_;
class WaitUntilDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WaitUntil>
      _instance;
} _WaitUntil_default_instance_;
class WaitTemperatureRangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WaitTemperatureRange>
      _instance;
} _WaitTemperatureRange_default_instance_;
class WaitTemperatureBoundaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WaitTemperatureBoundary>
      _instance;
} _WaitTemperatureBoundary_default_instance_;
class SetSetpointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetSetpoint>
      _instance;
} _SetSetpoint_default_instance_;
class WaitSetpointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WaitSetpoint>
      _instance;
} _WaitSetpoint_default_instance_;
class SetDigitalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetDigital>
      _instance;
} _SetDigital_default_instance_;
class WaitDigitalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WaitDigital>
      _instance;
} _WaitDigital_default_instance_;
class SetPwmDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetPwm>
      _instance;
} _SetPwm_default_instance_;
class TargetProfileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TargetProfile>
      _instance;
} _TargetProfile_default_instance_;
class TargetSequenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TargetSequence>
      _instance;
} _TargetSequence_default_instance_;
class InstructionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Instruction>
      _instance;
  const ::blox_test::Sequence::Restart* restart_;
  const ::blox_test::Sequence::EnableDisable* enable_;
  const ::blox_test::Sequence::EnableDisable* disable_;
  const ::blox_test::Sequence::WaitDuration* wait_duration_;
  const ::blox_test::Sequence::WaitUntil* wait_until_;
  const ::blox_test::Sequence::WaitTemperatureRange* wait_temp_between_;
  const ::blox_test::Sequence::WaitTemperatureRange* wait_temp_not_between_;
  const ::blox_test::Sequence::WaitTemperatureRange* wait_temp_unexpected_;
  const ::blox_test::Sequence::WaitTemperatureBoundary* wait_temp_above_;
  const ::blox_test::Sequence::WaitTemperatureBoundary* wait_temp_below_;
  const ::blox_test::Sequence::SetSetpoint* set_setpoint_;
  const ::blox_test::Sequence::WaitSetpoint* wait_setpoint_;
  const ::blox_test::Sequence::SetDigital* set_digital_;
  const ::blox_test::Sequence::WaitDigital* wait_digital_;
  const ::blox_test::Sequence::SetPwm* set_pwm_;
  const ::blox_test::Sequence::TargetProfile* start_profile_;
  const ::blox_test::Sequence::TargetProfile* wait_profile_;
  const ::blox_test::Sequence::TargetSequence* start_sequence_;
  const ::blox_test::Sequence::TargetSequence* wait_sequence_;
} _Instruction_default_instance_;
class BlockDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Block>
      _instance;
} _Block_default_instance_;
}  // namespace Sequence
}  // namespace blox_test
namespace protobuf_Sequence_5ftest_2eproto {
static void InitDefaultsRestart() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::blox_test::Sequence::_Restart_default_instance_;
    new (ptr) ::blox_test::Sequence::Restart();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::blox_test::Sequence::Restart::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Restart =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRestart}, {}};

static void InitDefaultsEnableDisable() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::blox_test::Sequence::_EnableDisable_default_instance_;
    new (ptr) ::blox_test::Sequence::EnableDisable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::blox_test::Sequence::EnableDisable::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EnableDisable =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEnableDisable}, {}};

static void InitDefaultsWaitDuration() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::blox_test::Sequence::_WaitDuration_default_instance_;
    new (ptr) ::blox_test::Sequence::WaitDuration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::blox_test::Sequence::WaitDuration::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WaitDuration =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWaitDuration}, {}};

static void InitDefaultsWaitUntil() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::blox_test::Sequence::_WaitUntil_default_instance_;
    new (ptr) ::blox_test::Sequence::WaitUntil();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::blox_test::Sequence::WaitUntil::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WaitUntil =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWaitUntil}, {}};

static void InitDefaultsWaitTemperatureRange() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::blox_test::Sequence::_WaitTemperatureRange_default_instance_;
    new (ptr) ::blox_test::Sequence::WaitTemperatureRange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::blox_test::Sequence::WaitTemperatureRange::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WaitTemperatureRange =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWaitTemperatureRange}, {}};

static void InitDefaultsWaitTemperatureBoundary() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::blox_test::Sequence::_WaitTemperatureBoundary_default_instance_;
    new (ptr) ::blox_test::Sequence::WaitTemperatureBoundary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::blox_test::Sequence::WaitTemperatureBoundary::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WaitTemperatureBoundary =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWaitTemperatureBoundary}, {}};

static void InitDefaultsSetSetpoint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::blox_test::Sequence::_SetSetpoint_default_instance_;
    new (ptr) ::blox_test::Sequence::SetSetpoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::blox_test::Sequence::SetSetpoint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetSetpoint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetSetpoint}, {}};

static void InitDefaultsWaitSetpoint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::blox_test::Sequence::_WaitSetpoint_default_instance_;
    new (ptr) ::blox_test::Sequence::WaitSetpoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::blox_test::Sequence::WaitSetpoint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WaitSetpoint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWaitSetpoint}, {}};

static void InitDefaultsSetDigital() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::blox_test::Sequence::_SetDigital_default_instance_;
    new (ptr) ::blox_test::Sequence::SetDigital();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::blox_test::Sequence::SetDigital::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetDigital =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetDigital}, {}};

static void InitDefaultsWaitDigital() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::blox_test::Sequence::_WaitDigital_default_instance_;
    new (ptr) ::blox_test::Sequence::WaitDigital();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::blox_test::Sequence::WaitDigital::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WaitDigital =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWaitDigital}, {}};

static void InitDefaultsSetPwm() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::blox_test::Sequence::_SetPwm_default_instance_;
    new (ptr) ::blox_test::Sequence::SetPwm();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::blox_test::Sequence::SetPwm::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetPwm =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetPwm}, {}};

static void InitDefaultsTargetProfile() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::blox_test::Sequence::_TargetProfile_default_instance_;
    new (ptr) ::blox_test::Sequence::TargetProfile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::blox_test::Sequence::TargetProfile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TargetProfile =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTargetProfile}, {}};

static void InitDefaultsTargetSequence() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::blox_test::Sequence::_TargetSequence_default_instance_;
    new (ptr) ::blox_test::Sequence::TargetSequence();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::blox_test::Sequence::TargetSequence::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TargetSequence =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTargetSequence}, {}};

static void InitDefaultsInstruction() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::blox_test::Sequence::_Instruction_default_instance_;
    new (ptr) ::blox_test::Sequence::Instruction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::blox_test::Sequence::Instruction::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<13> scc_info_Instruction =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 13, InitDefaultsInstruction}, {
      &protobuf_Sequence_5ftest_2eproto::scc_info_Restart.base,
      &protobuf_Sequence_5ftest_2eproto::scc_info_EnableDisable.base,
      &protobuf_Sequence_5ftest_2eproto::scc_info_WaitDuration.base,
      &protobuf_Sequence_5ftest_2eproto::scc_info_WaitUntil.base,
      &protobuf_Sequence_5ftest_2eproto::scc_info_WaitTemperatureRange.base,
      &protobuf_Sequence_5ftest_2eproto::scc_info_WaitTemperatureBoundary.base,
      &protobuf_Sequence_5ftest_2eproto::scc_info_SetSetpoint.base,
      &protobuf_Sequence_5ftest_2eproto::scc_info_WaitSetpoint.base,
      &protobuf_Sequence_5ftest_2eproto::scc_info_SetDigital.base,
      &protobuf_Sequence_5ftest_2eproto::scc_info_WaitDigital.base,
      &protobuf_Sequence_5ftest_2eproto::scc_info_SetPwm.base,
      &protobuf_Sequence_5ftest_2eproto::scc_info_TargetProfile.base,
      &protobuf_Sequence_5ftest_2eproto::scc_info_TargetSequence.base,}};

static void InitDefaultsBlock() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::blox_test::Sequence::_Block_default_instance_;
    new (ptr) ::blox_test::Sequence::Block();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::blox_test::Sequence::Block::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Block =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBlock}, {
      &protobuf_Sequence_5ftest_2eproto::scc_info_Instruction.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Restart.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EnableDisable.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WaitDuration.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WaitUntil.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WaitTemperatureRange.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WaitTemperatureBoundary.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetSetpoint.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WaitSetpoint.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetDigital.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WaitDigital.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetPwm.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TargetProfile.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TargetSequence.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Instruction.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Block.base);
}

::google::protobuf::Metadata file_level_metadata[15];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::Restart, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::EnableDisable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::EnableDisable, target_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::WaitDuration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::WaitDuration, duration_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::WaitUntil, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::WaitUntil, time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::WaitTemperatureRange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::WaitTemperatureRange, target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::WaitTemperatureRange, lower_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::WaitTemperatureRange, upper_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::WaitTemperatureBoundary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::WaitTemperatureBoundary, target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::WaitTemperatureBoundary, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::SetSetpoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::SetSetpoint, target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::SetSetpoint, setting_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::WaitSetpoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::WaitSetpoint, target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::WaitSetpoint, precision_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::SetDigital, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::SetDigital, target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::SetDigital, setting_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::WaitDigital, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::WaitDigital, target_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::SetPwm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::SetPwm, target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::SetPwm, setting_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::TargetProfile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::TargetProfile, target_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::TargetSequence, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::TargetSequence, target_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::Instruction, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::Instruction, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::blox_test::Sequence::InstructionDefaultTypeInternal, restart_),
  offsetof(::blox_test::Sequence::InstructionDefaultTypeInternal, enable_),
  offsetof(::blox_test::Sequence::InstructionDefaultTypeInternal, disable_),
  offsetof(::blox_test::Sequence::InstructionDefaultTypeInternal, wait_duration_),
  offsetof(::blox_test::Sequence::InstructionDefaultTypeInternal, wait_until_),
  offsetof(::blox_test::Sequence::InstructionDefaultTypeInternal, wait_temp_between_),
  offsetof(::blox_test::Sequence::InstructionDefaultTypeInternal, wait_temp_not_between_),
  offsetof(::blox_test::Sequence::InstructionDefaultTypeInternal, wait_temp_unexpected_),
  offsetof(::blox_test::Sequence::InstructionDefaultTypeInternal, wait_temp_above_),
  offsetof(::blox_test::Sequence::InstructionDefaultTypeInternal, wait_temp_below_),
  offsetof(::blox_test::Sequence::InstructionDefaultTypeInternal, set_setpoint_),
  offsetof(::blox_test::Sequence::InstructionDefaultTypeInternal, wait_setpoint_),
  offsetof(::blox_test::Sequence::InstructionDefaultTypeInternal, set_digital_),
  offsetof(::blox_test::Sequence::InstructionDefaultTypeInternal, wait_digital_),
  offsetof(::blox_test::Sequence::InstructionDefaultTypeInternal, set_pwm_),
  offsetof(::blox_test::Sequence::InstructionDefaultTypeInternal, start_profile_),
  offsetof(::blox_test::Sequence::InstructionDefaultTypeInternal, wait_profile_),
  offsetof(::blox_test::Sequence::InstructionDefaultTypeInternal, start_sequence_),
  offsetof(::blox_test::Sequence::InstructionDefaultTypeInternal, wait_sequence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::Instruction, instruction_oneof_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::Block, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::Block, enabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::Block, instructions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::Block, overridestate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::Block, activeinstruction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::Block, activeinstructionstartedat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::Block, disabledat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::Block, disabledduration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::Block, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Sequence::Block, error_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::blox_test::Sequence::Restart)},
  { 5, -1, sizeof(::blox_test::Sequence::EnableDisable)},
  { 11, -1, sizeof(::blox_test::Sequence::WaitDuration)},
  { 17, -1, sizeof(::blox_test::Sequence::WaitUntil)},
  { 23, -1, sizeof(::blox_test::Sequence::WaitTemperatureRange)},
  { 31, -1, sizeof(::blox_test::Sequence::WaitTemperatureBoundary)},
  { 38, -1, sizeof(::blox_test::Sequence::SetSetpoint)},
  { 45, -1, sizeof(::blox_test::Sequence::WaitSetpoint)},
  { 52, -1, sizeof(::blox_test::Sequence::SetDigital)},
  { 59, -1, sizeof(::blox_test::Sequence::WaitDigital)},
  { 65, -1, sizeof(::blox_test::Sequence::SetPwm)},
  { 72, -1, sizeof(::blox_test::Sequence::TargetProfile)},
  { 78, -1, sizeof(::blox_test::Sequence::TargetSequence)},
  { 84, -1, sizeof(::blox_test::Sequence::Instruction)},
  { 109, -1, sizeof(::blox_test::Sequence::Block)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::blox_test::Sequence::_Restart_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::blox_test::Sequence::_EnableDisable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::blox_test::Sequence::_WaitDuration_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::blox_test::Sequence::_WaitUntil_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::blox_test::Sequence::_WaitTemperatureRange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::blox_test::Sequence::_WaitTemperatureBoundary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::blox_test::Sequence::_SetSetpoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::blox_test::Sequence::_WaitSetpoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::blox_test::Sequence::_SetDigital_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::blox_test::Sequence::_WaitDigital_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::blox_test::Sequence::_SetPwm_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::blox_test::Sequence::_TargetProfile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::blox_test::Sequence::_TargetSequence_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::blox_test::Sequence::_Instruction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::blox_test::Sequence::_Block_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Sequence_test.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 15);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023Sequence_test.proto\022\022blox_test.Sequenc"
      "e\032\023brewblox_test.proto\032\021nanopb_test.prot"
      "o\032\022IoArray_test.proto\"\t\n\007Restart\",\n\rEnab"
      "leDisable\022\033\n\006target\030\001 \001(\rB\013\212\265\030\002\030\017\222\?\0028\020\"-"
      "\n\014WaitDuration\022\035\n\010duration\030\001 \001(\rB\013\212\265\030\002\010\003"
      "\222\?\0028 \"&\n\tWaitUntil\022\031\n\004time\030\001 \001(\rB\013\212\265\030\002X\001"
      "\222\?\0028 \"y\n\024WaitTemperatureRange\022\033\n\006target\030"
      "\001 \001(\rB\013\212\265\030\002\030\002\222\?\0028\020\022!\n\005lower\030\002 \001(\021B\022\212\265\030\002\010"
      "\001\212\265\030\003\020\200 \222\?\0028 \022!\n\005upper\030\003 \001(\021B\022\212\265\030\002\010\001\212\265\030\003"
      "\020\200 \222\?\0028 \"Y\n\027WaitTemperatureBoundary\022\033\n\006t"
      "arget\030\001 \001(\rB\013\212\265\030\002\030\002\222\?\0028\020\022!\n\005value\030\002 \001(\021B"
      "\022\212\265\030\002\010\001\212\265\030\003\020\200 \222\?\0028 \"O\n\013SetSetpoint\022\033\n\006ta"
      "rget\030\001 \001(\rB\013\212\265\030\002\030\004\222\?\0028\020\022#\n\007setting\030\002 \001(\021"
      "B\022\212\265\030\002\010\001\212\265\030\003\020\200 \222\?\0028 \"R\n\014WaitSetpoint\022\033\n\006"
      "target\030\001 \001(\rB\013\212\265\030\002\030\004\222\?\0028\020\022%\n\tprecision\030\002"
      " \001(\021B\022\212\265\030\002\010\006\212\265\030\003\020\200 \222\?\0028 \"[\n\nSetDigital\022\033"
      "\n\006target\030\001 \001(\rB\013\212\265\030\002\030\006\222\?\0028\020\0220\n\007setting\030\002"
      " \001(\0162\037.blox_test.IoArray.DigitalState\"*\n"
      "\013WaitDigital\022\033\n\006target\030\001 \001(\rB\013\212\265\030\002\030\006\222\?\0028"
      "\020\"D\n\006SetPwm\022\033\n\006target\030\001 \001(\rB\013\212\265\030\002\030\005\222\?\0028\020"
      "\022\035\n\007setting\030\002 \001(\021B\014\212\265\030\003\020\200 \222\?\0028 \"-\n\rTarge"
      "tProfile\022\034\n\006target\030\001 \001(\rB\014\212\265\030\003\030\267\002\222\?\0028\020\"."
      "\n\016TargetSequence\022\034\n\006target\030\001 \001(\rB\014\212\265\030\003\030\306"
      "\002\222\?\0028\020\"\236\t\n\013Instruction\022.\n\007RESTART\030\001 \001(\0132"
      "\033.blox_test.Sequence.RestartH\000\0223\n\006ENABLE"
      "\030\002 \001(\0132!.blox_test.Sequence.EnableDisabl"
      "eH\000\0224\n\007DISABLE\030\003 \001(\0132!.blox_test.Sequenc"
      "e.EnableDisableH\000\0229\n\rWAIT_DURATION\030\004 \001(\013"
      "2 .blox_test.Sequence.WaitDurationH\000\0223\n\n"
      "WAIT_UNTIL\030\005 \001(\0132\035.blox_test.Sequence.Wa"
      "itUntilH\000\022E\n\021WAIT_TEMP_BETWEEN\030\006 \001(\0132(.b"
      "lox_test.Sequence.WaitTemperatureRangeH\000"
      "\022I\n\025WAIT_TEMP_NOT_BETWEEN\030\007 \001(\0132(.blox_t"
      "est.Sequence.WaitTemperatureRangeH\000\022H\n\024W"
      "AIT_TEMP_UNEXPECTED\030\010 \001(\0132(.blox_test.Se"
      "quence.WaitTemperatureRangeH\000\022F\n\017WAIT_TE"
      "MP_ABOVE\030\t \001(\0132+.blox_test.Sequence.Wait"
      "TemperatureBoundaryH\000\022F\n\017WAIT_TEMP_BELOW"
      "\030\n \001(\0132+.blox_test.Sequence.WaitTemperat"
      "ureBoundaryH\000\0227\n\014SET_SETPOINT\030\013 \001(\0132\037.bl"
      "ox_test.Sequence.SetSetpointH\000\0229\n\rWAIT_S"
      "ETPOINT\030\014 \001(\0132 .blox_test.Sequence.WaitS"
      "etpointH\000\0225\n\013SET_DIGITAL\030\r \001(\0132\036.blox_te"
      "st.Sequence.SetDigitalH\000\0227\n\014WAIT_DIGITAL"
      "\030\016 \001(\0132\037.blox_test.Sequence.WaitDigitalH"
      "\000\022-\n\007SET_PWM\030\017 \001(\0132\032.blox_test.Sequence."
      "SetPwmH\000\022:\n\rSTART_PROFILE\030\020 \001(\0132!.blox_t"
      "est.Sequence.TargetProfileH\000\0229\n\014WAIT_PRO"
      "FILE\030\021 \001(\0132!.blox_test.Sequence.TargetPr"
      "ofileH\000\022<\n\016START_SEQUENCE\030\022 \001(\0132\".blox_t"
      "est.Sequence.TargetSequenceH\000\022;\n\rWAIT_SE"
      "QUENCE\030\023 \001(\0132\".blox_test.Sequence.Target"
      "SequenceH\000B\023\n\021instruction_oneof\"\232\003\n\005Bloc"
      "k\022\027\n\007enabled\030\001 \001(\010B\006\212\265\030\0020\001\0225\n\014instructio"
      "ns\030\002 \003(\0132\037.blox_test.Sequence.Instructio"
      "n\022\025\n\roverrideState\030\003 \001(\010\022&\n\021activeInstru"
      "ction\030\004 \001(\rB\013\222\?\0028\020\212\265\030\0020\001\0225\n\032activeInstru"
      "ctionStartedAt\030\005 \001(\rB\021\222\?\0028 \212\265\030\002X\001\212\265\030\0020\001\022"
      "\037\n\ndisabledAt\030\006 \001(\rB\013\222\?\0028 \212\265\030\002X\001\022%\n\020disa"
      "bledDuration\030\007 \001(\rB\013\222\?\0028 \212\265\030\002\010\003\022:\n\006statu"
      "s\030\010 \001(\0162\".blox_test.Sequence.SequenceSta"
      "tusB\006\212\265\030\002(\001\0228\n\005error\030\t \001(\0162!.blox_test.S"
      "equence.SequenceErrorB\006\212\265\030\002(\001:\r\212\265\030\003\030\306\002\212\265"
      "\030\002H\017*l\n\016SequenceStatus\022\013\n\007UNKNOWN\020\000\022\014\n\010D"
      "ISABLED\020\001\022\n\n\006PAUSED\020\002\022\010\n\004NEXT\020\003\022\010\n\004WAIT\020"
      "\004\022\007\n\003END\020\005\022\013\n\007RESTART\020\006\022\t\n\005ERROR\020\007*\214\001\n\rS"
      "equenceError\022\010\n\004NONE\020\000\022\024\n\020INVALID_ARGUME"
      "NT\020\001\022\022\n\016INVALID_TARGET\020\002\022\023\n\017INACTIVE_TAR"
      "GET\020\003\022\023\n\017DISABLED_TARGET\020\004\022\035\n\031SYSTEM_TIM"
      "E_NOT_AVAILABLE\020\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2785);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Sequence_test.proto", &protobuf_RegisterTypes);
  ::protobuf_brewblox_5ftest_2eproto::AddDescriptors();
  ::protobuf_nanopb_5ftest_2eproto::AddDescriptors();
  ::protobuf_IoArray_5ftest_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Sequence_5ftest_2eproto
namespace blox_test {
namespace Sequence {
const ::google::protobuf::EnumDescriptor* SequenceStatus_descriptor() {
  protobuf_Sequence_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Sequence_5ftest_2eproto::file_level_enum_descriptors[0];
}
bool SequenceStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SequenceError_descriptor() {
  protobuf_Sequence_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Sequence_5ftest_2eproto::file_level_enum_descriptors[1];
}
bool SequenceError_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Restart::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Restart::Restart()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Sequence_5ftest_2eproto::scc_info_Restart.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:blox_test.Sequence.Restart)
}
Restart::Restart(const Restart& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:blox_test.Sequence.Restart)
}

void Restart::SharedCtor() {
}

Restart::~Restart() {
  // @@protoc_insertion_point(destructor:blox_test.Sequence.Restart)
  SharedDtor();
}

void Restart::SharedDtor() {
}

void Restart::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Restart::descriptor() {
  ::protobuf_Sequence_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Sequence_5ftest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Restart& Restart::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Sequence_5ftest_2eproto::scc_info_Restart.base);
  return *internal_default_instance();
}


void Restart::Clear() {
// @@protoc_insertion_point(message_clear_start:blox_test.Sequence.Restart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Restart::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:blox_test.Sequence.Restart)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:blox_test.Sequence.Restart)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:blox_test.Sequence.Restart)
  return false;
#undef DO_
}

void Restart::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:blox_test.Sequence.Restart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:blox_test.Sequence.Restart)
}

::google::protobuf::uint8* Restart::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:blox_test.Sequence.Restart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blox_test.Sequence.Restart)
  return target;
}

size_t Restart::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blox_test.Sequence.Restart)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Restart::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:blox_test.Sequence.Restart)
  GOOGLE_DCHECK_NE(&from, this);
  const Restart* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Restart>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:blox_test.Sequence.Restart)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:blox_test.Sequence.Restart)
    MergeFrom(*source);
  }
}

void Restart::MergeFrom(const Restart& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blox_test.Sequence.Restart)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Restart::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:blox_test.Sequence.Restart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Restart::CopyFrom(const Restart& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blox_test.Sequence.Restart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Restart::IsInitialized() const {
  return true;
}

void Restart::Swap(Restart* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Restart::InternalSwap(Restart* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Restart::GetMetadata() const {
  protobuf_Sequence_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Sequence_5ftest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EnableDisable::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableDisable::kTargetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableDisable::EnableDisable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Sequence_5ftest_2eproto::scc_info_EnableDisable.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:blox_test.Sequence.EnableDisable)
}
EnableDisable::EnableDisable(const EnableDisable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_ = from.target_;
  // @@protoc_insertion_point(copy_constructor:blox_test.Sequence.EnableDisable)
}

void EnableDisable::SharedCtor() {
  target_ = 0u;
}

EnableDisable::~EnableDisable() {
  // @@protoc_insertion_point(destructor:blox_test.Sequence.EnableDisable)
  SharedDtor();
}

void EnableDisable::SharedDtor() {
}

void EnableDisable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EnableDisable::descriptor() {
  ::protobuf_Sequence_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Sequence_5ftest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnableDisable& EnableDisable::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Sequence_5ftest_2eproto::scc_info_EnableDisable.base);
  return *internal_default_instance();
}


void EnableDisable::Clear() {
// @@protoc_insertion_point(message_clear_start:blox_test.Sequence.EnableDisable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_ = 0u;
  _internal_metadata_.Clear();
}

bool EnableDisable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:blox_test.Sequence.EnableDisable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target = 1 [(.nanopb) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:blox_test.Sequence.EnableDisable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:blox_test.Sequence.EnableDisable)
  return false;
#undef DO_
}

void EnableDisable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:blox_test.Sequence.EnableDisable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target = 1 [(.nanopb) = {
  if (this->target() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:blox_test.Sequence.EnableDisable)
}

::google::protobuf::uint8* EnableDisable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:blox_test.Sequence.EnableDisable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target = 1 [(.nanopb) = {
  if (this->target() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blox_test.Sequence.EnableDisable)
  return target;
}

size_t EnableDisable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blox_test.Sequence.EnableDisable)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target = 1 [(.nanopb) = {
  if (this->target() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnableDisable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:blox_test.Sequence.EnableDisable)
  GOOGLE_DCHECK_NE(&from, this);
  const EnableDisable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnableDisable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:blox_test.Sequence.EnableDisable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:blox_test.Sequence.EnableDisable)
    MergeFrom(*source);
  }
}

void EnableDisable::MergeFrom(const EnableDisable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blox_test.Sequence.EnableDisable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target() != 0) {
    set_target(from.target());
  }
}

void EnableDisable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:blox_test.Sequence.EnableDisable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnableDisable::CopyFrom(const EnableDisable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blox_test.Sequence.EnableDisable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableDisable::IsInitialized() const {
  return true;
}

void EnableDisable::Swap(EnableDisable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableDisable::InternalSwap(EnableDisable* other) {
  using std::swap;
  swap(target_, other->target_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EnableDisable::GetMetadata() const {
  protobuf_Sequence_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Sequence_5ftest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WaitDuration::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WaitDuration::kDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WaitDuration::WaitDuration()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Sequence_5ftest_2eproto::scc_info_WaitDuration.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:blox_test.Sequence.WaitDuration)
}
WaitDuration::WaitDuration(const WaitDuration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  duration_ = from.duration_;
  // @@protoc_insertion_point(copy_constructor:blox_test.Sequence.WaitDuration)
}

void WaitDuration::SharedCtor() {
  duration_ = 0u;
}

WaitDuration::~WaitDuration() {
  // @@protoc_insertion_point(destructor:blox_test.Sequence.WaitDuration)
  SharedDtor();
}

void WaitDuration::SharedDtor() {
}

void WaitDuration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WaitDuration::descriptor() {
  ::protobuf_Sequence_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Sequence_5ftest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WaitDuration& WaitDuration::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Sequence_5ftest_2eproto::scc_info_WaitDuration.base);
  return *internal_default_instance();
}


void WaitDuration::Clear() {
// @@protoc_insertion_point(message_clear_start:blox_test.Sequence.WaitDuration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  duration_ = 0u;
  _internal_metadata_.Clear();
}

bool WaitDuration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:blox_test.Sequence.WaitDuration)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 duration = 1 [(.nanopb) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:blox_test.Sequence.WaitDuration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:blox_test.Sequence.WaitDuration)
  return false;
#undef DO_
}

void WaitDuration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:blox_test.Sequence.WaitDuration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 duration = 1 [(.nanopb) = {
  if (this->duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->duration(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:blox_test.Sequence.WaitDuration)
}

::google::protobuf::uint8* WaitDuration::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:blox_test.Sequence.WaitDuration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 duration = 1 [(.nanopb) = {
  if (this->duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->duration(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blox_test.Sequence.WaitDuration)
  return target;
}

size_t WaitDuration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blox_test.Sequence.WaitDuration)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 duration = 1 [(.nanopb) = {
  if (this->duration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->duration());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WaitDuration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:blox_test.Sequence.WaitDuration)
  GOOGLE_DCHECK_NE(&from, this);
  const WaitDuration* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WaitDuration>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:blox_test.Sequence.WaitDuration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:blox_test.Sequence.WaitDuration)
    MergeFrom(*source);
  }
}

void WaitDuration::MergeFrom(const WaitDuration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blox_test.Sequence.WaitDuration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.duration() != 0) {
    set_duration(from.duration());
  }
}

void WaitDuration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:blox_test.Sequence.WaitDuration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WaitDuration::CopyFrom(const WaitDuration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blox_test.Sequence.WaitDuration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WaitDuration::IsInitialized() const {
  return true;
}

void WaitDuration::Swap(WaitDuration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WaitDuration::InternalSwap(WaitDuration* other) {
  using std::swap;
  swap(duration_, other->duration_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WaitDuration::GetMetadata() const {
  protobuf_Sequence_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Sequence_5ftest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WaitUntil::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WaitUntil::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WaitUntil::WaitUntil()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Sequence_5ftest_2eproto::scc_info_WaitUntil.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:blox_test.Sequence.WaitUntil)
}
WaitUntil::WaitUntil(const WaitUntil& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:blox_test.Sequence.WaitUntil)
}

void WaitUntil::SharedCtor() {
  time_ = 0u;
}

WaitUntil::~WaitUntil() {
  // @@protoc_insertion_point(destructor:blox_test.Sequence.WaitUntil)
  SharedDtor();
}

void WaitUntil::SharedDtor() {
}

void WaitUntil::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WaitUntil::descriptor() {
  ::protobuf_Sequence_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Sequence_5ftest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WaitUntil& WaitUntil::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Sequence_5ftest_2eproto::scc_info_WaitUntil.base);
  return *internal_default_instance();
}


void WaitUntil::Clear() {
// @@protoc_insertion_point(message_clear_start:blox_test.Sequence.WaitUntil)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  time_ = 0u;
  _internal_metadata_.Clear();
}

bool WaitUntil::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:blox_test.Sequence.WaitUntil)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 time = 1 [(.nanopb) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:blox_test.Sequence.WaitUntil)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:blox_test.Sequence.WaitUntil)
  return false;
#undef DO_
}

void WaitUntil::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:blox_test.Sequence.WaitUntil)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 time = 1 [(.nanopb) = {
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:blox_test.Sequence.WaitUntil)
}

::google::protobuf::uint8* WaitUntil::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:blox_test.Sequence.WaitUntil)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 time = 1 [(.nanopb) = {
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blox_test.Sequence.WaitUntil)
  return target;
}

size_t WaitUntil::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blox_test.Sequence.WaitUntil)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 time = 1 [(.nanopb) = {
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WaitUntil::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:blox_test.Sequence.WaitUntil)
  GOOGLE_DCHECK_NE(&from, this);
  const WaitUntil* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WaitUntil>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:blox_test.Sequence.WaitUntil)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:blox_test.Sequence.WaitUntil)
    MergeFrom(*source);
  }
}

void WaitUntil::MergeFrom(const WaitUntil& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blox_test.Sequence.WaitUntil)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.time() != 0) {
    set_time(from.time());
  }
}

void WaitUntil::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:blox_test.Sequence.WaitUntil)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WaitUntil::CopyFrom(const WaitUntil& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blox_test.Sequence.WaitUntil)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WaitUntil::IsInitialized() const {
  return true;
}

void WaitUntil::Swap(WaitUntil* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WaitUntil::InternalSwap(WaitUntil* other) {
  using std::swap;
  swap(time_, other->time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WaitUntil::GetMetadata() const {
  protobuf_Sequence_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Sequence_5ftest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WaitTemperatureRange::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WaitTemperatureRange::kTargetFieldNumber;
const int WaitTemperatureRange::kLowerFieldNumber;
const int WaitTemperatureRange::kUpperFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WaitTemperatureRange::WaitTemperatureRange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Sequence_5ftest_2eproto::scc_info_WaitTemperatureRange.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:blox_test.Sequence.WaitTemperatureRange)
}
WaitTemperatureRange::WaitTemperatureRange(const WaitTemperatureRange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&target_, &from.target_,
    static_cast<size_t>(reinterpret_cast<char*>(&upper_) -
    reinterpret_cast<char*>(&target_)) + sizeof(upper_));
  // @@protoc_insertion_point(copy_constructor:blox_test.Sequence.WaitTemperatureRange)
}

void WaitTemperatureRange::SharedCtor() {
  ::memset(&target_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&upper_) -
      reinterpret_cast<char*>(&target_)) + sizeof(upper_));
}

WaitTemperatureRange::~WaitTemperatureRange() {
  // @@protoc_insertion_point(destructor:blox_test.Sequence.WaitTemperatureRange)
  SharedDtor();
}

void WaitTemperatureRange::SharedDtor() {
}

void WaitTemperatureRange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WaitTemperatureRange::descriptor() {
  ::protobuf_Sequence_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Sequence_5ftest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WaitTemperatureRange& WaitTemperatureRange::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Sequence_5ftest_2eproto::scc_info_WaitTemperatureRange.base);
  return *internal_default_instance();
}


void WaitTemperatureRange::Clear() {
// @@protoc_insertion_point(message_clear_start:blox_test.Sequence.WaitTemperatureRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&target_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&upper_) -
      reinterpret_cast<char*>(&target_)) + sizeof(upper_));
  _internal_metadata_.Clear();
}

bool WaitTemperatureRange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:blox_test.Sequence.WaitTemperatureRange)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target = 1 [(.nanopb) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 lower = 2 [(.nanopb) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &lower_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 upper = 3 [(.nanopb) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &upper_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:blox_test.Sequence.WaitTemperatureRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:blox_test.Sequence.WaitTemperatureRange)
  return false;
#undef DO_
}

void WaitTemperatureRange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:blox_test.Sequence.WaitTemperatureRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target = 1 [(.nanopb) = {
  if (this->target() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target(), output);
  }

  // sint32 lower = 2 [(.nanopb) = {
  if (this->lower() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->lower(), output);
  }

  // sint32 upper = 3 [(.nanopb) = {
  if (this->upper() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->upper(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:blox_test.Sequence.WaitTemperatureRange)
}

::google::protobuf::uint8* WaitTemperatureRange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:blox_test.Sequence.WaitTemperatureRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target = 1 [(.nanopb) = {
  if (this->target() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target(), target);
  }

  // sint32 lower = 2 [(.nanopb) = {
  if (this->lower() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->lower(), target);
  }

  // sint32 upper = 3 [(.nanopb) = {
  if (this->upper() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->upper(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blox_test.Sequence.WaitTemperatureRange)
  return target;
}

size_t WaitTemperatureRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blox_test.Sequence.WaitTemperatureRange)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target = 1 [(.nanopb) = {
  if (this->target() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target());
  }

  // sint32 lower = 2 [(.nanopb) = {
  if (this->lower() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->lower());
  }

  // sint32 upper = 3 [(.nanopb) = {
  if (this->upper() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->upper());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WaitTemperatureRange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:blox_test.Sequence.WaitTemperatureRange)
  GOOGLE_DCHECK_NE(&from, this);
  const WaitTemperatureRange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WaitTemperatureRange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:blox_test.Sequence.WaitTemperatureRange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:blox_test.Sequence.WaitTemperatureRange)
    MergeFrom(*source);
  }
}

void WaitTemperatureRange::MergeFrom(const WaitTemperatureRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blox_test.Sequence.WaitTemperatureRange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target() != 0) {
    set_target(from.target());
  }
  if (from.lower() != 0) {
    set_lower(from.lower());
  }
  if (from.upper() != 0) {
    set_upper(from.upper());
  }
}

void WaitTemperatureRange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:blox_test.Sequence.WaitTemperatureRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WaitTemperatureRange::CopyFrom(const WaitTemperatureRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blox_test.Sequence.WaitTemperatureRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WaitTemperatureRange::IsInitialized() const {
  return true;
}

void WaitTemperatureRange::Swap(WaitTemperatureRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WaitTemperatureRange::InternalSwap(WaitTemperatureRange* other) {
  using std::swap;
  swap(target_, other->target_);
  swap(lower_, other->lower_);
  swap(upper_, other->upper_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WaitTemperatureRange::GetMetadata() const {
  protobuf_Sequence_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Sequence_5ftest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WaitTemperatureBoundary::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WaitTemperatureBoundary::kTargetFieldNumber;
const int WaitTemperatureBoundary::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WaitTemperatureBoundary::WaitTemperatureBoundary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Sequence_5ftest_2eproto::scc_info_WaitTemperatureBoundary.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:blox_test.Sequence.WaitTemperatureBoundary)
}
WaitTemperatureBoundary::WaitTemperatureBoundary(const WaitTemperatureBoundary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&target_, &from.target_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&target_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:blox_test.Sequence.WaitTemperatureBoundary)
}

void WaitTemperatureBoundary::SharedCtor() {
  ::memset(&target_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&target_)) + sizeof(value_));
}

WaitTemperatureBoundary::~WaitTemperatureBoundary() {
  // @@protoc_insertion_point(destructor:blox_test.Sequence.WaitTemperatureBoundary)
  SharedDtor();
}

void WaitTemperatureBoundary::SharedDtor() {
}

void WaitTemperatureBoundary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WaitTemperatureBoundary::descriptor() {
  ::protobuf_Sequence_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Sequence_5ftest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WaitTemperatureBoundary& WaitTemperatureBoundary::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Sequence_5ftest_2eproto::scc_info_WaitTemperatureBoundary.base);
  return *internal_default_instance();
}


void WaitTemperatureBoundary::Clear() {
// @@protoc_insertion_point(message_clear_start:blox_test.Sequence.WaitTemperatureBoundary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&target_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&target_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

bool WaitTemperatureBoundary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:blox_test.Sequence.WaitTemperatureBoundary)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target = 1 [(.nanopb) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 value = 2 [(.nanopb) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:blox_test.Sequence.WaitTemperatureBoundary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:blox_test.Sequence.WaitTemperatureBoundary)
  return false;
#undef DO_
}

void WaitTemperatureBoundary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:blox_test.Sequence.WaitTemperatureBoundary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target = 1 [(.nanopb) = {
  if (this->target() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target(), output);
  }

  // sint32 value = 2 [(.nanopb) = {
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:blox_test.Sequence.WaitTemperatureBoundary)
}

::google::protobuf::uint8* WaitTemperatureBoundary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:blox_test.Sequence.WaitTemperatureBoundary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target = 1 [(.nanopb) = {
  if (this->target() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target(), target);
  }

  // sint32 value = 2 [(.nanopb) = {
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blox_test.Sequence.WaitTemperatureBoundary)
  return target;
}

size_t WaitTemperatureBoundary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blox_test.Sequence.WaitTemperatureBoundary)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target = 1 [(.nanopb) = {
  if (this->target() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target());
  }

  // sint32 value = 2 [(.nanopb) = {
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WaitTemperatureBoundary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:blox_test.Sequence.WaitTemperatureBoundary)
  GOOGLE_DCHECK_NE(&from, this);
  const WaitTemperatureBoundary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WaitTemperatureBoundary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:blox_test.Sequence.WaitTemperatureBoundary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:blox_test.Sequence.WaitTemperatureBoundary)
    MergeFrom(*source);
  }
}

void WaitTemperatureBoundary::MergeFrom(const WaitTemperatureBoundary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blox_test.Sequence.WaitTemperatureBoundary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target() != 0) {
    set_target(from.target());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void WaitTemperatureBoundary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:blox_test.Sequence.WaitTemperatureBoundary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WaitTemperatureBoundary::CopyFrom(const WaitTemperatureBoundary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blox_test.Sequence.WaitTemperatureBoundary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WaitTemperatureBoundary::IsInitialized() const {
  return true;
}

void WaitTemperatureBoundary::Swap(WaitTemperatureBoundary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WaitTemperatureBoundary::InternalSwap(WaitTemperatureBoundary* other) {
  using std::swap;
  swap(target_, other->target_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WaitTemperatureBoundary::GetMetadata() const {
  protobuf_Sequence_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Sequence_5ftest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetSetpoint::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetSetpoint::kTargetFieldNumber;
const int SetSetpoint::kSettingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetSetpoint::SetSetpoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Sequence_5ftest_2eproto::scc_info_SetSetpoint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:blox_test.Sequence.SetSetpoint)
}
SetSetpoint::SetSetpoint(const SetSetpoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&target_, &from.target_,
    static_cast<size_t>(reinterpret_cast<char*>(&setting_) -
    reinterpret_cast<char*>(&target_)) + sizeof(setting_));
  // @@protoc_insertion_point(copy_constructor:blox_test.Sequence.SetSetpoint)
}

void SetSetpoint::SharedCtor() {
  ::memset(&target_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&setting_) -
      reinterpret_cast<char*>(&target_)) + sizeof(setting_));
}

SetSetpoint::~SetSetpoint() {
  // @@protoc_insertion_point(destructor:blox_test.Sequence.SetSetpoint)
  SharedDtor();
}

void SetSetpoint::SharedDtor() {
}

void SetSetpoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetSetpoint::descriptor() {
  ::protobuf_Sequence_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Sequence_5ftest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetSetpoint& SetSetpoint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Sequence_5ftest_2eproto::scc_info_SetSetpoint.base);
  return *internal_default_instance();
}


void SetSetpoint::Clear() {
// @@protoc_insertion_point(message_clear_start:blox_test.Sequence.SetSetpoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&target_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&setting_) -
      reinterpret_cast<char*>(&target_)) + sizeof(setting_));
  _internal_metadata_.Clear();
}

bool SetSetpoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:blox_test.Sequence.SetSetpoint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target = 1 [(.nanopb) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 setting = 2 [(.nanopb) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &setting_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:blox_test.Sequence.SetSetpoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:blox_test.Sequence.SetSetpoint)
  return false;
#undef DO_
}

void SetSetpoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:blox_test.Sequence.SetSetpoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target = 1 [(.nanopb) = {
  if (this->target() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target(), output);
  }

  // sint32 setting = 2 [(.nanopb) = {
  if (this->setting() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->setting(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:blox_test.Sequence.SetSetpoint)
}

::google::protobuf::uint8* SetSetpoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:blox_test.Sequence.SetSetpoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target = 1 [(.nanopb) = {
  if (this->target() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target(), target);
  }

  // sint32 setting = 2 [(.nanopb) = {
  if (this->setting() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->setting(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blox_test.Sequence.SetSetpoint)
  return target;
}

size_t SetSetpoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blox_test.Sequence.SetSetpoint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target = 1 [(.nanopb) = {
  if (this->target() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target());
  }

  // sint32 setting = 2 [(.nanopb) = {
  if (this->setting() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->setting());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetSetpoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:blox_test.Sequence.SetSetpoint)
  GOOGLE_DCHECK_NE(&from, this);
  const SetSetpoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetSetpoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:blox_test.Sequence.SetSetpoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:blox_test.Sequence.SetSetpoint)
    MergeFrom(*source);
  }
}

void SetSetpoint::MergeFrom(const SetSetpoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blox_test.Sequence.SetSetpoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target() != 0) {
    set_target(from.target());
  }
  if (from.setting() != 0) {
    set_setting(from.setting());
  }
}

void SetSetpoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:blox_test.Sequence.SetSetpoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetSetpoint::CopyFrom(const SetSetpoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blox_test.Sequence.SetSetpoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetSetpoint::IsInitialized() const {
  return true;
}

void SetSetpoint::Swap(SetSetpoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetSetpoint::InternalSwap(SetSetpoint* other) {
  using std::swap;
  swap(target_, other->target_);
  swap(setting_, other->setting_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetSetpoint::GetMetadata() const {
  protobuf_Sequence_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Sequence_5ftest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WaitSetpoint::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WaitSetpoint::kTargetFieldNumber;
const int WaitSetpoint::kPrecisionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WaitSetpoint::WaitSetpoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Sequence_5ftest_2eproto::scc_info_WaitSetpoint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:blox_test.Sequence.WaitSetpoint)
}
WaitSetpoint::WaitSetpoint(const WaitSetpoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&target_, &from.target_,
    static_cast<size_t>(reinterpret_cast<char*>(&precision_) -
    reinterpret_cast<char*>(&target_)) + sizeof(precision_));
  // @@protoc_insertion_point(copy_constructor:blox_test.Sequence.WaitSetpoint)
}

void WaitSetpoint::SharedCtor() {
  ::memset(&target_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&precision_) -
      reinterpret_cast<char*>(&target_)) + sizeof(precision_));
}

WaitSetpoint::~WaitSetpoint() {
  // @@protoc_insertion_point(destructor:blox_test.Sequence.WaitSetpoint)
  SharedDtor();
}

void WaitSetpoint::SharedDtor() {
}

void WaitSetpoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WaitSetpoint::descriptor() {
  ::protobuf_Sequence_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Sequence_5ftest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WaitSetpoint& WaitSetpoint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Sequence_5ftest_2eproto::scc_info_WaitSetpoint.base);
  return *internal_default_instance();
}


void WaitSetpoint::Clear() {
// @@protoc_insertion_point(message_clear_start:blox_test.Sequence.WaitSetpoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&target_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&precision_) -
      reinterpret_cast<char*>(&target_)) + sizeof(precision_));
  _internal_metadata_.Clear();
}

bool WaitSetpoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:blox_test.Sequence.WaitSetpoint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target = 1 [(.nanopb) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 precision = 2 [(.nanopb) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &precision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:blox_test.Sequence.WaitSetpoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:blox_test.Sequence.WaitSetpoint)
  return false;
#undef DO_
}

void WaitSetpoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:blox_test.Sequence.WaitSetpoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target = 1 [(.nanopb) = {
  if (this->target() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target(), output);
  }

  // sint32 precision = 2 [(.nanopb) = {
  if (this->precision() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->precision(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:blox_test.Sequence.WaitSetpoint)
}

::google::protobuf::uint8* WaitSetpoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:blox_test.Sequence.WaitSetpoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target = 1 [(.nanopb) = {
  if (this->target() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target(), target);
  }

  // sint32 precision = 2 [(.nanopb) = {
  if (this->precision() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->precision(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blox_test.Sequence.WaitSetpoint)
  return target;
}

size_t WaitSetpoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blox_test.Sequence.WaitSetpoint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target = 1 [(.nanopb) = {
  if (this->target() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target());
  }

  // sint32 precision = 2 [(.nanopb) = {
  if (this->precision() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->precision());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WaitSetpoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:blox_test.Sequence.WaitSetpoint)
  GOOGLE_DCHECK_NE(&from, this);
  const WaitSetpoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WaitSetpoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:blox_test.Sequence.WaitSetpoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:blox_test.Sequence.WaitSetpoint)
    MergeFrom(*source);
  }
}

void WaitSetpoint::MergeFrom(const WaitSetpoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blox_test.Sequence.WaitSetpoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target() != 0) {
    set_target(from.target());
  }
  if (from.precision() != 0) {
    set_precision(from.precision());
  }
}

void WaitSetpoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:blox_test.Sequence.WaitSetpoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WaitSetpoint::CopyFrom(const WaitSetpoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blox_test.Sequence.WaitSetpoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WaitSetpoint::IsInitialized() const {
  return true;
}

void WaitSetpoint::Swap(WaitSetpoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WaitSetpoint::InternalSwap(WaitSetpoint* other) {
  using std::swap;
  swap(target_, other->target_);
  swap(precision_, other->precision_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WaitSetpoint::GetMetadata() const {
  protobuf_Sequence_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Sequence_5ftest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetDigital::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetDigital::kTargetFieldNumber;
const int SetDigital::kSettingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetDigital::SetDigital()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Sequence_5ftest_2eproto::scc_info_SetDigital.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:blox_test.Sequence.SetDigital)
}
SetDigital::SetDigital(const SetDigital& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&target_, &from.target_,
    static_cast<size_t>(reinterpret_cast<char*>(&setting_) -
    reinterpret_cast<char*>(&target_)) + sizeof(setting_));
  // @@protoc_insertion_point(copy_constructor:blox_test.Sequence.SetDigital)
}

void SetDigital::SharedCtor() {
  ::memset(&target_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&setting_) -
      reinterpret_cast<char*>(&target_)) + sizeof(setting_));
}

SetDigital::~SetDigital() {
  // @@protoc_insertion_point(destructor:blox_test.Sequence.SetDigital)
  SharedDtor();
}

void SetDigital::SharedDtor() {
}

void SetDigital::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetDigital::descriptor() {
  ::protobuf_Sequence_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Sequence_5ftest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetDigital& SetDigital::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Sequence_5ftest_2eproto::scc_info_SetDigital.base);
  return *internal_default_instance();
}


void SetDigital::Clear() {
// @@protoc_insertion_point(message_clear_start:blox_test.Sequence.SetDigital)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&target_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&setting_) -
      reinterpret_cast<char*>(&target_)) + sizeof(setting_));
  _internal_metadata_.Clear();
}

bool SetDigital::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:blox_test.Sequence.SetDigital)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target = 1 [(.nanopb) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .blox_test.IoArray.DigitalState setting = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_setting(static_cast< ::blox_test::IoArray::DigitalState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:blox_test.Sequence.SetDigital)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:blox_test.Sequence.SetDigital)
  return false;
#undef DO_
}

void SetDigital::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:blox_test.Sequence.SetDigital)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target = 1 [(.nanopb) = {
  if (this->target() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target(), output);
  }

  // .blox_test.IoArray.DigitalState setting = 2;
  if (this->setting() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->setting(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:blox_test.Sequence.SetDigital)
}

::google::protobuf::uint8* SetDigital::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:blox_test.Sequence.SetDigital)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target = 1 [(.nanopb) = {
  if (this->target() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target(), target);
  }

  // .blox_test.IoArray.DigitalState setting = 2;
  if (this->setting() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->setting(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blox_test.Sequence.SetDigital)
  return target;
}

size_t SetDigital::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blox_test.Sequence.SetDigital)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target = 1 [(.nanopb) = {
  if (this->target() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target());
  }

  // .blox_test.IoArray.DigitalState setting = 2;
  if (this->setting() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->setting());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetDigital::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:blox_test.Sequence.SetDigital)
  GOOGLE_DCHECK_NE(&from, this);
  const SetDigital* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetDigital>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:blox_test.Sequence.SetDigital)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:blox_test.Sequence.SetDigital)
    MergeFrom(*source);
  }
}

void SetDigital::MergeFrom(const SetDigital& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blox_test.Sequence.SetDigital)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target() != 0) {
    set_target(from.target());
  }
  if (from.setting() != 0) {
    set_setting(from.setting());
  }
}

void SetDigital::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:blox_test.Sequence.SetDigital)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetDigital::CopyFrom(const SetDigital& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blox_test.Sequence.SetDigital)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetDigital::IsInitialized() const {
  return true;
}

void SetDigital::Swap(SetDigital* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetDigital::InternalSwap(SetDigital* other) {
  using std::swap;
  swap(target_, other->target_);
  swap(setting_, other->setting_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetDigital::GetMetadata() const {
  protobuf_Sequence_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Sequence_5ftest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WaitDigital::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WaitDigital::kTargetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WaitDigital::WaitDigital()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Sequence_5ftest_2eproto::scc_info_WaitDigital.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:blox_test.Sequence.WaitDigital)
}
WaitDigital::WaitDigital(const WaitDigital& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_ = from.target_;
  // @@protoc_insertion_point(copy_constructor:blox_test.Sequence.WaitDigital)
}

void WaitDigital::SharedCtor() {
  target_ = 0u;
}

WaitDigital::~WaitDigital() {
  // @@protoc_insertion_point(destructor:blox_test.Sequence.WaitDigital)
  SharedDtor();
}

void WaitDigital::SharedDtor() {
}

void WaitDigital::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WaitDigital::descriptor() {
  ::protobuf_Sequence_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Sequence_5ftest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WaitDigital& WaitDigital::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Sequence_5ftest_2eproto::scc_info_WaitDigital.base);
  return *internal_default_instance();
}


void WaitDigital::Clear() {
// @@protoc_insertion_point(message_clear_start:blox_test.Sequence.WaitDigital)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_ = 0u;
  _internal_metadata_.Clear();
}

bool WaitDigital::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:blox_test.Sequence.WaitDigital)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target = 1 [(.nanopb) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:blox_test.Sequence.WaitDigital)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:blox_test.Sequence.WaitDigital)
  return false;
#undef DO_
}

void WaitDigital::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:blox_test.Sequence.WaitDigital)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target = 1 [(.nanopb) = {
  if (this->target() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:blox_test.Sequence.WaitDigital)
}

::google::protobuf::uint8* WaitDigital::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:blox_test.Sequence.WaitDigital)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target = 1 [(.nanopb) = {
  if (this->target() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blox_test.Sequence.WaitDigital)
  return target;
}

size_t WaitDigital::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blox_test.Sequence.WaitDigital)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target = 1 [(.nanopb) = {
  if (this->target() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WaitDigital::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:blox_test.Sequence.WaitDigital)
  GOOGLE_DCHECK_NE(&from, this);
  const WaitDigital* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WaitDigital>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:blox_test.Sequence.WaitDigital)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:blox_test.Sequence.WaitDigital)
    MergeFrom(*source);
  }
}

void WaitDigital::MergeFrom(const WaitDigital& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blox_test.Sequence.WaitDigital)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target() != 0) {
    set_target(from.target());
  }
}

void WaitDigital::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:blox_test.Sequence.WaitDigital)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WaitDigital::CopyFrom(const WaitDigital& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blox_test.Sequence.WaitDigital)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WaitDigital::IsInitialized() const {
  return true;
}

void WaitDigital::Swap(WaitDigital* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WaitDigital::InternalSwap(WaitDigital* other) {
  using std::swap;
  swap(target_, other->target_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WaitDigital::GetMetadata() const {
  protobuf_Sequence_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Sequence_5ftest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetPwm::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetPwm::kTargetFieldNumber;
const int SetPwm::kSettingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetPwm::SetPwm()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Sequence_5ftest_2eproto::scc_info_SetPwm.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:blox_test.Sequence.SetPwm)
}
SetPwm::SetPwm(const SetPwm& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&target_, &from.target_,
    static_cast<size_t>(reinterpret_cast<char*>(&setting_) -
    reinterpret_cast<char*>(&target_)) + sizeof(setting_));
  // @@protoc_insertion_point(copy_constructor:blox_test.Sequence.SetPwm)
}

void SetPwm::SharedCtor() {
  ::memset(&target_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&setting_) -
      reinterpret_cast<char*>(&target_)) + sizeof(setting_));
}

SetPwm::~SetPwm() {
  // @@protoc_insertion_point(destructor:blox_test.Sequence.SetPwm)
  SharedDtor();
}

void SetPwm::SharedDtor() {
}

void SetPwm::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetPwm::descriptor() {
  ::protobuf_Sequence_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Sequence_5ftest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetPwm& SetPwm::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Sequence_5ftest_2eproto::scc_info_SetPwm.base);
  return *internal_default_instance();
}


void SetPwm::Clear() {
// @@protoc_insertion_point(message_clear_start:blox_test.Sequence.SetPwm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&target_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&setting_) -
      reinterpret_cast<char*>(&target_)) + sizeof(setting_));
  _internal_metadata_.Clear();
}

bool SetPwm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:blox_test.Sequence.SetPwm)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target = 1 [(.nanopb) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 setting = 2 [(.nanopb) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &setting_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:blox_test.Sequence.SetPwm)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:blox_test.Sequence.SetPwm)
  return false;
#undef DO_
}

void SetPwm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:blox_test.Sequence.SetPwm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target = 1 [(.nanopb) = {
  if (this->target() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target(), output);
  }

  // sint32 setting = 2 [(.nanopb) = {
  if (this->setting() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->setting(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:blox_test.Sequence.SetPwm)
}

::google::protobuf::uint8* SetPwm::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:blox_test.Sequence.SetPwm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target = 1 [(.nanopb) = {
  if (this->target() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target(), target);
  }

  // sint32 setting = 2 [(.nanopb) = {
  if (this->setting() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->setting(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blox_test.Sequence.SetPwm)
  return target;
}

size_t SetPwm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blox_test.Sequence.SetPwm)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target = 1 [(.nanopb) = {
  if (this->target() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target());
  }

  // sint32 setting = 2 [(.nanopb) = {
  if (this->setting() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->setting());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetPwm::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:blox_test.Sequence.SetPwm)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPwm* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetPwm>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:blox_test.Sequence.SetPwm)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:blox_test.Sequence.SetPwm)
    MergeFrom(*source);
  }
}

void SetPwm::MergeFrom(const SetPwm& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blox_test.Sequence.SetPwm)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target() != 0) {
    set_target(from.target());
  }
  if (from.setting() != 0) {
    set_setting(from.setting());
  }
}

void SetPwm::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:blox_test.Sequence.SetPwm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPwm::CopyFrom(const SetPwm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blox_test.Sequence.SetPwm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPwm::IsInitialized() const {
  return true;
}

void SetPwm::Swap(SetPwm* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetPwm::InternalSwap(SetPwm* other) {
  using std::swap;
  swap(target_, other->target_);
  swap(setting_, other->setting_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetPwm::GetMetadata() const {
  protobuf_Sequence_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Sequence_5ftest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TargetProfile::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TargetProfile::kTargetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TargetProfile::TargetProfile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Sequence_5ftest_2eproto::scc_info_TargetProfile.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:blox_test.Sequence.TargetProfile)
}
TargetProfile::TargetProfile(const TargetProfile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_ = from.target_;
  // @@protoc_insertion_point(copy_constructor:blox_test.Sequence.TargetProfile)
}

void TargetProfile::SharedCtor() {
  target_ = 0u;
}

TargetProfile::~TargetProfile() {
  // @@protoc_insertion_point(destructor:blox_test.Sequence.TargetProfile)
  SharedDtor();
}

void TargetProfile::SharedDtor() {
}

void TargetProfile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TargetProfile::descriptor() {
  ::protobuf_Sequence_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Sequence_5ftest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TargetProfile& TargetProfile::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Sequence_5ftest_2eproto::scc_info_TargetProfile.base);
  return *internal_default_instance();
}


void TargetProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:blox_test.Sequence.TargetProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_ = 0u;
  _internal_metadata_.Clear();
}

bool TargetProfile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:blox_test.Sequence.TargetProfile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target = 1 [(.nanopb) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:blox_test.Sequence.TargetProfile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:blox_test.Sequence.TargetProfile)
  return false;
#undef DO_
}

void TargetProfile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:blox_test.Sequence.TargetProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target = 1 [(.nanopb) = {
  if (this->target() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:blox_test.Sequence.TargetProfile)
}

::google::protobuf::uint8* TargetProfile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:blox_test.Sequence.TargetProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target = 1 [(.nanopb) = {
  if (this->target() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blox_test.Sequence.TargetProfile)
  return target;
}

size_t TargetProfile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blox_test.Sequence.TargetProfile)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target = 1 [(.nanopb) = {
  if (this->target() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TargetProfile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:blox_test.Sequence.TargetProfile)
  GOOGLE_DCHECK_NE(&from, this);
  const TargetProfile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TargetProfile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:blox_test.Sequence.TargetProfile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:blox_test.Sequence.TargetProfile)
    MergeFrom(*source);
  }
}

void TargetProfile::MergeFrom(const TargetProfile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blox_test.Sequence.TargetProfile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target() != 0) {
    set_target(from.target());
  }
}

void TargetProfile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:blox_test.Sequence.TargetProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TargetProfile::CopyFrom(const TargetProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blox_test.Sequence.TargetProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TargetProfile::IsInitialized() const {
  return true;
}

void TargetProfile::Swap(TargetProfile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TargetProfile::InternalSwap(TargetProfile* other) {
  using std::swap;
  swap(target_, other->target_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TargetProfile::GetMetadata() const {
  protobuf_Sequence_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Sequence_5ftest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TargetSequence::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TargetSequence::kTargetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TargetSequence::TargetSequence()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Sequence_5ftest_2eproto::scc_info_TargetSequence.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:blox_test.Sequence.TargetSequence)
}
TargetSequence::TargetSequence(const TargetSequence& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_ = from.target_;
  // @@protoc_insertion_point(copy_constructor:blox_test.Sequence.TargetSequence)
}

void TargetSequence::SharedCtor() {
  target_ = 0u;
}

TargetSequence::~TargetSequence() {
  // @@protoc_insertion_point(destructor:blox_test.Sequence.TargetSequence)
  SharedDtor();
}

void TargetSequence::SharedDtor() {
}

void TargetSequence::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TargetSequence::descriptor() {
  ::protobuf_Sequence_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Sequence_5ftest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TargetSequence& TargetSequence::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Sequence_5ftest_2eproto::scc_info_TargetSequence.base);
  return *internal_default_instance();
}


void TargetSequence::Clear() {
// @@protoc_insertion_point(message_clear_start:blox_test.Sequence.TargetSequence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_ = 0u;
  _internal_metadata_.Clear();
}

bool TargetSequence::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:blox_test.Sequence.TargetSequence)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target = 1 [(.nanopb) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:blox_test.Sequence.TargetSequence)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:blox_test.Sequence.TargetSequence)
  return false;
#undef DO_
}

void TargetSequence::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:blox_test.Sequence.TargetSequence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target = 1 [(.nanopb) = {
  if (this->target() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:blox_test.Sequence.TargetSequence)
}

::google::protobuf::uint8* TargetSequence::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:blox_test.Sequence.TargetSequence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target = 1 [(.nanopb) = {
  if (this->target() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blox_test.Sequence.TargetSequence)
  return target;
}

size_t TargetSequence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blox_test.Sequence.TargetSequence)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target = 1 [(.nanopb) = {
  if (this->target() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TargetSequence::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:blox_test.Sequence.TargetSequence)
  GOOGLE_DCHECK_NE(&from, this);
  const TargetSequence* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TargetSequence>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:blox_test.Sequence.TargetSequence)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:blox_test.Sequence.TargetSequence)
    MergeFrom(*source);
  }
}

void TargetSequence::MergeFrom(const TargetSequence& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blox_test.Sequence.TargetSequence)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target() != 0) {
    set_target(from.target());
  }
}

void TargetSequence::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:blox_test.Sequence.TargetSequence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TargetSequence::CopyFrom(const TargetSequence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blox_test.Sequence.TargetSequence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TargetSequence::IsInitialized() const {
  return true;
}

void TargetSequence::Swap(TargetSequence* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TargetSequence::InternalSwap(TargetSequence* other) {
  using std::swap;
  swap(target_, other->target_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TargetSequence::GetMetadata() const {
  protobuf_Sequence_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Sequence_5ftest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Instruction::InitAsDefaultInstance() {
  ::blox_test::Sequence::_Instruction_default_instance_.restart_ = const_cast< ::blox_test::Sequence::Restart*>(
      ::blox_test::Sequence::Restart::internal_default_instance());
  ::blox_test::Sequence::_Instruction_default_instance_.enable_ = const_cast< ::blox_test::Sequence::EnableDisable*>(
      ::blox_test::Sequence::EnableDisable::internal_default_instance());
  ::blox_test::Sequence::_Instruction_default_instance_.disable_ = const_cast< ::blox_test::Sequence::EnableDisable*>(
      ::blox_test::Sequence::EnableDisable::internal_default_instance());
  ::blox_test::Sequence::_Instruction_default_instance_.wait_duration_ = const_cast< ::blox_test::Sequence::WaitDuration*>(
      ::blox_test::Sequence::WaitDuration::internal_default_instance());
  ::blox_test::Sequence::_Instruction_default_instance_.wait_until_ = const_cast< ::blox_test::Sequence::WaitUntil*>(
      ::blox_test::Sequence::WaitUntil::internal_default_instance());
  ::blox_test::Sequence::_Instruction_default_instance_.wait_temp_between_ = const_cast< ::blox_test::Sequence::WaitTemperatureRange*>(
      ::blox_test::Sequence::WaitTemperatureRange::internal_default_instance());
  ::blox_test::Sequence::_Instruction_default_instance_.wait_temp_not_between_ = const_cast< ::blox_test::Sequence::WaitTemperatureRange*>(
      ::blox_test::Sequence::WaitTemperatureRange::internal_default_instance());
  ::blox_test::Sequence::_Instruction_default_instance_.wait_temp_unexpected_ = const_cast< ::blox_test::Sequence::WaitTemperatureRange*>(
      ::blox_test::Sequence::WaitTemperatureRange::internal_default_instance());
  ::blox_test::Sequence::_Instruction_default_instance_.wait_temp_above_ = const_cast< ::blox_test::Sequence::WaitTemperatureBoundary*>(
      ::blox_test::Sequence::WaitTemperatureBoundary::internal_default_instance());
  ::blox_test::Sequence::_Instruction_default_instance_.wait_temp_below_ = const_cast< ::blox_test::Sequence::WaitTemperatureBoundary*>(
      ::blox_test::Sequence::WaitTemperatureBoundary::internal_default_instance());
  ::blox_test::Sequence::_Instruction_default_instance_.set_setpoint_ = const_cast< ::blox_test::Sequence::SetSetpoint*>(
      ::blox_test::Sequence::SetSetpoint::internal_default_instance());
  ::blox_test::Sequence::_Instruction_default_instance_.wait_setpoint_ = const_cast< ::blox_test::Sequence::WaitSetpoint*>(
      ::blox_test::Sequence::WaitSetpoint::internal_default_instance());
  ::blox_test::Sequence::_Instruction_default_instance_.set_digital_ = const_cast< ::blox_test::Sequence::SetDigital*>(
      ::blox_test::Sequence::SetDigital::internal_default_instance());
  ::blox_test::Sequence::_Instruction_default_instance_.wait_digital_ = const_cast< ::blox_test::Sequence::WaitDigital*>(
      ::blox_test::Sequence::WaitDigital::internal_default_instance());
  ::blox_test::Sequence::_Instruction_default_instance_.set_pwm_ = const_cast< ::blox_test::Sequence::SetPwm*>(
      ::blox_test::Sequence::SetPwm::internal_default_instance());
  ::blox_test::Sequence::_Instruction_default_instance_.start_profile_ = const_cast< ::blox_test::Sequence::TargetProfile*>(
      ::blox_test::Sequence::TargetProfile::internal_default_instance());
  ::blox_test::Sequence::_Instruction_default_instance_.wait_profile_ = const_cast< ::blox_test::Sequence::TargetProfile*>(
      ::blox_test::Sequence::TargetProfile::internal_default_instance());
  ::blox_test::Sequence::_Instruction_default_instance_.start_sequence_ = const_cast< ::blox_test::Sequence::TargetSequence*>(
      ::blox_test::Sequence::TargetSequence::internal_default_instance());
  ::blox_test::Sequence::_Instruction_default_instance_.wait_sequence_ = const_cast< ::blox_test::Sequence::TargetSequence*>(
      ::blox_test::Sequence::TargetSequence::internal_default_instance());
}
void Instruction::set_allocated_restart(::blox_test::Sequence::Restart* restart) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_instruction_oneof();
  if (restart) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      restart = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, restart, submessage_arena);
    }
    set_has_restart();
    instruction_oneof_.restart_ = restart;
  }
  // @@protoc_insertion_point(field_set_allocated:blox_test.Sequence.Instruction.RESTART)
}
void Instruction::set_allocated_enable(::blox_test::Sequence::EnableDisable* enable) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_instruction_oneof();
  if (enable) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      enable = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enable, submessage_arena);
    }
    set_has_enable();
    instruction_oneof_.enable_ = enable;
  }
  // @@protoc_insertion_point(field_set_allocated:blox_test.Sequence.Instruction.ENABLE)
}
void Instruction::set_allocated_disable(::blox_test::Sequence::EnableDisable* disable) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_instruction_oneof();
  if (disable) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      disable = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, disable, submessage_arena);
    }
    set_has_disable();
    instruction_oneof_.disable_ = disable;
  }
  // @@protoc_insertion_point(field_set_allocated:blox_test.Sequence.Instruction.DISABLE)
}
void Instruction::set_allocated_wait_duration(::blox_test::Sequence::WaitDuration* wait_duration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_instruction_oneof();
  if (wait_duration) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      wait_duration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, wait_duration, submessage_arena);
    }
    set_has_wait_duration();
    instruction_oneof_.wait_duration_ = wait_duration;
  }
  // @@protoc_insertion_point(field_set_allocated:blox_test.Sequence.Instruction.WAIT_DURATION)
}
void Instruction::set_allocated_wait_until(::blox_test::Sequence::WaitUntil* wait_until) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_instruction_oneof();
  if (wait_until) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      wait_until = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, wait_until, submessage_arena);
    }
    set_has_wait_until();
    instruction_oneof_.wait_until_ = wait_until;
  }
  // @@protoc_insertion_point(field_set_allocated:blox_test.Sequence.Instruction.WAIT_UNTIL)
}
void Instruction::set_allocated_wait_temp_between(::blox_test::Sequence::WaitTemperatureRange* wait_temp_between) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_instruction_oneof();
  if (wait_temp_between) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      wait_temp_between = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, wait_temp_between, submessage_arena);
    }
    set_has_wait_temp_between();
    instruction_oneof_.wait_temp_between_ = wait_temp_between;
  }
  // @@protoc_insertion_point(field_set_allocated:blox_test.Sequence.Instruction.WAIT_TEMP_BETWEEN)
}
void Instruction::set_allocated_wait_temp_not_between(::blox_test::Sequence::WaitTemperatureRange* wait_temp_not_between) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_instruction_oneof();
  if (wait_temp_not_between) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      wait_temp_not_between = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, wait_temp_not_between, submessage_arena);
    }
    set_has_wait_temp_not_between();
    instruction_oneof_.wait_temp_not_between_ = wait_temp_not_between;
  }
  // @@protoc_insertion_point(field_set_allocated:blox_test.Sequence.Instruction.WAIT_TEMP_NOT_BETWEEN)
}
void Instruction::set_allocated_wait_temp_unexpected(::blox_test::Sequence::WaitTemperatureRange* wait_temp_unexpected) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_instruction_oneof();
  if (wait_temp_unexpected) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      wait_temp_unexpected = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, wait_temp_unexpected, submessage_arena);
    }
    set_has_wait_temp_unexpected();
    instruction_oneof_.wait_temp_unexpected_ = wait_temp_unexpected;
  }
  // @@protoc_insertion_point(field_set_allocated:blox_test.Sequence.Instruction.WAIT_TEMP_UNEXPECTED)
}
void Instruction::set_allocated_wait_temp_above(::blox_test::Sequence::WaitTemperatureBoundary* wait_temp_above) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_instruction_oneof();
  if (wait_temp_above) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      wait_temp_above = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, wait_temp_above, submessage_arena);
    }
    set_has_wait_temp_above();
    instruction_oneof_.wait_temp_above_ = wait_temp_above;
  }
  // @@protoc_insertion_point(field_set_allocated:blox_test.Sequence.Instruction.WAIT_TEMP_ABOVE)
}
void Instruction::set_allocated_wait_temp_below(::blox_test::Sequence::WaitTemperatureBoundary* wait_temp_below) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_instruction_oneof();
  if (wait_temp_below) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      wait_temp_below = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, wait_temp_below, submessage_arena);
    }
    set_has_wait_temp_below();
    instruction_oneof_.wait_temp_below_ = wait_temp_below;
  }
  // @@protoc_insertion_point(field_set_allocated:blox_test.Sequence.Instruction.WAIT_TEMP_BELOW)
}
void Instruction::set_allocated_set_setpoint(::blox_test::Sequence::SetSetpoint* set_setpoint) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_instruction_oneof();
  if (set_setpoint) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      set_setpoint = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, set_setpoint, submessage_arena);
    }
    set_has_set_setpoint();
    instruction_oneof_.set_setpoint_ = set_setpoint;
  }
  // @@protoc_insertion_point(field_set_allocated:blox_test.Sequence.Instruction.SET_SETPOINT)
}
void Instruction::set_allocated_wait_setpoint(::blox_test::Sequence::WaitSetpoint* wait_setpoint) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_instruction_oneof();
  if (wait_setpoint) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      wait_setpoint = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, wait_setpoint, submessage_arena);
    }
    set_has_wait_setpoint();
    instruction_oneof_.wait_setpoint_ = wait_setpoint;
  }
  // @@protoc_insertion_point(field_set_allocated:blox_test.Sequence.Instruction.WAIT_SETPOINT)
}
void Instruction::set_allocated_set_digital(::blox_test::Sequence::SetDigital* set_digital) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_instruction_oneof();
  if (set_digital) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      set_digital = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, set_digital, submessage_arena);
    }
    set_has_set_digital();
    instruction_oneof_.set_digital_ = set_digital;
  }
  // @@protoc_insertion_point(field_set_allocated:blox_test.Sequence.Instruction.SET_DIGITAL)
}
void Instruction::set_allocated_wait_digital(::blox_test::Sequence::WaitDigital* wait_digital) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_instruction_oneof();
  if (wait_digital) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      wait_digital = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, wait_digital, submessage_arena);
    }
    set_has_wait_digital();
    instruction_oneof_.wait_digital_ = wait_digital;
  }
  // @@protoc_insertion_point(field_set_allocated:blox_test.Sequence.Instruction.WAIT_DIGITAL)
}
void Instruction::set_allocated_set_pwm(::blox_test::Sequence::SetPwm* set_pwm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_instruction_oneof();
  if (set_pwm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      set_pwm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, set_pwm, submessage_arena);
    }
    set_has_set_pwm();
    instruction_oneof_.set_pwm_ = set_pwm;
  }
  // @@protoc_insertion_point(field_set_allocated:blox_test.Sequence.Instruction.SET_PWM)
}
void Instruction::set_allocated_start_profile(::blox_test::Sequence::TargetProfile* start_profile) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_instruction_oneof();
  if (start_profile) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      start_profile = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, start_profile, submessage_arena);
    }
    set_has_start_profile();
    instruction_oneof_.start_profile_ = start_profile;
  }
  // @@protoc_insertion_point(field_set_allocated:blox_test.Sequence.Instruction.START_PROFILE)
}
void Instruction::set_allocated_wait_profile(::blox_test::Sequence::TargetProfile* wait_profile) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_instruction_oneof();
  if (wait_profile) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      wait_profile = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, wait_profile, submessage_arena);
    }
    set_has_wait_profile();
    instruction_oneof_.wait_profile_ = wait_profile;
  }
  // @@protoc_insertion_point(field_set_allocated:blox_test.Sequence.Instruction.WAIT_PROFILE)
}
void Instruction::set_allocated_start_sequence(::blox_test::Sequence::TargetSequence* start_sequence) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_instruction_oneof();
  if (start_sequence) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      start_sequence = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, start_sequence, submessage_arena);
    }
    set_has_start_sequence();
    instruction_oneof_.start_sequence_ = start_sequence;
  }
  // @@protoc_insertion_point(field_set_allocated:blox_test.Sequence.Instruction.START_SEQUENCE)
}
void Instruction::set_allocated_wait_sequence(::blox_test::Sequence::TargetSequence* wait_sequence) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_instruction_oneof();
  if (wait_sequence) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      wait_sequence = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, wait_sequence, submessage_arena);
    }
    set_has_wait_sequence();
    instruction_oneof_.wait_sequence_ = wait_sequence;
  }
  // @@protoc_insertion_point(field_set_allocated:blox_test.Sequence.Instruction.WAIT_SEQUENCE)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Instruction::kRESTARTFieldNumber;
const int Instruction::kENABLEFieldNumber;
const int Instruction::kDISABLEFieldNumber;
const int Instruction::kWAITDURATIONFieldNumber;
const int Instruction::kWAITUNTILFieldNumber;
const int Instruction::kWAITTEMPBETWEENFieldNumber;
const int Instruction::kWAITTEMPNOTBETWEENFieldNumber;
const int Instruction::kWAITTEMPUNEXPECTEDFieldNumber;
const int Instruction::kWAITTEMPABOVEFieldNumber;
const int Instruction::kWAITTEMPBELOWFieldNumber;
const int Instruction::kSETSETPOINTFieldNumber;
const int Instruction::kWAITSETPOINTFieldNumber;
const int Instruction::kSETDIGITALFieldNumber;
const int Instruction::kWAITDIGITALFieldNumber;
const int Instruction::kSETPWMFieldNumber;
const int Instruction::kSTARTPROFILEFieldNumber;
const int Instruction::kWAITPROFILEFieldNumber;
const int Instruction::kSTARTSEQUENCEFieldNumber;
const int Instruction::kWAITSEQUENCEFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Instruction::Instruction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Sequence_5ftest_2eproto::scc_info_Instruction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:blox_test.Sequence.Instruction)
}
Instruction::Instruction(const Instruction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_instruction_oneof();
  switch (from.instruction_oneof_case()) {
    case kRESTART: {
      mutable_restart()->::blox_test::Sequence::Restart::MergeFrom(from.restart());
      break;
    }
    case kENABLE: {
      mutable_enable()->::blox_test::Sequence::EnableDisable::MergeFrom(from.enable());
      break;
    }
    case kDISABLE: {
      mutable_disable()->::blox_test::Sequence::EnableDisable::MergeFrom(from.disable());
      break;
    }
    case kWAITDURATION: {
      mutable_wait_duration()->::blox_test::Sequence::WaitDuration::MergeFrom(from.wait_duration());
      break;
    }
    case kWAITUNTIL: {
      mutable_wait_until()->::blox_test::Sequence::WaitUntil::MergeFrom(from.wait_until());
      break;
    }
    case kWAITTEMPBETWEEN: {
      mutable_wait_temp_between()->::blox_test::Sequence::WaitTemperatureRange::MergeFrom(from.wait_temp_between());
      break;
    }
    case kWAITTEMPNOTBETWEEN: {
      mutable_wait_temp_not_between()->::blox_test::Sequence::WaitTemperatureRange::MergeFrom(from.wait_temp_not_between());
      break;
    }
    case kWAITTEMPUNEXPECTED: {
      mutable_wait_temp_unexpected()->::blox_test::Sequence::WaitTemperatureRange::MergeFrom(from.wait_temp_unexpected());
      break;
    }
    case kWAITTEMPABOVE: {
      mutable_wait_temp_above()->::blox_test::Sequence::WaitTemperatureBoundary::MergeFrom(from.wait_temp_above());
      break;
    }
    case kWAITTEMPBELOW: {
      mutable_wait_temp_below()->::blox_test::Sequence::WaitTemperatureBoundary::MergeFrom(from.wait_temp_below());
      break;
    }
    case kSETSETPOINT: {
      mutable_set_setpoint()->::blox_test::Sequence::SetSetpoint::MergeFrom(from.set_setpoint());
      break;
    }
    case kWAITSETPOINT: {
      mutable_wait_setpoint()->::blox_test::Sequence::WaitSetpoint::MergeFrom(from.wait_setpoint());
      break;
    }
    case kSETDIGITAL: {
      mutable_set_digital()->::blox_test::Sequence::SetDigital::MergeFrom(from.set_digital());
      break;
    }
    case kWAITDIGITAL: {
      mutable_wait_digital()->::blox_test::Sequence::WaitDigital::MergeFrom(from.wait_digital());
      break;
    }
    case kSETPWM: {
      mutable_set_pwm()->::blox_test::Sequence::SetPwm::MergeFrom(from.set_pwm());
      break;
    }
    case kSTARTPROFILE: {
      mutable_start_profile()->::blox_test::Sequence::TargetProfile::MergeFrom(from.start_profile());
      break;
    }
    case kWAITPROFILE: {
      mutable_wait_profile()->::blox_test::Sequence::TargetProfile::MergeFrom(from.wait_profile());
      break;
    }
    case kSTARTSEQUENCE: {
      mutable_start_sequence()->::blox_test::Sequence::TargetSequence::MergeFrom(from.start_sequence());
      break;
    }
    case kWAITSEQUENCE: {
      mutable_wait_sequence()->::blox_test::Sequence::TargetSequence::MergeFrom(from.wait_sequence());
      break;
    }
    case INSTRUCTION_ONEOF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:blox_test.Sequence.Instruction)
}

void Instruction::SharedCtor() {
  clear_has_instruction_oneof();
}

Instruction::~Instruction() {
  // @@protoc_insertion_point(destructor:blox_test.Sequence.Instruction)
  SharedDtor();
}

void Instruction::SharedDtor() {
  if (has_instruction_oneof()) {
    clear_instruction_oneof();
  }
}

void Instruction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Instruction::descriptor() {
  ::protobuf_Sequence_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Sequence_5ftest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Instruction& Instruction::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Sequence_5ftest_2eproto::scc_info_Instruction.base);
  return *internal_default_instance();
}


void Instruction::clear_instruction_oneof() {
// @@protoc_insertion_point(one_of_clear_start:blox_test.Sequence.Instruction)
  switch (instruction_oneof_case()) {
    case kRESTART: {
      delete instruction_oneof_.restart_;
      break;
    }
    case kENABLE: {
      delete instruction_oneof_.enable_;
      break;
    }
    case kDISABLE: {
      delete instruction_oneof_.disable_;
      break;
    }
    case kWAITDURATION: {
      delete instruction_oneof_.wait_duration_;
      break;
    }
    case kWAITUNTIL: {
      delete instruction_oneof_.wait_until_;
      break;
    }
    case kWAITTEMPBETWEEN: {
      delete instruction_oneof_.wait_temp_between_;
      break;
    }
    case kWAITTEMPNOTBETWEEN: {
      delete instruction_oneof_.wait_temp_not_between_;
      break;
    }
    case kWAITTEMPUNEXPECTED: {
      delete instruction_oneof_.wait_temp_unexpected_;
      break;
    }
    case kWAITTEMPABOVE: {
      delete instruction_oneof_.wait_temp_above_;
      break;
    }
    case kWAITTEMPBELOW: {
      delete instruction_oneof_.wait_temp_below_;
      break;
    }
    case kSETSETPOINT: {
      delete instruction_oneof_.set_setpoint_;
      break;
    }
    case kWAITSETPOINT: {
      delete instruction_oneof_.wait_setpoint_;
      break;
    }
    case kSETDIGITAL: {
      delete instruction_oneof_.set_digital_;
      break;
    }
    case kWAITDIGITAL: {
      delete instruction_oneof_.wait_digital_;
      break;
    }
    case kSETPWM: {
      delete instruction_oneof_.set_pwm_;
      break;
    }
    case kSTARTPROFILE: {
      delete instruction_oneof_.start_profile_;
      break;
    }
    case kWAITPROFILE: {
      delete instruction_oneof_.wait_profile_;
      break;
    }
    case kSTARTSEQUENCE: {
      delete instruction_oneof_.start_sequence_;
      break;
    }
    case kWAITSEQUENCE: {
      delete instruction_oneof_.wait_sequence_;
      break;
    }
    case INSTRUCTION_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = INSTRUCTION_ONEOF_NOT_SET;
}


void Instruction::Clear() {
// @@protoc_insertion_point(message_clear_start:blox_test.Sequence.Instruction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_instruction_oneof();
  _internal_metadata_.Clear();
}

bool Instruction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:blox_test.Sequence.Instruction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .blox_test.Sequence.Restart RESTART = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_restart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .blox_test.Sequence.EnableDisable ENABLE = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_enable()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .blox_test.Sequence.EnableDisable DISABLE = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_disable()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .blox_test.Sequence.WaitDuration WAIT_DURATION = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_wait_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .blox_test.Sequence.WaitUntil WAIT_UNTIL = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_wait_until()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .blox_test.Sequence.WaitTemperatureRange WAIT_TEMP_BETWEEN = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_wait_temp_between()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .blox_test.Sequence.WaitTemperatureRange WAIT_TEMP_NOT_BETWEEN = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_wait_temp_not_between()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .blox_test.Sequence.WaitTemperatureRange WAIT_TEMP_UNEXPECTED = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_wait_temp_unexpected()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .blox_test.Sequence.WaitTemperatureBoundary WAIT_TEMP_ABOVE = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_wait_temp_above()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .blox_test.Sequence.WaitTemperatureBoundary WAIT_TEMP_BELOW = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_wait_temp_below()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .blox_test.Sequence.SetSetpoint SET_SETPOINT = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_set_setpoint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .blox_test.Sequence.WaitSetpoint WAIT_SETPOINT = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_wait_setpoint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .blox_test.Sequence.SetDigital SET_DIGITAL = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_set_digital()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .blox_test.Sequence.WaitDigital WAIT_DIGITAL = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_wait_digital()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .blox_test.Sequence.SetPwm SET_PWM = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_set_pwm()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .blox_test.Sequence.TargetProfile START_PROFILE = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start_profile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .blox_test.Sequence.TargetProfile WAIT_PROFILE = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_wait_profile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .blox_test.Sequence.TargetSequence START_SEQUENCE = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start_sequence()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .blox_test.Sequence.TargetSequence WAIT_SEQUENCE = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_wait_sequence()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:blox_test.Sequence.Instruction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:blox_test.Sequence.Instruction)
  return false;
#undef DO_
}

void Instruction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:blox_test.Sequence.Instruction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .blox_test.Sequence.Restart RESTART = 1;
  if (has_restart()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_restart(), output);
  }

  // .blox_test.Sequence.EnableDisable ENABLE = 2;
  if (has_enable()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_enable(), output);
  }

  // .blox_test.Sequence.EnableDisable DISABLE = 3;
  if (has_disable()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_disable(), output);
  }

  // .blox_test.Sequence.WaitDuration WAIT_DURATION = 4;
  if (has_wait_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_wait_duration(), output);
  }

  // .blox_test.Sequence.WaitUntil WAIT_UNTIL = 5;
  if (has_wait_until()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_wait_until(), output);
  }

  // .blox_test.Sequence.WaitTemperatureRange WAIT_TEMP_BETWEEN = 6;
  if (has_wait_temp_between()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_wait_temp_between(), output);
  }

  // .blox_test.Sequence.WaitTemperatureRange WAIT_TEMP_NOT_BETWEEN = 7;
  if (has_wait_temp_not_between()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_wait_temp_not_between(), output);
  }

  // .blox_test.Sequence.WaitTemperatureRange WAIT_TEMP_UNEXPECTED = 8;
  if (has_wait_temp_unexpected()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_wait_temp_unexpected(), output);
  }

  // .blox_test.Sequence.WaitTemperatureBoundary WAIT_TEMP_ABOVE = 9;
  if (has_wait_temp_above()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_wait_temp_above(), output);
  }

  // .blox_test.Sequence.WaitTemperatureBoundary WAIT_TEMP_BELOW = 10;
  if (has_wait_temp_below()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_wait_temp_below(), output);
  }

  // .blox_test.Sequence.SetSetpoint SET_SETPOINT = 11;
  if (has_set_setpoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_set_setpoint(), output);
  }

  // .blox_test.Sequence.WaitSetpoint WAIT_SETPOINT = 12;
  if (has_wait_setpoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_wait_setpoint(), output);
  }

  // .blox_test.Sequence.SetDigital SET_DIGITAL = 13;
  if (has_set_digital()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_set_digital(), output);
  }

  // .blox_test.Sequence.WaitDigital WAIT_DIGITAL = 14;
  if (has_wait_digital()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_wait_digital(), output);
  }

  // .blox_test.Sequence.SetPwm SET_PWM = 15;
  if (has_set_pwm()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_set_pwm(), output);
  }

  // .blox_test.Sequence.TargetProfile START_PROFILE = 16;
  if (has_start_profile()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_start_profile(), output);
  }

  // .blox_test.Sequence.TargetProfile WAIT_PROFILE = 17;
  if (has_wait_profile()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_wait_profile(), output);
  }

  // .blox_test.Sequence.TargetSequence START_SEQUENCE = 18;
  if (has_start_sequence()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_start_sequence(), output);
  }

  // .blox_test.Sequence.TargetSequence WAIT_SEQUENCE = 19;
  if (has_wait_sequence()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_wait_sequence(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:blox_test.Sequence.Instruction)
}

::google::protobuf::uint8* Instruction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:blox_test.Sequence.Instruction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .blox_test.Sequence.Restart RESTART = 1;
  if (has_restart()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_restart(), deterministic, target);
  }

  // .blox_test.Sequence.EnableDisable ENABLE = 2;
  if (has_enable()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_enable(), deterministic, target);
  }

  // .blox_test.Sequence.EnableDisable DISABLE = 3;
  if (has_disable()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_disable(), deterministic, target);
  }

  // .blox_test.Sequence.WaitDuration WAIT_DURATION = 4;
  if (has_wait_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_wait_duration(), deterministic, target);
  }

  // .blox_test.Sequence.WaitUntil WAIT_UNTIL = 5;
  if (has_wait_until()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_wait_until(), deterministic, target);
  }

  // .blox_test.Sequence.WaitTemperatureRange WAIT_TEMP_BETWEEN = 6;
  if (has_wait_temp_between()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_wait_temp_between(), deterministic, target);
  }

  // .blox_test.Sequence.WaitTemperatureRange WAIT_TEMP_NOT_BETWEEN = 7;
  if (has_wait_temp_not_between()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_wait_temp_not_between(), deterministic, target);
  }

  // .blox_test.Sequence.WaitTemperatureRange WAIT_TEMP_UNEXPECTED = 8;
  if (has_wait_temp_unexpected()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_wait_temp_unexpected(), deterministic, target);
  }

  // .blox_test.Sequence.WaitTemperatureBoundary WAIT_TEMP_ABOVE = 9;
  if (has_wait_temp_above()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_wait_temp_above(), deterministic, target);
  }

  // .blox_test.Sequence.WaitTemperatureBoundary WAIT_TEMP_BELOW = 10;
  if (has_wait_temp_below()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_wait_temp_below(), deterministic, target);
  }

  // .blox_test.Sequence.SetSetpoint SET_SETPOINT = 11;
  if (has_set_setpoint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_set_setpoint(), deterministic, target);
  }

  // .blox_test.Sequence.WaitSetpoint WAIT_SETPOINT = 12;
  if (has_wait_setpoint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_wait_setpoint(), deterministic, target);
  }

  // .blox_test.Sequence.SetDigital SET_DIGITAL = 13;
  if (has_set_digital()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_set_digital(), deterministic, target);
  }

  // .blox_test.Sequence.WaitDigital WAIT_DIGITAL = 14;
  if (has_wait_digital()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_wait_digital(), deterministic, target);
  }

  // .blox_test.Sequence.SetPwm SET_PWM = 15;
  if (has_set_pwm()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_set_pwm(), deterministic, target);
  }

  // .blox_test.Sequence.TargetProfile START_PROFILE = 16;
  if (has_start_profile()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_start_profile(), deterministic, target);
  }

  // .blox_test.Sequence.TargetProfile WAIT_PROFILE = 17;
  if (has_wait_profile()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_wait_profile(), deterministic, target);
  }

  // .blox_test.Sequence.TargetSequence START_SEQUENCE = 18;
  if (has_start_sequence()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_start_sequence(), deterministic, target);
  }

  // .blox_test.Sequence.TargetSequence WAIT_SEQUENCE = 19;
  if (has_wait_sequence()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_wait_sequence(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blox_test.Sequence.Instruction)
  return target;
}

size_t Instruction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blox_test.Sequence.Instruction)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (instruction_oneof_case()) {
    // .blox_test.Sequence.Restart RESTART = 1;
    case kRESTART: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *instruction_oneof_.restart_);
      break;
    }
    // .blox_test.Sequence.EnableDisable ENABLE = 2;
    case kENABLE: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *instruction_oneof_.enable_);
      break;
    }
    // .blox_test.Sequence.EnableDisable DISABLE = 3;
    case kDISABLE: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *instruction_oneof_.disable_);
      break;
    }
    // .blox_test.Sequence.WaitDuration WAIT_DURATION = 4;
    case kWAITDURATION: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *instruction_oneof_.wait_duration_);
      break;
    }
    // .blox_test.Sequence.WaitUntil WAIT_UNTIL = 5;
    case kWAITUNTIL: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *instruction_oneof_.wait_until_);
      break;
    }
    // .blox_test.Sequence.WaitTemperatureRange WAIT_TEMP_BETWEEN = 6;
    case kWAITTEMPBETWEEN: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *instruction_oneof_.wait_temp_between_);
      break;
    }
    // .blox_test.Sequence.WaitTemperatureRange WAIT_TEMP_NOT_BETWEEN = 7;
    case kWAITTEMPNOTBETWEEN: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *instruction_oneof_.wait_temp_not_between_);
      break;
    }
    // .blox_test.Sequence.WaitTemperatureRange WAIT_TEMP_UNEXPECTED = 8;
    case kWAITTEMPUNEXPECTED: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *instruction_oneof_.wait_temp_unexpected_);
      break;
    }
    // .blox_test.Sequence.WaitTemperatureBoundary WAIT_TEMP_ABOVE = 9;
    case kWAITTEMPABOVE: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *instruction_oneof_.wait_temp_above_);
      break;
    }
    // .blox_test.Sequence.WaitTemperatureBoundary WAIT_TEMP_BELOW = 10;
    case kWAITTEMPBELOW: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *instruction_oneof_.wait_temp_below_);
      break;
    }
    // .blox_test.Sequence.SetSetpoint SET_SETPOINT = 11;
    case kSETSETPOINT: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *instruction_oneof_.set_setpoint_);
      break;
    }
    // .blox_test.Sequence.WaitSetpoint WAIT_SETPOINT = 12;
    case kWAITSETPOINT: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *instruction_oneof_.wait_setpoint_);
      break;
    }
    // .blox_test.Sequence.SetDigital SET_DIGITAL = 13;
    case kSETDIGITAL: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *instruction_oneof_.set_digital_);
      break;
    }
    // .blox_test.Sequence.WaitDigital WAIT_DIGITAL = 14;
    case kWAITDIGITAL: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *instruction_oneof_.wait_digital_);
      break;
    }
    // .blox_test.Sequence.SetPwm SET_PWM = 15;
    case kSETPWM: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *instruction_oneof_.set_pwm_);
      break;
    }
    // .blox_test.Sequence.TargetProfile START_PROFILE = 16;
    case kSTARTPROFILE: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *instruction_oneof_.start_profile_);
      break;
    }
    // .blox_test.Sequence.TargetProfile WAIT_PROFILE = 17;
    case kWAITPROFILE: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *instruction_oneof_.wait_profile_);
      break;
    }
    // .blox_test.Sequence.TargetSequence START_SEQUENCE = 18;
    case kSTARTSEQUENCE: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *instruction_oneof_.start_sequence_);
      break;
    }
    // .blox_test.Sequence.TargetSequence WAIT_SEQUENCE = 19;
    case kWAITSEQUENCE: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *instruction_oneof_.wait_sequence_);
      break;
    }
    case INSTRUCTION_ONEOF_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Instruction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:blox_test.Sequence.Instruction)
  GOOGLE_DCHECK_NE(&from, this);
  const Instruction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Instruction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:blox_test.Sequence.Instruction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:blox_test.Sequence.Instruction)
    MergeFrom(*source);
  }
}

void Instruction::MergeFrom(const Instruction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blox_test.Sequence.Instruction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.instruction_oneof_case()) {
    case kRESTART: {
      mutable_restart()->::blox_test::Sequence::Restart::MergeFrom(from.restart());
      break;
    }
    case kENABLE: {
      mutable_enable()->::blox_test::Sequence::EnableDisable::MergeFrom(from.enable());
      break;
    }
    case kDISABLE: {
      mutable_disable()->::blox_test::Sequence::EnableDisable::MergeFrom(from.disable());
      break;
    }
    case kWAITDURATION: {
      mutable_wait_duration()->::blox_test::Sequence::WaitDuration::MergeFrom(from.wait_duration());
      break;
    }
    case kWAITUNTIL: {
      mutable_wait_until()->::blox_test::Sequence::WaitUntil::MergeFrom(from.wait_until());
      break;
    }
    case kWAITTEMPBETWEEN: {
      mutable_wait_temp_between()->::blox_test::Sequence::WaitTemperatureRange::MergeFrom(from.wait_temp_between());
      break;
    }
    case kWAITTEMPNOTBETWEEN: {
      mutable_wait_temp_not_between()->::blox_test::Sequence::WaitTemperatureRange::MergeFrom(from.wait_temp_not_between());
      break;
    }
    case kWAITTEMPUNEXPECTED: {
      mutable_wait_temp_unexpected()->::blox_test::Sequence::WaitTemperatureRange::MergeFrom(from.wait_temp_unexpected());
      break;
    }
    case kWAITTEMPABOVE: {
      mutable_wait_temp_above()->::blox_test::Sequence::WaitTemperatureBoundary::MergeFrom(from.wait_temp_above());
      break;
    }
    case kWAITTEMPBELOW: {
      mutable_wait_temp_below()->::blox_test::Sequence::WaitTemperatureBoundary::MergeFrom(from.wait_temp_below());
      break;
    }
    case kSETSETPOINT: {
      mutable_set_setpoint()->::blox_test::Sequence::SetSetpoint::MergeFrom(from.set_setpoint());
      break;
    }
    case kWAITSETPOINT: {
      mutable_wait_setpoint()->::blox_test::Sequence::WaitSetpoint::MergeFrom(from.wait_setpoint());
      break;
    }
    case kSETDIGITAL: {
      mutable_set_digital()->::blox_test::Sequence::SetDigital::MergeFrom(from.set_digital());
      break;
    }
    case kWAITDIGITAL: {
      mutable_wait_digital()->::blox_test::Sequence::WaitDigital::MergeFrom(from.wait_digital());
      break;
    }
    case kSETPWM: {
      mutable_set_pwm()->::blox_test::Sequence::SetPwm::MergeFrom(from.set_pwm());
      break;
    }
    case kSTARTPROFILE: {
      mutable_start_profile()->::blox_test::Sequence::TargetProfile::MergeFrom(from.start_profile());
      break;
    }
    case kWAITPROFILE: {
      mutable_wait_profile()->::blox_test::Sequence::TargetProfile::MergeFrom(from.wait_profile());
      break;
    }
    case kSTARTSEQUENCE: {
      mutable_start_sequence()->::blox_test::Sequence::TargetSequence::MergeFrom(from.start_sequence());
      break;
    }
    case kWAITSEQUENCE: {
      mutable_wait_sequence()->::blox_test::Sequence::TargetSequence::MergeFrom(from.wait_sequence());
      break;
    }
    case INSTRUCTION_ONEOF_NOT_SET: {
      break;
    }
  }
}

void Instruction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:blox_test.Sequence.Instruction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Instruction::CopyFrom(const Instruction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blox_test.Sequence.Instruction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Instruction::IsInitialized() const {
  return true;
}

void Instruction::Swap(Instruction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Instruction::InternalSwap(Instruction* other) {
  using std::swap;
  swap(instruction_oneof_, other->instruction_oneof_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Instruction::GetMetadata() const {
  protobuf_Sequence_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Sequence_5ftest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Block::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Block::kEnabledFieldNumber;
const int Block::kInstructionsFieldNumber;
const int Block::kOverrideStateFieldNumber;
const int Block::kActiveInstructionFieldNumber;
const int Block::kActiveInstructionStartedAtFieldNumber;
const int Block::kDisabledAtFieldNumber;
const int Block::kDisabledDurationFieldNumber;
const int Block::kStatusFieldNumber;
const int Block::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Block::Block()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Sequence_5ftest_2eproto::scc_info_Block.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:blox_test.Sequence.Block)
}
Block::Block(const Block& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      instructions_(from.instructions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&enabled_, &from.enabled_,
    static_cast<size_t>(reinterpret_cast<char*>(&error_) -
    reinterpret_cast<char*>(&enabled_)) + sizeof(error_));
  // @@protoc_insertion_point(copy_constructor:blox_test.Sequence.Block)
}

void Block::SharedCtor() {
  ::memset(&enabled_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&enabled_)) + sizeof(error_));
}

Block::~Block() {
  // @@protoc_insertion_point(destructor:blox_test.Sequence.Block)
  SharedDtor();
}

void Block::SharedDtor() {
}

void Block::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Block::descriptor() {
  ::protobuf_Sequence_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Sequence_5ftest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Block& Block::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Sequence_5ftest_2eproto::scc_info_Block.base);
  return *internal_default_instance();
}


void Block::Clear() {
// @@protoc_insertion_point(message_clear_start:blox_test.Sequence.Block)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instructions_.Clear();
  ::memset(&enabled_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&enabled_)) + sizeof(error_));
  _internal_metadata_.Clear();
}

bool Block::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:blox_test.Sequence.Block)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool enabled = 1 [(.brewblox.field) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .blox_test.Sequence.Instruction instructions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_instructions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool overrideState = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &overridestate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 activeInstruction = 4 [(.nanopb) = {
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &activeinstruction_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 activeInstructionStartedAt = 5 [(.nanopb) = {
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &activeinstructionstartedat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 disabledAt = 6 [(.nanopb) = {
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &disabledat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 disabledDuration = 7 [(.nanopb) = {
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &disabledduration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .blox_test.Sequence.SequenceStatus status = 8 [(.brewblox.field) = {
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::blox_test::Sequence::SequenceStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .blox_test.Sequence.SequenceError error = 9 [(.brewblox.field) = {
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_error(static_cast< ::blox_test::Sequence::SequenceError >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:blox_test.Sequence.Block)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:blox_test.Sequence.Block)
  return false;
#undef DO_
}

void Block::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:blox_test.Sequence.Block)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1 [(.brewblox.field) = {
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enabled(), output);
  }

  // repeated .blox_test.Sequence.Instruction instructions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->instructions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->instructions(static_cast<int>(i)),
      output);
  }

  // bool overrideState = 3;
  if (this->overridestate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->overridestate(), output);
  }

  // uint32 activeInstruction = 4 [(.nanopb) = {
  if (this->activeinstruction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->activeinstruction(), output);
  }

  // uint32 activeInstructionStartedAt = 5 [(.nanopb) = {
  if (this->activeinstructionstartedat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->activeinstructionstartedat(), output);
  }

  // uint32 disabledAt = 6 [(.nanopb) = {
  if (this->disabledat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->disabledat(), output);
  }

  // uint32 disabledDuration = 7 [(.nanopb) = {
  if (this->disabledduration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->disabledduration(), output);
  }

  // .blox_test.Sequence.SequenceStatus status = 8 [(.brewblox.field) = {
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->status(), output);
  }

  // .blox_test.Sequence.SequenceError error = 9 [(.brewblox.field) = {
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:blox_test.Sequence.Block)
}

::google::protobuf::uint8* Block::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:blox_test.Sequence.Block)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1 [(.brewblox.field) = {
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enabled(), target);
  }

  // repeated .blox_test.Sequence.Instruction instructions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->instructions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->instructions(static_cast<int>(i)), deterministic, target);
  }

  // bool overrideState = 3;
  if (this->overridestate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->overridestate(), target);
  }

  // uint32 activeInstruction = 4 [(.nanopb) = {
  if (this->activeinstruction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->activeinstruction(), target);
  }

  // uint32 activeInstructionStartedAt = 5 [(.nanopb) = {
  if (this->activeinstructionstartedat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->activeinstructionstartedat(), target);
  }

  // uint32 disabledAt = 6 [(.nanopb) = {
  if (this->disabledat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->disabledat(), target);
  }

  // uint32 disabledDuration = 7 [(.nanopb) = {
  if (this->disabledduration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->disabledduration(), target);
  }

  // .blox_test.Sequence.SequenceStatus status = 8 [(.brewblox.field) = {
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->status(), target);
  }

  // .blox_test.Sequence.SequenceError error = 9 [(.brewblox.field) = {
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->error(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blox_test.Sequence.Block)
  return target;
}

size_t Block::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blox_test.Sequence.Block)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .blox_test.Sequence.Instruction instructions = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->instructions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->instructions(static_cast<int>(i)));
    }
  }

  // bool enabled = 1 [(.brewblox.field) = {
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  // bool overrideState = 3;
  if (this->overridestate() != 0) {
    total_size += 1 + 1;
  }

  // uint32 activeInstruction = 4 [(.nanopb) = {
  if (this->activeinstruction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->activeinstruction());
  }

  // uint32 activeInstructionStartedAt = 5 [(.nanopb) = {
  if (this->activeinstructionstartedat() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->activeinstructionstartedat());
  }

  // uint32 disabledAt = 6 [(.nanopb) = {
  if (this->disabledat() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->disabledat());
  }

  // uint32 disabledDuration = 7 [(.nanopb) = {
  if (this->disabledduration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->disabledduration());
  }

  // .blox_test.Sequence.SequenceStatus status = 8 [(.brewblox.field) = {
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  // .blox_test.Sequence.SequenceError error = 9 [(.brewblox.field) = {
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Block::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:blox_test.Sequence.Block)
  GOOGLE_DCHECK_NE(&from, this);
  const Block* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Block>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:blox_test.Sequence.Block)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:blox_test.Sequence.Block)
    MergeFrom(*source);
  }
}

void Block::MergeFrom(const Block& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blox_test.Sequence.Block)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  instructions_.MergeFrom(from.instructions_);
  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
  if (from.overridestate() != 0) {
    set_overridestate(from.overridestate());
  }
  if (from.activeinstruction() != 0) {
    set_activeinstruction(from.activeinstruction());
  }
  if (from.activeinstructionstartedat() != 0) {
    set_activeinstructionstartedat(from.activeinstructionstartedat());
  }
  if (from.disabledat() != 0) {
    set_disabledat(from.disabledat());
  }
  if (from.disabledduration() != 0) {
    set_disabledduration(from.disabledduration());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void Block::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:blox_test.Sequence.Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Block::CopyFrom(const Block& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blox_test.Sequence.Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Block::IsInitialized() const {
  return true;
}

void Block::Swap(Block* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Block::InternalSwap(Block* other) {
  using std::swap;
  CastToBase(&instructions_)->InternalSwap(CastToBase(&other->instructions_));
  swap(enabled_, other->enabled_);
  swap(overridestate_, other->overridestate_);
  swap(activeinstruction_, other->activeinstruction_);
  swap(activeinstructionstartedat_, other->activeinstructionstartedat_);
  swap(disabledat_, other->disabledat_);
  swap(disabledduration_, other->disabledduration_);
  swap(status_, other->status_);
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Block::GetMetadata() const {
  protobuf_Sequence_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Sequence_5ftest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Sequence
}  // namespace blox_test
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::blox_test::Sequence::Restart* Arena::CreateMaybeMessage< ::blox_test::Sequence::Restart >(Arena* arena) {
  return Arena::CreateInternal< ::blox_test::Sequence::Restart >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::blox_test::Sequence::EnableDisable* Arena::CreateMaybeMessage< ::blox_test::Sequence::EnableDisable >(Arena* arena) {
  return Arena::CreateInternal< ::blox_test::Sequence::EnableDisable >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::blox_test::Sequence::WaitDuration* Arena::CreateMaybeMessage< ::blox_test::Sequence::WaitDuration >(Arena* arena) {
  return Arena::CreateInternal< ::blox_test::Sequence::WaitDuration >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::blox_test::Sequence::WaitUntil* Arena::CreateMaybeMessage< ::blox_test::Sequence::WaitUntil >(Arena* arena) {
  return Arena::CreateInternal< ::blox_test::Sequence::WaitUntil >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::blox_test::Sequence::WaitTemperatureRange* Arena::CreateMaybeMessage< ::blox_test::Sequence::WaitTemperatureRange >(Arena* arena) {
  return Arena::CreateInternal< ::blox_test::Sequence::WaitTemperatureRange >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::blox_test::Sequence::WaitTemperatureBoundary* Arena::CreateMaybeMessage< ::blox_test::Sequence::WaitTemperatureBoundary >(Arena* arena) {
  return Arena::CreateInternal< ::blox_test::Sequence::WaitTemperatureBoundary >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::blox_test::Sequence::SetSetpoint* Arena::CreateMaybeMessage< ::blox_test::Sequence::SetSetpoint >(Arena* arena) {
  return Arena::CreateInternal< ::blox_test::Sequence::SetSetpoint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::blox_test::Sequence::WaitSetpoint* Arena::CreateMaybeMessage< ::blox_test::Sequence::WaitSetpoint >(Arena* arena) {
  return Arena::CreateInternal< ::blox_test::Sequence::WaitSetpoint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::blox_test::Sequence::SetDigital* Arena::CreateMaybeMessage< ::blox_test::Sequence::SetDigital >(Arena* arena) {
  return Arena::CreateInternal< ::blox_test::Sequence::SetDigital >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::blox_test::Sequence::WaitDigital* Arena::CreateMaybeMessage< ::blox_test::Sequence::WaitDigital >(Arena* arena) {
  return Arena::CreateInternal< ::blox_test::Sequence::WaitDigital >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::blox_test::Sequence::SetPwm* Arena::CreateMaybeMessage< ::blox_test::Sequence::SetPwm >(Arena* arena) {
  return Arena::CreateInternal< ::blox_test::Sequence::SetPwm >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::blox_test::Sequence::TargetProfile* Arena::CreateMaybeMessage< ::blox_test::Sequence::TargetProfile >(Arena* arena) {
  return Arena::CreateInternal< ::blox_test::Sequence::TargetProfile >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::blox_test::Sequence::TargetSequence* Arena::CreateMaybeMessage< ::blox_test::Sequence::TargetSequence >(Arena* arena) {
  return Arena::CreateInternal< ::blox_test::Sequence::TargetSequence >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::blox_test::Sequence::Instruction* Arena::CreateMaybeMessage< ::blox_test::Sequence::Instruction >(Arena* arena) {
  return Arena::CreateInternal< ::blox_test::Sequence::Instruction >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::blox_test::Sequence::Block* Arena::CreateMaybeMessage< ::blox_test::Sequence::Block >(Arena* arena) {
  return Arena::CreateInternal< ::blox_test::Sequence::Block >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
