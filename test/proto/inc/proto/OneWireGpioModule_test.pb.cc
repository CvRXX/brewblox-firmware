// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OneWireGpioModule_test.proto

#include "OneWireGpioModule_test.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_OneWireGpioModule_5ftest_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_OneWireGpioModule_5ftest_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GpioModuleChannel;
}  // namespace protobuf_OneWireGpioModule_5ftest_2eproto
namespace blox_test {
namespace OneWireGpioModule {
class GpioModuleChannelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GpioModuleChannel>
      _instance;
} _GpioModuleChannel_default_instance_;
class BlockDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Block>
      _instance;
} _Block_default_instance_;
}  // namespace OneWireGpioModule
}  // namespace blox_test
namespace protobuf_OneWireGpioModule_5ftest_2eproto {
static void InitDefaultsGpioModuleChannel() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::blox_test::OneWireGpioModule::_GpioModuleChannel_default_instance_;
    new (ptr) ::blox_test::OneWireGpioModule::GpioModuleChannel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::blox_test::OneWireGpioModule::GpioModuleChannel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GpioModuleChannel =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGpioModuleChannel}, {}};

static void InitDefaultsBlock() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::blox_test::OneWireGpioModule::_Block_default_instance_;
    new (ptr) ::blox_test::OneWireGpioModule::Block();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::blox_test::OneWireGpioModule::Block::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Block =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBlock}, {
      &protobuf_OneWireGpioModule_5ftest_2eproto::scc_info_GpioModuleChannel.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_GpioModuleChannel.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Block.base);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::OneWireGpioModule::GpioModuleChannel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::OneWireGpioModule::GpioModuleChannel, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::OneWireGpioModule::GpioModuleChannel, devicetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::OneWireGpioModule::GpioModuleChannel, pinsmask_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::OneWireGpioModule::GpioModuleChannel, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::OneWireGpioModule::GpioModuleChannel, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::OneWireGpioModule::GpioModuleChannel, capabilities_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::OneWireGpioModule::GpioModuleChannel, claimedby_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::OneWireGpioModule::Block, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::OneWireGpioModule::Block, channels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::OneWireGpioModule::Block, moduleposition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::OneWireGpioModule::Block, modulestatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::OneWireGpioModule::Block, pullupdesired_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::OneWireGpioModule::Block, pullupstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::OneWireGpioModule::Block, pullupwhenactive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::OneWireGpioModule::Block, pullupwheninactive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::OneWireGpioModule::Block, pulldowndesired_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::OneWireGpioModule::Block, pulldownstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::OneWireGpioModule::Block, pulldownwhenactive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::OneWireGpioModule::Block, pulldownwheninactive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::OneWireGpioModule::Block, overcurrent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::OneWireGpioModule::Block, openload_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::OneWireGpioModule::Block, useexternalpower_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::OneWireGpioModule::Block, clearfaults_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::OneWireGpioModule::Block, modulestatusclear_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::blox_test::OneWireGpioModule::GpioModuleChannel)},
  { 12, -1, sizeof(::blox_test::OneWireGpioModule::Block)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::blox_test::OneWireGpioModule::_GpioModuleChannel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::blox_test::OneWireGpioModule::_Block_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "OneWireGpioModule_test.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\034OneWireGpioModule_test.proto\022\033blox_tes"
      "t.OneWireGpioModule\032\023brewblox_test.proto"
      "\032\021nanopb_test.proto\"\201\002\n\021GpioModuleChanne"
      "l\022\021\n\002id\030\001 \001(\rB\005\222\?\0028\010\022\?\n\ndeviceType\030\002 \001(\016"
      "2+.blox_test.OneWireGpioModule.GpioDevic"
      "eType\022\035\n\010pinsMask\030\003 \001(\rB\013\212\265\030\002P\001\222\?\0028\010\022\024\n\005"
      "width\030\004 \001(\rB\005\222\?\0028\010\022\023\n\004name\030\005 \001(\tB\005\222\?\002\010 \022"
      "\'\n\014capabilities\030\006 \001(\rB\021\212\265\030\002(\001\212\265\030\002P\001\222\?\0028\020"
      "\022%\n\tclaimedBy\030\007 \001(\rB\022\212\265\030\003\030\377\001\212\265\030\002(\001\222\?\0028\020\""
      "\254\005\n\005Block\022G\n\010channels\030\001 \003(\0132..blox_test."
      "OneWireGpioModule.GpioModuleChannelB\005\222\?\002"
      "\020\010\022\035\n\016modulePosition\030\002 \001(\rB\005\222\?\0028\010\022!\n\014mod"
      "uleStatus\030\003 \001(\rB\013\222\?\0028\010\212\265\030\002P\001\022(\n\rpullUpDe"
      "sired\030\004 \001(\rB\021\212\265\030\002(\001\222\?\0028\010\212\265\030\002P\001\022\'\n\014pullUp"
      "Status\030\005 \001(\rB\021\212\265\030\002(\001\222\?\0028\010\212\265\030\002P\001\022+\n\020pullU"
      "pWhenActive\030\006 \001(\rB\021\212\265\030\002(\001\222\?\0028\010\212\265\030\002P\001\022-\n\022"
      "pullUpWhenInactive\030\007 \001(\rB\021\212\265\030\002(\001\222\?\0028\010\212\265\030"
      "\002P\001\022*\n\017pullDownDesired\030\010 \001(\rB\021\212\265\030\002(\001\222\?\0028"
      "\010\212\265\030\002P\001\022)\n\016pullDownStatus\030\t \001(\rB\021\212\265\030\002(\001\222"
      "\?\0028\010\212\265\030\002P\001\022-\n\022pullDownWhenActive\030\n \001(\rB\021"
      "\212\265\030\002(\001\222\?\0028\010\212\265\030\002P\001\022/\n\024pullDownWhenInactiv"
      "e\030\013 \001(\rB\021\212\265\030\002(\001\222\?\0028\010\212\265\030\002P\001\022&\n\013overCurren"
      "t\030\014 \001(\rB\021\212\265\030\002(\001\222\?\0028\010\212\265\030\002P\001\022#\n\010openLoad\030\r"
      " \001(\rB\021\212\265\030\002(\001\222\?\0028\010\212\265\030\002P\001\022\030\n\020useExternalPo"
      "wer\030\016 \001(\010\022\023\n\013clearFaults\030  \001(\010\022!\n\021module"
      "StatusClear\030Z \001(\rB\006\212\265\030\002H\001:\023\212\265\030\003\030\305\002\212\265\030\002H\n"
      "\212\265\030\002H\014*\225\005\n\016GpioDeviceType\022\021\n\rGPIO_DEV_NO"
      "NE\020\000\022\023\n\017GPIO_DEV_SSR_2P\020\001\022\023\n\017GPIO_DEV_SS"
      "R_1P\020\002\022 \n\034GPIO_DEV_MECHANICAL_RELAY_2P\020\003"
      "\022*\n&GPIO_DEV_MECHANICAL_RELAY_1P_HIGH_SI"
      "DE\020\004\022)\n%GPIO_DEV_MECHANICAL_RELAY_1P_LOW"
      "_SIDE\020\005\022\024\n\020GPIO_DEV_COIL_2P\020\006\022\"\n\036GPIO_DE"
      "V_COIL_2P_BIDIRECTIONAL\020\007\022\036\n\032GPIO_DEV_CO"
      "IL_1P_HIGH_SIDE\020\010\022\035\n\031GPIO_DEV_COIL_1P_LO"
      "W_SIDE\020\t\022\025\n\021GPIO_DEV_MOTOR_2P\020\n\022#\n\037GPIO_"
      "DEV_MOTOR_2P_BIDIRECTIONAL\020\013\022\037\n\033GPIO_DEV"
      "_MOTOR_1P_HIGH_SIDE\020\014\022\036\n\032GPIO_DEV_MOTOR_"
      "1P_LOW_SIDE\020\r\022\033\n\027GPIO_DEV_LOAD_DETECT_2P"
      "\020\016\022%\n!GPIO_DEV_LOAD_DETECT_1P_PULL_DOWN\020"
      "\017\022#\n\037GPIO_DEV_LOAD_DETECT_1P_PULL_UP\020\020\022\025"
      "\n\021GPIO_DEV_POWER_1P\020\021\022!\n\035GPIO_DEV_POWER_"
      "1P_LOAD_DETECT\020\022\022\023\n\017GPIO_DEV_GND_1P\020\023\022\037\n"
      "\033GPIO_DEV_GND_1P_LOAD_DETECT\020\024*\212\002\n\016GpioE"
      "rrorFlags\022\021\n\rGPIO_ERR_NONE\020\000\022\033\n\027GPIO_ERR"
      "_POWER_ON_RESET\020\001\022\030\n\024GPIO_ERR_OVERVOLTAG"
      "E\020\002\022\031\n\025GPIO_ERR_UNDERVOLTAGE\020\004\022\030\n\024GPIO_E"
      "RR_OVERCURRENT\020\010\022\026\n\022GPIO_ERR_OPEN_LOAD\020\020"
      "\022$\n GPIO_ERR_OVERTEMPERATURE_WARNING\020 \022\""
      "\n\036GPIO_ERR_OVERTEMPERATURE_ERROR\020@\022\027\n\022GP"
      "IO_ERR_SPI_ERROR\020\200\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1987);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "OneWireGpioModule_test.proto", &protobuf_RegisterTypes);
  ::protobuf_brewblox_5ftest_2eproto::AddDescriptors();
  ::protobuf_nanopb_5ftest_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_OneWireGpioModule_5ftest_2eproto
namespace blox_test {
namespace OneWireGpioModule {
const ::google::protobuf::EnumDescriptor* GpioDeviceType_descriptor() {
  protobuf_OneWireGpioModule_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_OneWireGpioModule_5ftest_2eproto::file_level_enum_descriptors[0];
}
bool GpioDeviceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GpioErrorFlags_descriptor() {
  protobuf_OneWireGpioModule_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_OneWireGpioModule_5ftest_2eproto::file_level_enum_descriptors[1];
}
bool GpioErrorFlags_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void GpioModuleChannel::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GpioModuleChannel::kIdFieldNumber;
const int GpioModuleChannel::kDeviceTypeFieldNumber;
const int GpioModuleChannel::kPinsMaskFieldNumber;
const int GpioModuleChannel::kWidthFieldNumber;
const int GpioModuleChannel::kNameFieldNumber;
const int GpioModuleChannel::kCapabilitiesFieldNumber;
const int GpioModuleChannel::kClaimedByFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GpioModuleChannel::GpioModuleChannel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_OneWireGpioModule_5ftest_2eproto::scc_info_GpioModuleChannel.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:blox_test.OneWireGpioModule.GpioModuleChannel)
}
GpioModuleChannel::GpioModuleChannel(const GpioModuleChannel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&claimedby_) -
    reinterpret_cast<char*>(&id_)) + sizeof(claimedby_));
  // @@protoc_insertion_point(copy_constructor:blox_test.OneWireGpioModule.GpioModuleChannel)
}

void GpioModuleChannel::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&claimedby_) -
      reinterpret_cast<char*>(&id_)) + sizeof(claimedby_));
}

GpioModuleChannel::~GpioModuleChannel() {
  // @@protoc_insertion_point(destructor:blox_test.OneWireGpioModule.GpioModuleChannel)
  SharedDtor();
}

void GpioModuleChannel::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GpioModuleChannel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GpioModuleChannel::descriptor() {
  ::protobuf_OneWireGpioModule_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OneWireGpioModule_5ftest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GpioModuleChannel& GpioModuleChannel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_OneWireGpioModule_5ftest_2eproto::scc_info_GpioModuleChannel.base);
  return *internal_default_instance();
}


void GpioModuleChannel::Clear() {
// @@protoc_insertion_point(message_clear_start:blox_test.OneWireGpioModule.GpioModuleChannel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&claimedby_) -
      reinterpret_cast<char*>(&id_)) + sizeof(claimedby_));
  _internal_metadata_.Clear();
}

bool GpioModuleChannel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:blox_test.OneWireGpioModule.GpioModuleChannel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1 [(.nanopb) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .blox_test.OneWireGpioModule.GpioDeviceType deviceType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_devicetype(static_cast< ::blox_test::OneWireGpioModule::GpioDeviceType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pinsMask = 3 [(.nanopb) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pinsmask_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 width = 4 [(.nanopb) = {
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 5 [(.nanopb) = {
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "blox_test.OneWireGpioModule.GpioModuleChannel.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 capabilities = 6 [(.nanopb) = {
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &capabilities_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 claimedBy = 7 [(.nanopb) = {
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &claimedby_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:blox_test.OneWireGpioModule.GpioModuleChannel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:blox_test.OneWireGpioModule.GpioModuleChannel)
  return false;
#undef DO_
}

void GpioModuleChannel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:blox_test.OneWireGpioModule.GpioModuleChannel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1 [(.nanopb) = {
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // .blox_test.OneWireGpioModule.GpioDeviceType deviceType = 2;
  if (this->devicetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->devicetype(), output);
  }

  // uint32 pinsMask = 3 [(.nanopb) = {
  if (this->pinsmask() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->pinsmask(), output);
  }

  // uint32 width = 4 [(.nanopb) = {
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->width(), output);
  }

  // string name = 5 [(.nanopb) = {
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "blox_test.OneWireGpioModule.GpioModuleChannel.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  // uint32 capabilities = 6 [(.nanopb) = {
  if (this->capabilities() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->capabilities(), output);
  }

  // uint32 claimedBy = 7 [(.nanopb) = {
  if (this->claimedby() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->claimedby(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:blox_test.OneWireGpioModule.GpioModuleChannel)
}

::google::protobuf::uint8* GpioModuleChannel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:blox_test.OneWireGpioModule.GpioModuleChannel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1 [(.nanopb) = {
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // .blox_test.OneWireGpioModule.GpioDeviceType deviceType = 2;
  if (this->devicetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->devicetype(), target);
  }

  // uint32 pinsMask = 3 [(.nanopb) = {
  if (this->pinsmask() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->pinsmask(), target);
  }

  // uint32 width = 4 [(.nanopb) = {
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->width(), target);
  }

  // string name = 5 [(.nanopb) = {
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "blox_test.OneWireGpioModule.GpioModuleChannel.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  // uint32 capabilities = 6 [(.nanopb) = {
  if (this->capabilities() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->capabilities(), target);
  }

  // uint32 claimedBy = 7 [(.nanopb) = {
  if (this->claimedby() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->claimedby(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blox_test.OneWireGpioModule.GpioModuleChannel)
  return target;
}

size_t GpioModuleChannel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blox_test.OneWireGpioModule.GpioModuleChannel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 5 [(.nanopb) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint32 id = 1 [(.nanopb) = {
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // .blox_test.OneWireGpioModule.GpioDeviceType deviceType = 2;
  if (this->devicetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->devicetype());
  }

  // uint32 pinsMask = 3 [(.nanopb) = {
  if (this->pinsmask() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pinsmask());
  }

  // uint32 width = 4 [(.nanopb) = {
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->width());
  }

  // uint32 capabilities = 6 [(.nanopb) = {
  if (this->capabilities() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->capabilities());
  }

  // uint32 claimedBy = 7 [(.nanopb) = {
  if (this->claimedby() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->claimedby());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GpioModuleChannel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:blox_test.OneWireGpioModule.GpioModuleChannel)
  GOOGLE_DCHECK_NE(&from, this);
  const GpioModuleChannel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GpioModuleChannel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:blox_test.OneWireGpioModule.GpioModuleChannel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:blox_test.OneWireGpioModule.GpioModuleChannel)
    MergeFrom(*source);
  }
}

void GpioModuleChannel::MergeFrom(const GpioModuleChannel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blox_test.OneWireGpioModule.GpioModuleChannel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.devicetype() != 0) {
    set_devicetype(from.devicetype());
  }
  if (from.pinsmask() != 0) {
    set_pinsmask(from.pinsmask());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.capabilities() != 0) {
    set_capabilities(from.capabilities());
  }
  if (from.claimedby() != 0) {
    set_claimedby(from.claimedby());
  }
}

void GpioModuleChannel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:blox_test.OneWireGpioModule.GpioModuleChannel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GpioModuleChannel::CopyFrom(const GpioModuleChannel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blox_test.OneWireGpioModule.GpioModuleChannel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GpioModuleChannel::IsInitialized() const {
  return true;
}

void GpioModuleChannel::Swap(GpioModuleChannel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GpioModuleChannel::InternalSwap(GpioModuleChannel* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(devicetype_, other->devicetype_);
  swap(pinsmask_, other->pinsmask_);
  swap(width_, other->width_);
  swap(capabilities_, other->capabilities_);
  swap(claimedby_, other->claimedby_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GpioModuleChannel::GetMetadata() const {
  protobuf_OneWireGpioModule_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OneWireGpioModule_5ftest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Block::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Block::kChannelsFieldNumber;
const int Block::kModulePositionFieldNumber;
const int Block::kModuleStatusFieldNumber;
const int Block::kPullUpDesiredFieldNumber;
const int Block::kPullUpStatusFieldNumber;
const int Block::kPullUpWhenActiveFieldNumber;
const int Block::kPullUpWhenInactiveFieldNumber;
const int Block::kPullDownDesiredFieldNumber;
const int Block::kPullDownStatusFieldNumber;
const int Block::kPullDownWhenActiveFieldNumber;
const int Block::kPullDownWhenInactiveFieldNumber;
const int Block::kOverCurrentFieldNumber;
const int Block::kOpenLoadFieldNumber;
const int Block::kUseExternalPowerFieldNumber;
const int Block::kClearFaultsFieldNumber;
const int Block::kModuleStatusClearFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Block::Block()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_OneWireGpioModule_5ftest_2eproto::scc_info_Block.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:blox_test.OneWireGpioModule.Block)
}
Block::Block(const Block& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      channels_(from.channels_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&moduleposition_, &from.moduleposition_,
    static_cast<size_t>(reinterpret_cast<char*>(&modulestatusclear_) -
    reinterpret_cast<char*>(&moduleposition_)) + sizeof(modulestatusclear_));
  // @@protoc_insertion_point(copy_constructor:blox_test.OneWireGpioModule.Block)
}

void Block::SharedCtor() {
  ::memset(&moduleposition_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&modulestatusclear_) -
      reinterpret_cast<char*>(&moduleposition_)) + sizeof(modulestatusclear_));
}

Block::~Block() {
  // @@protoc_insertion_point(destructor:blox_test.OneWireGpioModule.Block)
  SharedDtor();
}

void Block::SharedDtor() {
}

void Block::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Block::descriptor() {
  ::protobuf_OneWireGpioModule_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OneWireGpioModule_5ftest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Block& Block::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_OneWireGpioModule_5ftest_2eproto::scc_info_Block.base);
  return *internal_default_instance();
}


void Block::Clear() {
// @@protoc_insertion_point(message_clear_start:blox_test.OneWireGpioModule.Block)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channels_.Clear();
  ::memset(&moduleposition_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&modulestatusclear_) -
      reinterpret_cast<char*>(&moduleposition_)) + sizeof(modulestatusclear_));
  _internal_metadata_.Clear();
}

bool Block::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:blox_test.OneWireGpioModule.Block)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .blox_test.OneWireGpioModule.GpioModuleChannel channels = 1 [(.nanopb) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_channels()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 modulePosition = 2 [(.nanopb) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &moduleposition_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 moduleStatus = 3 [(.nanopb) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &modulestatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pullUpDesired = 4 [(.nanopb) = {
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pullupdesired_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pullUpStatus = 5 [(.nanopb) = {
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pullupstatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pullUpWhenActive = 6 [(.nanopb) = {
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pullupwhenactive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pullUpWhenInactive = 7 [(.nanopb) = {
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pullupwheninactive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pullDownDesired = 8 [(.nanopb) = {
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulldowndesired_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pullDownStatus = 9 [(.nanopb) = {
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulldownstatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pullDownWhenActive = 10 [(.nanopb) = {
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulldownwhenactive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pullDownWhenInactive = 11 [(.nanopb) = {
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulldownwheninactive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 overCurrent = 12 [(.nanopb) = {
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &overcurrent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 openLoad = 13 [(.nanopb) = {
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &openload_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool useExternalPower = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &useexternalpower_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool clearFaults = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 256 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &clearfaults_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 moduleStatusClear = 90 [(.brewblox.field) = {
      case 90: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 720 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &modulestatusclear_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:blox_test.OneWireGpioModule.Block)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:blox_test.OneWireGpioModule.Block)
  return false;
#undef DO_
}

void Block::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:blox_test.OneWireGpioModule.Block)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .blox_test.OneWireGpioModule.GpioModuleChannel channels = 1 [(.nanopb) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channels_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->channels(static_cast<int>(i)),
      output);
  }

  // uint32 modulePosition = 2 [(.nanopb) = {
  if (this->moduleposition() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->moduleposition(), output);
  }

  // uint32 moduleStatus = 3 [(.nanopb) = {
  if (this->modulestatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->modulestatus(), output);
  }

  // uint32 pullUpDesired = 4 [(.nanopb) = {
  if (this->pullupdesired() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->pullupdesired(), output);
  }

  // uint32 pullUpStatus = 5 [(.nanopb) = {
  if (this->pullupstatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->pullupstatus(), output);
  }

  // uint32 pullUpWhenActive = 6 [(.nanopb) = {
  if (this->pullupwhenactive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->pullupwhenactive(), output);
  }

  // uint32 pullUpWhenInactive = 7 [(.nanopb) = {
  if (this->pullupwheninactive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->pullupwheninactive(), output);
  }

  // uint32 pullDownDesired = 8 [(.nanopb) = {
  if (this->pulldowndesired() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->pulldowndesired(), output);
  }

  // uint32 pullDownStatus = 9 [(.nanopb) = {
  if (this->pulldownstatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->pulldownstatus(), output);
  }

  // uint32 pullDownWhenActive = 10 [(.nanopb) = {
  if (this->pulldownwhenactive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->pulldownwhenactive(), output);
  }

  // uint32 pullDownWhenInactive = 11 [(.nanopb) = {
  if (this->pulldownwheninactive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->pulldownwheninactive(), output);
  }

  // uint32 overCurrent = 12 [(.nanopb) = {
  if (this->overcurrent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->overcurrent(), output);
  }

  // uint32 openLoad = 13 [(.nanopb) = {
  if (this->openload() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->openload(), output);
  }

  // bool useExternalPower = 14;
  if (this->useexternalpower() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->useexternalpower(), output);
  }

  // bool clearFaults = 32;
  if (this->clearfaults() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(32, this->clearfaults(), output);
  }

  // uint32 moduleStatusClear = 90 [(.brewblox.field) = {
  if (this->modulestatusclear() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(90, this->modulestatusclear(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:blox_test.OneWireGpioModule.Block)
}

::google::protobuf::uint8* Block::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:blox_test.OneWireGpioModule.Block)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .blox_test.OneWireGpioModule.GpioModuleChannel channels = 1 [(.nanopb) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channels_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->channels(static_cast<int>(i)), deterministic, target);
  }

  // uint32 modulePosition = 2 [(.nanopb) = {
  if (this->moduleposition() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->moduleposition(), target);
  }

  // uint32 moduleStatus = 3 [(.nanopb) = {
  if (this->modulestatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->modulestatus(), target);
  }

  // uint32 pullUpDesired = 4 [(.nanopb) = {
  if (this->pullupdesired() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->pullupdesired(), target);
  }

  // uint32 pullUpStatus = 5 [(.nanopb) = {
  if (this->pullupstatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->pullupstatus(), target);
  }

  // uint32 pullUpWhenActive = 6 [(.nanopb) = {
  if (this->pullupwhenactive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->pullupwhenactive(), target);
  }

  // uint32 pullUpWhenInactive = 7 [(.nanopb) = {
  if (this->pullupwheninactive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->pullupwheninactive(), target);
  }

  // uint32 pullDownDesired = 8 [(.nanopb) = {
  if (this->pulldowndesired() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->pulldowndesired(), target);
  }

  // uint32 pullDownStatus = 9 [(.nanopb) = {
  if (this->pulldownstatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->pulldownstatus(), target);
  }

  // uint32 pullDownWhenActive = 10 [(.nanopb) = {
  if (this->pulldownwhenactive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->pulldownwhenactive(), target);
  }

  // uint32 pullDownWhenInactive = 11 [(.nanopb) = {
  if (this->pulldownwheninactive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->pulldownwheninactive(), target);
  }

  // uint32 overCurrent = 12 [(.nanopb) = {
  if (this->overcurrent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->overcurrent(), target);
  }

  // uint32 openLoad = 13 [(.nanopb) = {
  if (this->openload() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->openload(), target);
  }

  // bool useExternalPower = 14;
  if (this->useexternalpower() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->useexternalpower(), target);
  }

  // bool clearFaults = 32;
  if (this->clearfaults() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(32, this->clearfaults(), target);
  }

  // uint32 moduleStatusClear = 90 [(.brewblox.field) = {
  if (this->modulestatusclear() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(90, this->modulestatusclear(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blox_test.OneWireGpioModule.Block)
  return target;
}

size_t Block::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blox_test.OneWireGpioModule.Block)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .blox_test.OneWireGpioModule.GpioModuleChannel channels = 1 [(.nanopb) = {
  {
    unsigned int count = static_cast<unsigned int>(this->channels_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->channels(static_cast<int>(i)));
    }
  }

  // uint32 modulePosition = 2 [(.nanopb) = {
  if (this->moduleposition() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->moduleposition());
  }

  // uint32 moduleStatus = 3 [(.nanopb) = {
  if (this->modulestatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->modulestatus());
  }

  // uint32 pullUpDesired = 4 [(.nanopb) = {
  if (this->pullupdesired() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pullupdesired());
  }

  // uint32 pullUpStatus = 5 [(.nanopb) = {
  if (this->pullupstatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pullupstatus());
  }

  // uint32 pullUpWhenActive = 6 [(.nanopb) = {
  if (this->pullupwhenactive() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pullupwhenactive());
  }

  // uint32 pullUpWhenInactive = 7 [(.nanopb) = {
  if (this->pullupwheninactive() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pullupwheninactive());
  }

  // uint32 pullDownDesired = 8 [(.nanopb) = {
  if (this->pulldowndesired() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pulldowndesired());
  }

  // uint32 pullDownStatus = 9 [(.nanopb) = {
  if (this->pulldownstatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pulldownstatus());
  }

  // uint32 pullDownWhenActive = 10 [(.nanopb) = {
  if (this->pulldownwhenactive() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pulldownwhenactive());
  }

  // uint32 pullDownWhenInactive = 11 [(.nanopb) = {
  if (this->pulldownwheninactive() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pulldownwheninactive());
  }

  // uint32 overCurrent = 12 [(.nanopb) = {
  if (this->overcurrent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->overcurrent());
  }

  // uint32 openLoad = 13 [(.nanopb) = {
  if (this->openload() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->openload());
  }

  // bool useExternalPower = 14;
  if (this->useexternalpower() != 0) {
    total_size += 1 + 1;
  }

  // bool clearFaults = 32;
  if (this->clearfaults() != 0) {
    total_size += 2 + 1;
  }

  // uint32 moduleStatusClear = 90 [(.brewblox.field) = {
  if (this->modulestatusclear() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->modulestatusclear());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Block::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:blox_test.OneWireGpioModule.Block)
  GOOGLE_DCHECK_NE(&from, this);
  const Block* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Block>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:blox_test.OneWireGpioModule.Block)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:blox_test.OneWireGpioModule.Block)
    MergeFrom(*source);
  }
}

void Block::MergeFrom(const Block& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blox_test.OneWireGpioModule.Block)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  channels_.MergeFrom(from.channels_);
  if (from.moduleposition() != 0) {
    set_moduleposition(from.moduleposition());
  }
  if (from.modulestatus() != 0) {
    set_modulestatus(from.modulestatus());
  }
  if (from.pullupdesired() != 0) {
    set_pullupdesired(from.pullupdesired());
  }
  if (from.pullupstatus() != 0) {
    set_pullupstatus(from.pullupstatus());
  }
  if (from.pullupwhenactive() != 0) {
    set_pullupwhenactive(from.pullupwhenactive());
  }
  if (from.pullupwheninactive() != 0) {
    set_pullupwheninactive(from.pullupwheninactive());
  }
  if (from.pulldowndesired() != 0) {
    set_pulldowndesired(from.pulldowndesired());
  }
  if (from.pulldownstatus() != 0) {
    set_pulldownstatus(from.pulldownstatus());
  }
  if (from.pulldownwhenactive() != 0) {
    set_pulldownwhenactive(from.pulldownwhenactive());
  }
  if (from.pulldownwheninactive() != 0) {
    set_pulldownwheninactive(from.pulldownwheninactive());
  }
  if (from.overcurrent() != 0) {
    set_overcurrent(from.overcurrent());
  }
  if (from.openload() != 0) {
    set_openload(from.openload());
  }
  if (from.useexternalpower() != 0) {
    set_useexternalpower(from.useexternalpower());
  }
  if (from.clearfaults() != 0) {
    set_clearfaults(from.clearfaults());
  }
  if (from.modulestatusclear() != 0) {
    set_modulestatusclear(from.modulestatusclear());
  }
}

void Block::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:blox_test.OneWireGpioModule.Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Block::CopyFrom(const Block& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blox_test.OneWireGpioModule.Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Block::IsInitialized() const {
  return true;
}

void Block::Swap(Block* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Block::InternalSwap(Block* other) {
  using std::swap;
  CastToBase(&channels_)->InternalSwap(CastToBase(&other->channels_));
  swap(moduleposition_, other->moduleposition_);
  swap(modulestatus_, other->modulestatus_);
  swap(pullupdesired_, other->pullupdesired_);
  swap(pullupstatus_, other->pullupstatus_);
  swap(pullupwhenactive_, other->pullupwhenactive_);
  swap(pullupwheninactive_, other->pullupwheninactive_);
  swap(pulldowndesired_, other->pulldowndesired_);
  swap(pulldownstatus_, other->pulldownstatus_);
  swap(pulldownwhenactive_, other->pulldownwhenactive_);
  swap(pulldownwheninactive_, other->pulldownwheninactive_);
  swap(overcurrent_, other->overcurrent_);
  swap(openload_, other->openload_);
  swap(useexternalpower_, other->useexternalpower_);
  swap(clearfaults_, other->clearfaults_);
  swap(modulestatusclear_, other->modulestatusclear_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Block::GetMetadata() const {
  protobuf_OneWireGpioModule_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OneWireGpioModule_5ftest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace OneWireGpioModule
}  // namespace blox_test
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::blox_test::OneWireGpioModule::GpioModuleChannel* Arena::CreateMaybeMessage< ::blox_test::OneWireGpioModule::GpioModuleChannel >(Arena* arena) {
  return Arena::CreateInternal< ::blox_test::OneWireGpioModule::GpioModuleChannel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::blox_test::OneWireGpioModule::Block* Arena::CreateMaybeMessage< ::blox_test::OneWireGpioModule::Block >(Arena* arena) {
  return Arena::CreateInternal< ::blox_test::OneWireGpioModule::Block >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
