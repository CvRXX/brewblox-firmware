// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OneWireBus_test.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_OneWireBus_5ftest_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_OneWireBus_5ftest_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "brewblox_test.pb.h"
#include "nanopb_test.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_OneWireBus_5ftest_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_OneWireBus_5ftest_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_OneWireBus_5ftest_2eproto;
namespace blox_test {
namespace OneWireBus {
class Block;
struct BlockDefaultTypeInternal;
extern BlockDefaultTypeInternal _Block_default_instance_;
class Command;
struct CommandDefaultTypeInternal;
extern CommandDefaultTypeInternal _Command_default_instance_;
}  // namespace OneWireBus
}  // namespace blox_test
PROTOBUF_NAMESPACE_OPEN
template<> ::blox_test::OneWireBus::Block* Arena::CreateMaybeMessage<::blox_test::OneWireBus::Block>(Arena*);
template<> ::blox_test::OneWireBus::Command* Arena::CreateMaybeMessage<::blox_test::OneWireBus::Command>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace blox_test {
namespace OneWireBus {

// ===================================================================

class Command final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:blox_test.OneWireBus.Command) */ {
 public:
  inline Command() : Command(nullptr) {}
  ~Command() override;
  explicit PROTOBUF_CONSTEXPR Command(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Command(const Command& from);
  Command(Command&& from) noexcept
    : Command() {
    *this = ::std::move(from);
  }

  inline Command& operator=(const Command& from) {
    CopyFrom(from);
    return *this;
  }
  inline Command& operator=(Command&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Command& default_instance() {
    return *internal_default_instance();
  }
  static inline const Command* internal_default_instance() {
    return reinterpret_cast<const Command*>(
               &_Command_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Command& a, Command& b) {
    a.Swap(&b);
  }
  inline void Swap(Command* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Command* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Command* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Command>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Command& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Command& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Command* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "blox_test.OneWireBus.Command";
  }
  protected:
  explicit Command(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOpcodeFieldNumber = 1,
    kDataFieldNumber = 2,
  };
  // uint32 opcode = 1 [(.nanopb) = {
  void clear_opcode();
  uint32_t opcode() const;
  void set_opcode(uint32_t value);
  private:
  uint32_t _internal_opcode() const;
  void _internal_set_opcode(uint32_t value);
  public:

  // uint32 data = 2 [(.nanopb) = {
  void clear_data();
  uint32_t data() const;
  void set_data(uint32_t value);
  private:
  uint32_t _internal_data() const;
  void _internal_set_data(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:blox_test.OneWireBus.Command)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t opcode_;
  uint32_t data_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_OneWireBus_5ftest_2eproto;
};
// -------------------------------------------------------------------

class Block final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:blox_test.OneWireBus.Block) */ {
 public:
  inline Block() : Block(nullptr) {}
  ~Block() override;
  explicit PROTOBUF_CONSTEXPR Block(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Block(const Block& from);
  Block(Block&& from) noexcept
    : Block() {
    *this = ::std::move(from);
  }

  inline Block& operator=(const Block& from) {
    CopyFrom(from);
    return *this;
  }
  inline Block& operator=(Block&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Block& default_instance() {
    return *internal_default_instance();
  }
  static inline const Block* internal_default_instance() {
    return reinterpret_cast<const Block*>(
               &_Block_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Block& a, Block& b) {
    a.Swap(&b);
  }
  inline void Swap(Block* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Block* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Block* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Block>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Block& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Block& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Block* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "blox_test.OneWireBus.Block";
  }
  protected:
  explicit Block(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAddressFieldNumber = 2,
    kCommandFieldNumber = 1,
  };
  // repeated fixed64 address = 2 [(.brewblox.field) = {
  int address_size() const;
  private:
  int _internal_address_size() const;
  public:
  void clear_address();
  private:
  uint64_t _internal_address(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_address() const;
  void _internal_add_address(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_address();
  public:
  uint64_t address(int index) const;
  void set_address(int index, uint64_t value);
  void add_address(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      address() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_address();

  // .blox_test.OneWireBus.Command command = 1;
  bool has_command() const;
  private:
  bool _internal_has_command() const;
  public:
  void clear_command();
  const ::blox_test::OneWireBus::Command& command() const;
  PROTOBUF_NODISCARD ::blox_test::OneWireBus::Command* release_command();
  ::blox_test::OneWireBus::Command* mutable_command();
  void set_allocated_command(::blox_test::OneWireBus::Command* command);
  private:
  const ::blox_test::OneWireBus::Command& _internal_command() const;
  ::blox_test::OneWireBus::Command* _internal_mutable_command();
  public:
  void unsafe_arena_set_allocated_command(
      ::blox_test::OneWireBus::Command* command);
  ::blox_test::OneWireBus::Command* unsafe_arena_release_command();

  // @@protoc_insertion_point(class_scope:blox_test.OneWireBus.Block)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > address_;
  ::blox_test::OneWireBus::Command* command_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_OneWireBus_5ftest_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Command

// uint32 opcode = 1 [(.nanopb) = {
inline void Command::clear_opcode() {
  opcode_ = 0u;
}
inline uint32_t Command::_internal_opcode() const {
  return opcode_;
}
inline uint32_t Command::opcode() const {
  // @@protoc_insertion_point(field_get:blox_test.OneWireBus.Command.opcode)
  return _internal_opcode();
}
inline void Command::_internal_set_opcode(uint32_t value) {
  
  opcode_ = value;
}
inline void Command::set_opcode(uint32_t value) {
  _internal_set_opcode(value);
  // @@protoc_insertion_point(field_set:blox_test.OneWireBus.Command.opcode)
}

// uint32 data = 2 [(.nanopb) = {
inline void Command::clear_data() {
  data_ = 0u;
}
inline uint32_t Command::_internal_data() const {
  return data_;
}
inline uint32_t Command::data() const {
  // @@protoc_insertion_point(field_get:blox_test.OneWireBus.Command.data)
  return _internal_data();
}
inline void Command::_internal_set_data(uint32_t value) {
  
  data_ = value;
}
inline void Command::set_data(uint32_t value) {
  _internal_set_data(value);
  // @@protoc_insertion_point(field_set:blox_test.OneWireBus.Command.data)
}

// -------------------------------------------------------------------

// Block

// .blox_test.OneWireBus.Command command = 1;
inline bool Block::_internal_has_command() const {
  return this != internal_default_instance() && command_ != nullptr;
}
inline bool Block::has_command() const {
  return _internal_has_command();
}
inline void Block::clear_command() {
  if (GetArenaForAllocation() == nullptr && command_ != nullptr) {
    delete command_;
  }
  command_ = nullptr;
}
inline const ::blox_test::OneWireBus::Command& Block::_internal_command() const {
  const ::blox_test::OneWireBus::Command* p = command_;
  return p != nullptr ? *p : reinterpret_cast<const ::blox_test::OneWireBus::Command&>(
      ::blox_test::OneWireBus::_Command_default_instance_);
}
inline const ::blox_test::OneWireBus::Command& Block::command() const {
  // @@protoc_insertion_point(field_get:blox_test.OneWireBus.Block.command)
  return _internal_command();
}
inline void Block::unsafe_arena_set_allocated_command(
    ::blox_test::OneWireBus::Command* command) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(command_);
  }
  command_ = command;
  if (command) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:blox_test.OneWireBus.Block.command)
}
inline ::blox_test::OneWireBus::Command* Block::release_command() {
  
  ::blox_test::OneWireBus::Command* temp = command_;
  command_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::blox_test::OneWireBus::Command* Block::unsafe_arena_release_command() {
  // @@protoc_insertion_point(field_release:blox_test.OneWireBus.Block.command)
  
  ::blox_test::OneWireBus::Command* temp = command_;
  command_ = nullptr;
  return temp;
}
inline ::blox_test::OneWireBus::Command* Block::_internal_mutable_command() {
  
  if (command_ == nullptr) {
    auto* p = CreateMaybeMessage<::blox_test::OneWireBus::Command>(GetArenaForAllocation());
    command_ = p;
  }
  return command_;
}
inline ::blox_test::OneWireBus::Command* Block::mutable_command() {
  ::blox_test::OneWireBus::Command* _msg = _internal_mutable_command();
  // @@protoc_insertion_point(field_mutable:blox_test.OneWireBus.Block.command)
  return _msg;
}
inline void Block::set_allocated_command(::blox_test::OneWireBus::Command* command) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete command_;
  }
  if (command) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(command);
    if (message_arena != submessage_arena) {
      command = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, command, submessage_arena);
    }
    
  } else {
    
  }
  command_ = command;
  // @@protoc_insertion_point(field_set_allocated:blox_test.OneWireBus.Block.command)
}

// repeated fixed64 address = 2 [(.brewblox.field) = {
inline int Block::_internal_address_size() const {
  return address_.size();
}
inline int Block::address_size() const {
  return _internal_address_size();
}
inline void Block::clear_address() {
  address_.Clear();
}
inline uint64_t Block::_internal_address(int index) const {
  return address_.Get(index);
}
inline uint64_t Block::address(int index) const {
  // @@protoc_insertion_point(field_get:blox_test.OneWireBus.Block.address)
  return _internal_address(index);
}
inline void Block::set_address(int index, uint64_t value) {
  address_.Set(index, value);
  // @@protoc_insertion_point(field_set:blox_test.OneWireBus.Block.address)
}
inline void Block::_internal_add_address(uint64_t value) {
  address_.Add(value);
}
inline void Block::add_address(uint64_t value) {
  _internal_add_address(value);
  // @@protoc_insertion_point(field_add:blox_test.OneWireBus.Block.address)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
Block::_internal_address() const {
  return address_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
Block::address() const {
  // @@protoc_insertion_point(field_list:blox_test.OneWireBus.Block.address)
  return _internal_address();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
Block::_internal_mutable_address() {
  return &address_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
Block::mutable_address() {
  // @@protoc_insertion_point(field_mutable_list:blox_test.OneWireBus.Block.address)
  return _internal_mutable_address();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace OneWireBus
}  // namespace blox_test

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_OneWireBus_5ftest_2eproto
