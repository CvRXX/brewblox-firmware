// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ScreenConfig_test.proto

#include "ScreenConfig_test.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_ScreenConfig_5ftest_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ScreenConfig_5ftest_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Color;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ScreenConfig_5ftest_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LayoutNode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ScreenConfig_5ftest_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ColorWidget;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ScreenConfig_5ftest_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_NumericValueWidget;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ScreenConfig_5ftest_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ContentNode;
}  // namespace protobuf_ScreenConfig_5ftest_2eproto
namespace blox_test {
namespace ScreenConfig {
class LayoutNodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LayoutNode>
      _instance;
} _LayoutNode_default_instance_;
class ColorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Color>
      _instance;
} _Color_default_instance_;
class NumericValueWidgetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NumericValueWidget>
      _instance;
} _NumericValueWidget_default_instance_;
class ColorWidgetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ColorWidget>
      _instance;
} _ColorWidget_default_instance_;
class ContentNodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContentNode>
      _instance;
  const ::blox_test::ScreenConfig::NumericValueWidget* numericvaluewidget_;
  const ::blox_test::ScreenConfig::ColorWidget* colorwidget_;
} _ContentNode_default_instance_;
class ScreenConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScreenConfig>
      _instance;
} _ScreenConfig_default_instance_;
}  // namespace ScreenConfig
}  // namespace blox_test
namespace protobuf_ScreenConfig_5ftest_2eproto {
static void InitDefaultsLayoutNode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::blox_test::ScreenConfig::_LayoutNode_default_instance_;
    new (ptr) ::blox_test::ScreenConfig::LayoutNode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::blox_test::ScreenConfig::LayoutNode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LayoutNode =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLayoutNode}, {}};

static void InitDefaultsColor() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::blox_test::ScreenConfig::_Color_default_instance_;
    new (ptr) ::blox_test::ScreenConfig::Color();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::blox_test::ScreenConfig::Color::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Color =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsColor}, {}};

static void InitDefaultsNumericValueWidget() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::blox_test::ScreenConfig::_NumericValueWidget_default_instance_;
    new (ptr) ::blox_test::ScreenConfig::NumericValueWidget();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::blox_test::ScreenConfig::NumericValueWidget::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_NumericValueWidget =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNumericValueWidget}, {
      &protobuf_ScreenConfig_5ftest_2eproto::scc_info_Color.base,}};

static void InitDefaultsColorWidget() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::blox_test::ScreenConfig::_ColorWidget_default_instance_;
    new (ptr) ::blox_test::ScreenConfig::ColorWidget();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::blox_test::ScreenConfig::ColorWidget::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ColorWidget =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsColorWidget}, {
      &protobuf_ScreenConfig_5ftest_2eproto::scc_info_Color.base,}};

static void InitDefaultsContentNode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::blox_test::ScreenConfig::_ContentNode_default_instance_;
    new (ptr) ::blox_test::ScreenConfig::ContentNode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::blox_test::ScreenConfig::ContentNode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ContentNode =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsContentNode}, {
      &protobuf_ScreenConfig_5ftest_2eproto::scc_info_NumericValueWidget.base,
      &protobuf_ScreenConfig_5ftest_2eproto::scc_info_ColorWidget.base,}};

static void InitDefaultsScreenConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::blox_test::ScreenConfig::_ScreenConfig_default_instance_;
    new (ptr) ::blox_test::ScreenConfig::ScreenConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::blox_test::ScreenConfig::ScreenConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ScreenConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsScreenConfig}, {
      &protobuf_ScreenConfig_5ftest_2eproto::scc_info_LayoutNode.base,
      &protobuf_ScreenConfig_5ftest_2eproto::scc_info_ContentNode.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_LayoutNode.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Color.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NumericValueWidget.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ColorWidget.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ContentNode.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScreenConfig.base);
}

::google::protobuf::Metadata file_level_metadata[6];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::ScreenConfig::LayoutNode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::ScreenConfig::LayoutNode, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::ScreenConfig::LayoutNode, nodeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::ScreenConfig::LayoutNode, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::ScreenConfig::LayoutNode, weight_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::ScreenConfig::Color, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::ScreenConfig::Color, r_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::ScreenConfig::Color, g_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::ScreenConfig::Color, b_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::ScreenConfig::NumericValueWidget, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::ScreenConfig::NumericValueWidget, color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::ScreenConfig::NumericValueWidget, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::ScreenConfig::NumericValueWidget, label_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::ScreenConfig::ColorWidget, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::ScreenConfig::ColorWidget, color_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::ScreenConfig::ContentNode, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::ScreenConfig::ContentNode, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::ScreenConfig::ContentNode, layoutnodeid_),
  offsetof(::blox_test::ScreenConfig::ContentNodeDefaultTypeInternal, numericvaluewidget_),
  offsetof(::blox_test::ScreenConfig::ContentNodeDefaultTypeInternal, colorwidget_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::ScreenConfig::ContentNode, Content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::ScreenConfig::ScreenConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::ScreenConfig::ScreenConfig, layoutnodes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::ScreenConfig::ScreenConfig, contentnodes_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::blox_test::ScreenConfig::LayoutNode)},
  { 9, -1, sizeof(::blox_test::ScreenConfig::Color)},
  { 17, -1, sizeof(::blox_test::ScreenConfig::NumericValueWidget)},
  { 25, -1, sizeof(::blox_test::ScreenConfig::ColorWidget)},
  { 31, -1, sizeof(::blox_test::ScreenConfig::ContentNode)},
  { 40, -1, sizeof(::blox_test::ScreenConfig::ScreenConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::blox_test::ScreenConfig::_LayoutNode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::blox_test::ScreenConfig::_Color_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::blox_test::ScreenConfig::_NumericValueWidget_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::blox_test::ScreenConfig::_ColorWidget_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::blox_test::ScreenConfig::_ContentNode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::blox_test::ScreenConfig::_ScreenConfig_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "ScreenConfig_test.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027ScreenConfig_test.proto\022\026blox_test.Scr"
      "eenConfig\032\023brewblox_test.proto\032\021nanopb_t"
      "est.proto\"}\n\nLayoutNode\022\025\n\006parent\030\001 \001(\rB"
      "\005\222\?\0028\010\022\025\n\006nodeId\030\002 \001(\rB\005\222\?\0028\010\022*\n\004type\030\003 "
      "\001(\0162\034.blox_test.ScreenConfig.Type\022\025\n\006wei"
      "ght\030\004 \001(\rB\005\222\?\0028\020\"=\n\005Color\022\020\n\001r\030\001 \001(\rB\005\222\?"
      "\0028\010\022\020\n\001g\030\002 \001(\rB\005\222\?\0028\010\022\020\n\001b\030\003 \001(\rB\005\222\?\0028\010\""
      "n\n\022NumericValueWidget\022,\n\005color\030\001 \001(\0132\035.b"
      "lox_test.ScreenConfig.Color\022\024\n\005value\030\002 \001"
      "(\rB\005\222\?\0028\010\022\024\n\005label\030\003 \001(\tB\005\222\?\002p(\";\n\013Color"
      "Widget\022,\n\005color\030\001 \001(\0132\035.blox_test.Screen"
      "Config.Color\"\273\001\n\013ContentNode\022\033\n\014layoutNo"
      "deId\030\001 \001(\rB\005\222\?\0028\010\022H\n\022numericValueWidget\030"
      "\002 \001(\0132*.blox_test.ScreenConfig.NumericVa"
      "lueWidgetH\000\022:\n\013colorWidget\030\003 \001(\0132#.blox_"
      "test.ScreenConfig.ColorWidgetH\000B\t\n\007Conte"
      "nt\"\202\001\n\014ScreenConfig\0227\n\013layoutNodes\030\001 \003(\013"
      "2\".blox_test.ScreenConfig.LayoutNode\0229\n\014"
      "contentNodes\030\002 \003(\0132#.blox_test.ScreenCon"
      "fig.ContentNode*(\n\004Type\022\007\n\003Row\020\000\022\n\n\006Colu"
      "mn\020\001\022\013\n\007Content\020\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 825);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ScreenConfig_test.proto", &protobuf_RegisterTypes);
  ::protobuf_brewblox_5ftest_2eproto::AddDescriptors();
  ::protobuf_nanopb_5ftest_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ScreenConfig_5ftest_2eproto
namespace blox_test {
namespace ScreenConfig {
const ::google::protobuf::EnumDescriptor* Type_descriptor() {
  protobuf_ScreenConfig_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ScreenConfig_5ftest_2eproto::file_level_enum_descriptors[0];
}
bool Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void LayoutNode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LayoutNode::kParentFieldNumber;
const int LayoutNode::kNodeIdFieldNumber;
const int LayoutNode::kTypeFieldNumber;
const int LayoutNode::kWeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LayoutNode::LayoutNode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ScreenConfig_5ftest_2eproto::scc_info_LayoutNode.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:blox_test.ScreenConfig.LayoutNode)
}
LayoutNode::LayoutNode(const LayoutNode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&parent_, &from.parent_,
    static_cast<size_t>(reinterpret_cast<char*>(&weight_) -
    reinterpret_cast<char*>(&parent_)) + sizeof(weight_));
  // @@protoc_insertion_point(copy_constructor:blox_test.ScreenConfig.LayoutNode)
}

void LayoutNode::SharedCtor() {
  ::memset(&parent_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&weight_) -
      reinterpret_cast<char*>(&parent_)) + sizeof(weight_));
}

LayoutNode::~LayoutNode() {
  // @@protoc_insertion_point(destructor:blox_test.ScreenConfig.LayoutNode)
  SharedDtor();
}

void LayoutNode::SharedDtor() {
}

void LayoutNode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LayoutNode::descriptor() {
  ::protobuf_ScreenConfig_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ScreenConfig_5ftest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LayoutNode& LayoutNode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ScreenConfig_5ftest_2eproto::scc_info_LayoutNode.base);
  return *internal_default_instance();
}


void LayoutNode::Clear() {
// @@protoc_insertion_point(message_clear_start:blox_test.ScreenConfig.LayoutNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&parent_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&weight_) -
      reinterpret_cast<char*>(&parent_)) + sizeof(weight_));
  _internal_metadata_.Clear();
}

bool LayoutNode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:blox_test.ScreenConfig.LayoutNode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 parent = 1 [(.nanopb) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nodeId = 2 [(.nanopb) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nodeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .blox_test.ScreenConfig.Type type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::blox_test::ScreenConfig::Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 weight = 4 [(.nanopb) = {
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &weight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:blox_test.ScreenConfig.LayoutNode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:blox_test.ScreenConfig.LayoutNode)
  return false;
#undef DO_
}

void LayoutNode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:blox_test.ScreenConfig.LayoutNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 parent = 1 [(.nanopb) = {
  if (this->parent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->parent(), output);
  }

  // uint32 nodeId = 2 [(.nanopb) = {
  if (this->nodeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->nodeid(), output);
  }

  // .blox_test.ScreenConfig.Type type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  // uint32 weight = 4 [(.nanopb) = {
  if (this->weight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->weight(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:blox_test.ScreenConfig.LayoutNode)
}

::google::protobuf::uint8* LayoutNode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:blox_test.ScreenConfig.LayoutNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 parent = 1 [(.nanopb) = {
  if (this->parent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->parent(), target);
  }

  // uint32 nodeId = 2 [(.nanopb) = {
  if (this->nodeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->nodeid(), target);
  }

  // .blox_test.ScreenConfig.Type type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  // uint32 weight = 4 [(.nanopb) = {
  if (this->weight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->weight(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blox_test.ScreenConfig.LayoutNode)
  return target;
}

size_t LayoutNode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blox_test.ScreenConfig.LayoutNode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 parent = 1 [(.nanopb) = {
  if (this->parent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent());
  }

  // uint32 nodeId = 2 [(.nanopb) = {
  if (this->nodeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nodeid());
  }

  // .blox_test.ScreenConfig.Type type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // uint32 weight = 4 [(.nanopb) = {
  if (this->weight() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->weight());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LayoutNode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:blox_test.ScreenConfig.LayoutNode)
  GOOGLE_DCHECK_NE(&from, this);
  const LayoutNode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LayoutNode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:blox_test.ScreenConfig.LayoutNode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:blox_test.ScreenConfig.LayoutNode)
    MergeFrom(*source);
  }
}

void LayoutNode::MergeFrom(const LayoutNode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blox_test.ScreenConfig.LayoutNode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent() != 0) {
    set_parent(from.parent());
  }
  if (from.nodeid() != 0) {
    set_nodeid(from.nodeid());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.weight() != 0) {
    set_weight(from.weight());
  }
}

void LayoutNode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:blox_test.ScreenConfig.LayoutNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LayoutNode::CopyFrom(const LayoutNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blox_test.ScreenConfig.LayoutNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LayoutNode::IsInitialized() const {
  return true;
}

void LayoutNode::Swap(LayoutNode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LayoutNode::InternalSwap(LayoutNode* other) {
  using std::swap;
  swap(parent_, other->parent_);
  swap(nodeid_, other->nodeid_);
  swap(type_, other->type_);
  swap(weight_, other->weight_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LayoutNode::GetMetadata() const {
  protobuf_ScreenConfig_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ScreenConfig_5ftest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Color::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Color::kRFieldNumber;
const int Color::kGFieldNumber;
const int Color::kBFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Color::Color()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ScreenConfig_5ftest_2eproto::scc_info_Color.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:blox_test.ScreenConfig.Color)
}
Color::Color(const Color& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&r_, &from.r_,
    static_cast<size_t>(reinterpret_cast<char*>(&b_) -
    reinterpret_cast<char*>(&r_)) + sizeof(b_));
  // @@protoc_insertion_point(copy_constructor:blox_test.ScreenConfig.Color)
}

void Color::SharedCtor() {
  ::memset(&r_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&b_) -
      reinterpret_cast<char*>(&r_)) + sizeof(b_));
}

Color::~Color() {
  // @@protoc_insertion_point(destructor:blox_test.ScreenConfig.Color)
  SharedDtor();
}

void Color::SharedDtor() {
}

void Color::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Color::descriptor() {
  ::protobuf_ScreenConfig_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ScreenConfig_5ftest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Color& Color::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ScreenConfig_5ftest_2eproto::scc_info_Color.base);
  return *internal_default_instance();
}


void Color::Clear() {
// @@protoc_insertion_point(message_clear_start:blox_test.ScreenConfig.Color)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&r_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&b_) -
      reinterpret_cast<char*>(&r_)) + sizeof(b_));
  _internal_metadata_.Clear();
}

bool Color::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:blox_test.ScreenConfig.Color)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 r = 1 [(.nanopb) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &r_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 g = 2 [(.nanopb) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &g_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 b = 3 [(.nanopb) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &b_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:blox_test.ScreenConfig.Color)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:blox_test.ScreenConfig.Color)
  return false;
#undef DO_
}

void Color::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:blox_test.ScreenConfig.Color)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 r = 1 [(.nanopb) = {
  if (this->r() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->r(), output);
  }

  // uint32 g = 2 [(.nanopb) = {
  if (this->g() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->g(), output);
  }

  // uint32 b = 3 [(.nanopb) = {
  if (this->b() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->b(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:blox_test.ScreenConfig.Color)
}

::google::protobuf::uint8* Color::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:blox_test.ScreenConfig.Color)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 r = 1 [(.nanopb) = {
  if (this->r() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->r(), target);
  }

  // uint32 g = 2 [(.nanopb) = {
  if (this->g() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->g(), target);
  }

  // uint32 b = 3 [(.nanopb) = {
  if (this->b() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->b(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blox_test.ScreenConfig.Color)
  return target;
}

size_t Color::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blox_test.ScreenConfig.Color)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 r = 1 [(.nanopb) = {
  if (this->r() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->r());
  }

  // uint32 g = 2 [(.nanopb) = {
  if (this->g() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->g());
  }

  // uint32 b = 3 [(.nanopb) = {
  if (this->b() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->b());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Color::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:blox_test.ScreenConfig.Color)
  GOOGLE_DCHECK_NE(&from, this);
  const Color* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Color>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:blox_test.ScreenConfig.Color)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:blox_test.ScreenConfig.Color)
    MergeFrom(*source);
  }
}

void Color::MergeFrom(const Color& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blox_test.ScreenConfig.Color)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.r() != 0) {
    set_r(from.r());
  }
  if (from.g() != 0) {
    set_g(from.g());
  }
  if (from.b() != 0) {
    set_b(from.b());
  }
}

void Color::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:blox_test.ScreenConfig.Color)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Color::CopyFrom(const Color& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blox_test.ScreenConfig.Color)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Color::IsInitialized() const {
  return true;
}

void Color::Swap(Color* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Color::InternalSwap(Color* other) {
  using std::swap;
  swap(r_, other->r_);
  swap(g_, other->g_);
  swap(b_, other->b_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Color::GetMetadata() const {
  protobuf_ScreenConfig_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ScreenConfig_5ftest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NumericValueWidget::InitAsDefaultInstance() {
  ::blox_test::ScreenConfig::_NumericValueWidget_default_instance_._instance.get_mutable()->color_ = const_cast< ::blox_test::ScreenConfig::Color*>(
      ::blox_test::ScreenConfig::Color::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NumericValueWidget::kColorFieldNumber;
const int NumericValueWidget::kValueFieldNumber;
const int NumericValueWidget::kLabelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NumericValueWidget::NumericValueWidget()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ScreenConfig_5ftest_2eproto::scc_info_NumericValueWidget.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:blox_test.ScreenConfig.NumericValueWidget)
}
NumericValueWidget::NumericValueWidget(const NumericValueWidget& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.label().size() > 0) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  if (from.has_color()) {
    color_ = new ::blox_test::ScreenConfig::Color(*from.color_);
  } else {
    color_ = NULL;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:blox_test.ScreenConfig.NumericValueWidget)
}

void NumericValueWidget::SharedCtor() {
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&color_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&color_)) + sizeof(value_));
}

NumericValueWidget::~NumericValueWidget() {
  // @@protoc_insertion_point(destructor:blox_test.ScreenConfig.NumericValueWidget)
  SharedDtor();
}

void NumericValueWidget::SharedDtor() {
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete color_;
}

void NumericValueWidget::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NumericValueWidget::descriptor() {
  ::protobuf_ScreenConfig_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ScreenConfig_5ftest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NumericValueWidget& NumericValueWidget::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ScreenConfig_5ftest_2eproto::scc_info_NumericValueWidget.base);
  return *internal_default_instance();
}


void NumericValueWidget::Clear() {
// @@protoc_insertion_point(message_clear_start:blox_test.ScreenConfig.NumericValueWidget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && color_ != NULL) {
    delete color_;
  }
  color_ = NULL;
  value_ = 0u;
  _internal_metadata_.Clear();
}

bool NumericValueWidget::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:blox_test.ScreenConfig.NumericValueWidget)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .blox_test.ScreenConfig.Color color = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_color()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 value = 2 [(.nanopb) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string label = 3 [(.nanopb) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->label().data(), static_cast<int>(this->label().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "blox_test.ScreenConfig.NumericValueWidget.label"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:blox_test.ScreenConfig.NumericValueWidget)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:blox_test.ScreenConfig.NumericValueWidget)
  return false;
#undef DO_
}

void NumericValueWidget::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:blox_test.ScreenConfig.NumericValueWidget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .blox_test.ScreenConfig.Color color = 1;
  if (this->has_color()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_color(), output);
  }

  // uint32 value = 2 [(.nanopb) = {
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->value(), output);
  }

  // string label = 3 [(.nanopb) = {
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "blox_test.ScreenConfig.NumericValueWidget.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->label(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:blox_test.ScreenConfig.NumericValueWidget)
}

::google::protobuf::uint8* NumericValueWidget::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:blox_test.ScreenConfig.NumericValueWidget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .blox_test.ScreenConfig.Color color = 1;
  if (this->has_color()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_color(), deterministic, target);
  }

  // uint32 value = 2 [(.nanopb) = {
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->value(), target);
  }

  // string label = 3 [(.nanopb) = {
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "blox_test.ScreenConfig.NumericValueWidget.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->label(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blox_test.ScreenConfig.NumericValueWidget)
  return target;
}

size_t NumericValueWidget::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blox_test.ScreenConfig.NumericValueWidget)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string label = 3 [(.nanopb) = {
  if (this->label().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label());
  }

  // .blox_test.ScreenConfig.Color color = 1;
  if (this->has_color()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *color_);
  }

  // uint32 value = 2 [(.nanopb) = {
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NumericValueWidget::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:blox_test.ScreenConfig.NumericValueWidget)
  GOOGLE_DCHECK_NE(&from, this);
  const NumericValueWidget* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NumericValueWidget>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:blox_test.ScreenConfig.NumericValueWidget)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:blox_test.ScreenConfig.NumericValueWidget)
    MergeFrom(*source);
  }
}

void NumericValueWidget::MergeFrom(const NumericValueWidget& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blox_test.ScreenConfig.NumericValueWidget)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.label().size() > 0) {

    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  if (from.has_color()) {
    mutable_color()->::blox_test::ScreenConfig::Color::MergeFrom(from.color());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void NumericValueWidget::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:blox_test.ScreenConfig.NumericValueWidget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NumericValueWidget::CopyFrom(const NumericValueWidget& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blox_test.ScreenConfig.NumericValueWidget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NumericValueWidget::IsInitialized() const {
  return true;
}

void NumericValueWidget::Swap(NumericValueWidget* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NumericValueWidget::InternalSwap(NumericValueWidget* other) {
  using std::swap;
  label_.Swap(&other->label_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(color_, other->color_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NumericValueWidget::GetMetadata() const {
  protobuf_ScreenConfig_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ScreenConfig_5ftest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ColorWidget::InitAsDefaultInstance() {
  ::blox_test::ScreenConfig::_ColorWidget_default_instance_._instance.get_mutable()->color_ = const_cast< ::blox_test::ScreenConfig::Color*>(
      ::blox_test::ScreenConfig::Color::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ColorWidget::kColorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ColorWidget::ColorWidget()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ScreenConfig_5ftest_2eproto::scc_info_ColorWidget.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:blox_test.ScreenConfig.ColorWidget)
}
ColorWidget::ColorWidget(const ColorWidget& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_color()) {
    color_ = new ::blox_test::ScreenConfig::Color(*from.color_);
  } else {
    color_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:blox_test.ScreenConfig.ColorWidget)
}

void ColorWidget::SharedCtor() {
  color_ = NULL;
}

ColorWidget::~ColorWidget() {
  // @@protoc_insertion_point(destructor:blox_test.ScreenConfig.ColorWidget)
  SharedDtor();
}

void ColorWidget::SharedDtor() {
  if (this != internal_default_instance()) delete color_;
}

void ColorWidget::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ColorWidget::descriptor() {
  ::protobuf_ScreenConfig_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ScreenConfig_5ftest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ColorWidget& ColorWidget::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ScreenConfig_5ftest_2eproto::scc_info_ColorWidget.base);
  return *internal_default_instance();
}


void ColorWidget::Clear() {
// @@protoc_insertion_point(message_clear_start:blox_test.ScreenConfig.ColorWidget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && color_ != NULL) {
    delete color_;
  }
  color_ = NULL;
  _internal_metadata_.Clear();
}

bool ColorWidget::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:blox_test.ScreenConfig.ColorWidget)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .blox_test.ScreenConfig.Color color = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_color()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:blox_test.ScreenConfig.ColorWidget)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:blox_test.ScreenConfig.ColorWidget)
  return false;
#undef DO_
}

void ColorWidget::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:blox_test.ScreenConfig.ColorWidget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .blox_test.ScreenConfig.Color color = 1;
  if (this->has_color()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_color(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:blox_test.ScreenConfig.ColorWidget)
}

::google::protobuf::uint8* ColorWidget::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:blox_test.ScreenConfig.ColorWidget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .blox_test.ScreenConfig.Color color = 1;
  if (this->has_color()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_color(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blox_test.ScreenConfig.ColorWidget)
  return target;
}

size_t ColorWidget::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blox_test.ScreenConfig.ColorWidget)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .blox_test.ScreenConfig.Color color = 1;
  if (this->has_color()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *color_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ColorWidget::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:blox_test.ScreenConfig.ColorWidget)
  GOOGLE_DCHECK_NE(&from, this);
  const ColorWidget* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ColorWidget>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:blox_test.ScreenConfig.ColorWidget)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:blox_test.ScreenConfig.ColorWidget)
    MergeFrom(*source);
  }
}

void ColorWidget::MergeFrom(const ColorWidget& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blox_test.ScreenConfig.ColorWidget)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_color()) {
    mutable_color()->::blox_test::ScreenConfig::Color::MergeFrom(from.color());
  }
}

void ColorWidget::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:blox_test.ScreenConfig.ColorWidget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ColorWidget::CopyFrom(const ColorWidget& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blox_test.ScreenConfig.ColorWidget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ColorWidget::IsInitialized() const {
  return true;
}

void ColorWidget::Swap(ColorWidget* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ColorWidget::InternalSwap(ColorWidget* other) {
  using std::swap;
  swap(color_, other->color_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ColorWidget::GetMetadata() const {
  protobuf_ScreenConfig_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ScreenConfig_5ftest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ContentNode::InitAsDefaultInstance() {
  ::blox_test::ScreenConfig::_ContentNode_default_instance_.numericvaluewidget_ = const_cast< ::blox_test::ScreenConfig::NumericValueWidget*>(
      ::blox_test::ScreenConfig::NumericValueWidget::internal_default_instance());
  ::blox_test::ScreenConfig::_ContentNode_default_instance_.colorwidget_ = const_cast< ::blox_test::ScreenConfig::ColorWidget*>(
      ::blox_test::ScreenConfig::ColorWidget::internal_default_instance());
}
void ContentNode::set_allocated_numericvaluewidget(::blox_test::ScreenConfig::NumericValueWidget* numericvaluewidget) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_Content();
  if (numericvaluewidget) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      numericvaluewidget = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, numericvaluewidget, submessage_arena);
    }
    set_has_numericvaluewidget();
    Content_.numericvaluewidget_ = numericvaluewidget;
  }
  // @@protoc_insertion_point(field_set_allocated:blox_test.ScreenConfig.ContentNode.numericValueWidget)
}
void ContentNode::set_allocated_colorwidget(::blox_test::ScreenConfig::ColorWidget* colorwidget) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_Content();
  if (colorwidget) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      colorwidget = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, colorwidget, submessage_arena);
    }
    set_has_colorwidget();
    Content_.colorwidget_ = colorwidget;
  }
  // @@protoc_insertion_point(field_set_allocated:blox_test.ScreenConfig.ContentNode.colorWidget)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContentNode::kLayoutNodeIdFieldNumber;
const int ContentNode::kNumericValueWidgetFieldNumber;
const int ContentNode::kColorWidgetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContentNode::ContentNode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ScreenConfig_5ftest_2eproto::scc_info_ContentNode.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:blox_test.ScreenConfig.ContentNode)
}
ContentNode::ContentNode(const ContentNode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  layoutnodeid_ = from.layoutnodeid_;
  clear_has_Content();
  switch (from.Content_case()) {
    case kNumericValueWidget: {
      mutable_numericvaluewidget()->::blox_test::ScreenConfig::NumericValueWidget::MergeFrom(from.numericvaluewidget());
      break;
    }
    case kColorWidget: {
      mutable_colorwidget()->::blox_test::ScreenConfig::ColorWidget::MergeFrom(from.colorwidget());
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:blox_test.ScreenConfig.ContentNode)
}

void ContentNode::SharedCtor() {
  layoutnodeid_ = 0u;
  clear_has_Content();
}

ContentNode::~ContentNode() {
  // @@protoc_insertion_point(destructor:blox_test.ScreenConfig.ContentNode)
  SharedDtor();
}

void ContentNode::SharedDtor() {
  if (has_Content()) {
    clear_Content();
  }
}

void ContentNode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ContentNode::descriptor() {
  ::protobuf_ScreenConfig_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ScreenConfig_5ftest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ContentNode& ContentNode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ScreenConfig_5ftest_2eproto::scc_info_ContentNode.base);
  return *internal_default_instance();
}


void ContentNode::clear_Content() {
// @@protoc_insertion_point(one_of_clear_start:blox_test.ScreenConfig.ContentNode)
  switch (Content_case()) {
    case kNumericValueWidget: {
      delete Content_.numericvaluewidget_;
      break;
    }
    case kColorWidget: {
      delete Content_.colorwidget_;
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CONTENT_NOT_SET;
}


void ContentNode::Clear() {
// @@protoc_insertion_point(message_clear_start:blox_test.ScreenConfig.ContentNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  layoutnodeid_ = 0u;
  clear_Content();
  _internal_metadata_.Clear();
}

bool ContentNode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:blox_test.ScreenConfig.ContentNode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 layoutNodeId = 1 [(.nanopb) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &layoutnodeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .blox_test.ScreenConfig.NumericValueWidget numericValueWidget = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_numericvaluewidget()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .blox_test.ScreenConfig.ColorWidget colorWidget = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_colorwidget()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:blox_test.ScreenConfig.ContentNode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:blox_test.ScreenConfig.ContentNode)
  return false;
#undef DO_
}

void ContentNode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:blox_test.ScreenConfig.ContentNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 layoutNodeId = 1 [(.nanopb) = {
  if (this->layoutnodeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->layoutnodeid(), output);
  }

  // .blox_test.ScreenConfig.NumericValueWidget numericValueWidget = 2;
  if (has_numericvaluewidget()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_numericvaluewidget(), output);
  }

  // .blox_test.ScreenConfig.ColorWidget colorWidget = 3;
  if (has_colorwidget()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_colorwidget(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:blox_test.ScreenConfig.ContentNode)
}

::google::protobuf::uint8* ContentNode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:blox_test.ScreenConfig.ContentNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 layoutNodeId = 1 [(.nanopb) = {
  if (this->layoutnodeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->layoutnodeid(), target);
  }

  // .blox_test.ScreenConfig.NumericValueWidget numericValueWidget = 2;
  if (has_numericvaluewidget()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_numericvaluewidget(), deterministic, target);
  }

  // .blox_test.ScreenConfig.ColorWidget colorWidget = 3;
  if (has_colorwidget()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_colorwidget(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blox_test.ScreenConfig.ContentNode)
  return target;
}

size_t ContentNode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blox_test.ScreenConfig.ContentNode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 layoutNodeId = 1 [(.nanopb) = {
  if (this->layoutnodeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->layoutnodeid());
  }

  switch (Content_case()) {
    // .blox_test.ScreenConfig.NumericValueWidget numericValueWidget = 2;
    case kNumericValueWidget: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *Content_.numericvaluewidget_);
      break;
    }
    // .blox_test.ScreenConfig.ColorWidget colorWidget = 3;
    case kColorWidget: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *Content_.colorwidget_);
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ContentNode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:blox_test.ScreenConfig.ContentNode)
  GOOGLE_DCHECK_NE(&from, this);
  const ContentNode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ContentNode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:blox_test.ScreenConfig.ContentNode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:blox_test.ScreenConfig.ContentNode)
    MergeFrom(*source);
  }
}

void ContentNode::MergeFrom(const ContentNode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blox_test.ScreenConfig.ContentNode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.layoutnodeid() != 0) {
    set_layoutnodeid(from.layoutnodeid());
  }
  switch (from.Content_case()) {
    case kNumericValueWidget: {
      mutable_numericvaluewidget()->::blox_test::ScreenConfig::NumericValueWidget::MergeFrom(from.numericvaluewidget());
      break;
    }
    case kColorWidget: {
      mutable_colorwidget()->::blox_test::ScreenConfig::ColorWidget::MergeFrom(from.colorwidget());
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
}

void ContentNode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:blox_test.ScreenConfig.ContentNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContentNode::CopyFrom(const ContentNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blox_test.ScreenConfig.ContentNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContentNode::IsInitialized() const {
  return true;
}

void ContentNode::Swap(ContentNode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContentNode::InternalSwap(ContentNode* other) {
  using std::swap;
  swap(layoutnodeid_, other->layoutnodeid_);
  swap(Content_, other->Content_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ContentNode::GetMetadata() const {
  protobuf_ScreenConfig_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ScreenConfig_5ftest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScreenConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScreenConfig::kLayoutNodesFieldNumber;
const int ScreenConfig::kContentNodesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScreenConfig::ScreenConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ScreenConfig_5ftest_2eproto::scc_info_ScreenConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:blox_test.ScreenConfig.ScreenConfig)
}
ScreenConfig::ScreenConfig(const ScreenConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      layoutnodes_(from.layoutnodes_),
      contentnodes_(from.contentnodes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:blox_test.ScreenConfig.ScreenConfig)
}

void ScreenConfig::SharedCtor() {
}

ScreenConfig::~ScreenConfig() {
  // @@protoc_insertion_point(destructor:blox_test.ScreenConfig.ScreenConfig)
  SharedDtor();
}

void ScreenConfig::SharedDtor() {
}

void ScreenConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScreenConfig::descriptor() {
  ::protobuf_ScreenConfig_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ScreenConfig_5ftest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScreenConfig& ScreenConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ScreenConfig_5ftest_2eproto::scc_info_ScreenConfig.base);
  return *internal_default_instance();
}


void ScreenConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:blox_test.ScreenConfig.ScreenConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  layoutnodes_.Clear();
  contentnodes_.Clear();
  _internal_metadata_.Clear();
}

bool ScreenConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:blox_test.ScreenConfig.ScreenConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .blox_test.ScreenConfig.LayoutNode layoutNodes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_layoutnodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .blox_test.ScreenConfig.ContentNode contentNodes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_contentnodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:blox_test.ScreenConfig.ScreenConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:blox_test.ScreenConfig.ScreenConfig)
  return false;
#undef DO_
}

void ScreenConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:blox_test.ScreenConfig.ScreenConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .blox_test.ScreenConfig.LayoutNode layoutNodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->layoutnodes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->layoutnodes(static_cast<int>(i)),
      output);
  }

  // repeated .blox_test.ScreenConfig.ContentNode contentNodes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contentnodes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->contentnodes(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:blox_test.ScreenConfig.ScreenConfig)
}

::google::protobuf::uint8* ScreenConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:blox_test.ScreenConfig.ScreenConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .blox_test.ScreenConfig.LayoutNode layoutNodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->layoutnodes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->layoutnodes(static_cast<int>(i)), deterministic, target);
  }

  // repeated .blox_test.ScreenConfig.ContentNode contentNodes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contentnodes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->contentnodes(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blox_test.ScreenConfig.ScreenConfig)
  return target;
}

size_t ScreenConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blox_test.ScreenConfig.ScreenConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .blox_test.ScreenConfig.LayoutNode layoutNodes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->layoutnodes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->layoutnodes(static_cast<int>(i)));
    }
  }

  // repeated .blox_test.ScreenConfig.ContentNode contentNodes = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->contentnodes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->contentnodes(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScreenConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:blox_test.ScreenConfig.ScreenConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ScreenConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScreenConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:blox_test.ScreenConfig.ScreenConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:blox_test.ScreenConfig.ScreenConfig)
    MergeFrom(*source);
  }
}

void ScreenConfig::MergeFrom(const ScreenConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blox_test.ScreenConfig.ScreenConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  layoutnodes_.MergeFrom(from.layoutnodes_);
  contentnodes_.MergeFrom(from.contentnodes_);
}

void ScreenConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:blox_test.ScreenConfig.ScreenConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScreenConfig::CopyFrom(const ScreenConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blox_test.ScreenConfig.ScreenConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScreenConfig::IsInitialized() const {
  return true;
}

void ScreenConfig::Swap(ScreenConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScreenConfig::InternalSwap(ScreenConfig* other) {
  using std::swap;
  CastToBase(&layoutnodes_)->InternalSwap(CastToBase(&other->layoutnodes_));
  CastToBase(&contentnodes_)->InternalSwap(CastToBase(&other->contentnodes_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScreenConfig::GetMetadata() const {
  protobuf_ScreenConfig_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ScreenConfig_5ftest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ScreenConfig
}  // namespace blox_test
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::blox_test::ScreenConfig::LayoutNode* Arena::CreateMaybeMessage< ::blox_test::ScreenConfig::LayoutNode >(Arena* arena) {
  return Arena::CreateInternal< ::blox_test::ScreenConfig::LayoutNode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::blox_test::ScreenConfig::Color* Arena::CreateMaybeMessage< ::blox_test::ScreenConfig::Color >(Arena* arena) {
  return Arena::CreateInternal< ::blox_test::ScreenConfig::Color >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::blox_test::ScreenConfig::NumericValueWidget* Arena::CreateMaybeMessage< ::blox_test::ScreenConfig::NumericValueWidget >(Arena* arena) {
  return Arena::CreateInternal< ::blox_test::ScreenConfig::NumericValueWidget >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::blox_test::ScreenConfig::ColorWidget* Arena::CreateMaybeMessage< ::blox_test::ScreenConfig::ColorWidget >(Arena* arena) {
  return Arena::CreateInternal< ::blox_test::ScreenConfig::ColorWidget >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::blox_test::ScreenConfig::ContentNode* Arena::CreateMaybeMessage< ::blox_test::ScreenConfig::ContentNode >(Arena* arena) {
  return Arena::CreateInternal< ::blox_test::ScreenConfig::ContentNode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::blox_test::ScreenConfig::ScreenConfig* Arena::CreateMaybeMessage< ::blox_test::ScreenConfig::ScreenConfig >(Arena* arena) {
  return Arena::CreateInternal< ::blox_test::ScreenConfig::ScreenConfig >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
