// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Stepper_test.proto

#include "Stepper_test.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_Stepper_5ftest_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Stepper_5ftest_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Step;
}  // namespace protobuf_Stepper_5ftest_2eproto
namespace blox_test {
namespace Stepper {
class StepDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Step>
      _instance;
  ::google::protobuf::uint32 setpointid_;
  ::google::protobuf::uint32 digitalid_;
  ::google::protobuf::uint32 analogid_;
  ::google::protobuf::uint32 profileid_;
  bool booleanvalue_;
  ::google::protobuf::uint32 timevalue_;
  ::google::protobuf::int32 setpointvalue_;
  ::google::protobuf::int32 setpointoffsetvalue_;
  int digitalvalue_;
  ::google::protobuf::int32 analogvalue_;
} _Step_default_instance_;
class BlockDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Block>
      _instance;
} _Block_default_instance_;
}  // namespace Stepper
}  // namespace blox_test
namespace protobuf_Stepper_5ftest_2eproto {
static void InitDefaultsStep() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::blox_test::Stepper::_Step_default_instance_;
    new (ptr) ::blox_test::Stepper::Step();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::blox_test::Stepper::Step::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Step =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStep}, {}};

static void InitDefaultsBlock() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::blox_test::Stepper::_Block_default_instance_;
    new (ptr) ::blox_test::Stepper::Block();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::blox_test::Stepper::Block::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Block =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBlock}, {
      &protobuf_Stepper_5ftest_2eproto::scc_info_Step.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Step.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Block.base);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Stepper::Step, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Stepper::Step, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Stepper::Step, instruction_),
  offsetof(::blox_test::Stepper::StepDefaultTypeInternal, setpointid_),
  offsetof(::blox_test::Stepper::StepDefaultTypeInternal, digitalid_),
  offsetof(::blox_test::Stepper::StepDefaultTypeInternal, analogid_),
  offsetof(::blox_test::Stepper::StepDefaultTypeInternal, profileid_),
  offsetof(::blox_test::Stepper::StepDefaultTypeInternal, booleanvalue_),
  offsetof(::blox_test::Stepper::StepDefaultTypeInternal, timevalue_),
  offsetof(::blox_test::Stepper::StepDefaultTypeInternal, setpointvalue_),
  offsetof(::blox_test::Stepper::StepDefaultTypeInternal, setpointoffsetvalue_),
  offsetof(::blox_test::Stepper::StepDefaultTypeInternal, digitalvalue_),
  offsetof(::blox_test::Stepper::StepDefaultTypeInternal, analogvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Stepper::Step, target_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Stepper::Step, value_oneof_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Stepper::Block, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Stepper::Block, enabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Stepper::Block, activestep_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Stepper::Block, activestepstartedat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blox_test::Stepper::Block, steps_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::blox_test::Stepper::Step)},
  { 18, -1, sizeof(::blox_test::Stepper::Block)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::blox_test::Stepper::_Step_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::blox_test::Stepper::_Block_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Stepper_test.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022Stepper_test.proto\022\021blox_test.Stepper\032"
      "\023brewblox_test.proto\032\021nanopb_test.proto\032"
      "\022IoArray_test.proto\"\375\003\n\004Step\0223\n\013instruct"
      "ion\030\001 \001(\0162\036.blox_test.Stepper.Instructio"
      "n\022!\n\nsetpointId\030\002 \001(\rB\013\212\265\030\002\030\004\222\?\0028\020H\000\022 \n\t"
      "digitalId\030\003 \001(\rB\013\212\265\030\002\030\006\222\?\0028\020H\000\022\037\n\010analog"
      "Id\030\004 \001(\rB\013\212\265\030\002\030\005\222\?\0028\020H\000\022!\n\tprofileId\030\005 \001"
      "(\rB\014\212\265\030\003\030\267\002\222\?\0028\020H\000\022\036\n\014booleanValue\030\n \001(\010"
      "B\006\212\265\030\0020\001H\001\022 \n\ttimeValue\030\013 \001(\rB\013\212\265\030\0020\001\222\?\002"
      "8 H\001\0221\n\rsetpointValue\030\014 \001(\021B\030\212\265\030\0020\001\212\265\030\002\010"
      "\001\212\265\030\003\020\200 \222\?\0028 H\001\0227\n\023setpointOffsetValue\030\r"
      " \001(\021B\030\212\265\030\0020\001\212\265\030\002\010\006\212\265\030\003\020\200 \222\?\0028 H\001\022\?\n\014digi"
      "talValue\030\016 \001(\0162\037.blox_test.IoArray.Digit"
      "alStateB\006\212\265\030\0020\001H\001\022)\n\013analogValue\030\017 \001(\021B\022"
      "\212\265\030\0020\001\212\265\030\003\020\200 \222\?\0028 H\001B\016\n\014target_oneofB\r\n\013"
      "value_oneof\"\227\001\n\005Block\022\027\n\007enabled\030\001 \001(\010B\006"
      "\212\265\030\0020\001\022\037\n\nactiveStep\030\002 \001(\rB\013\212\265\030\0020\001\222\?\0028\020\022"
      "#\n\023activeStepStartedAt\030\003 \001(\rB\006\212\265\030\0020\001\022&\n\005"
      "steps\030\004 \003(\0132\027.blox_test.Stepper.Step:\007\212\265"
      "\030\003\030\306\002*\276\002\n\013Instruction\022\010\n\004NOOP\020\000\022\013\n\007RESTA"
      "RT\020\001\022\026\n\022TIME_WAIT_DURATION\020\002\022\026\n\022TIME_WAI"
      "T_ABSOLUTE\020\003\022\022\n\016PROFILE_ENABLE\020\n\022\021\n\rPROF"
      "ILE_RESET\020\013\022\020\n\014PROFILE_WAIT\020\014\022\023\n\017SETPOIN"
      "T_ENABLE\020\024\022\024\n\020SETPOINT_SETTING\020\025\022\021\n\rSETP"
      "OINT_WAIT\020\026\022\022\n\016DIGITAL_ENABLE\020\036\022\023\n\017DIGIT"
      "AL_SETTING\020\037\022\020\n\014DIGITAL_WAIT\020 \022\021\n\rANALOG"
      "_ENABLE\020(\022\022\n\016ANALOG_SETTING\020)\022\017\n\013ANALOG_"
      "WAIT\020*b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1094);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Stepper_test.proto", &protobuf_RegisterTypes);
  ::protobuf_brewblox_5ftest_2eproto::AddDescriptors();
  ::protobuf_nanopb_5ftest_2eproto::AddDescriptors();
  ::protobuf_IoArray_5ftest_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Stepper_5ftest_2eproto
namespace blox_test {
namespace Stepper {
const ::google::protobuf::EnumDescriptor* Instruction_descriptor() {
  protobuf_Stepper_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Stepper_5ftest_2eproto::file_level_enum_descriptors[0];
}
bool Instruction_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 10:
    case 11:
    case 12:
    case 20:
    case 21:
    case 22:
    case 30:
    case 31:
    case 32:
    case 40:
    case 41:
    case 42:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Step::InitAsDefaultInstance() {
  ::blox_test::Stepper::_Step_default_instance_.setpointid_ = 0u;
  ::blox_test::Stepper::_Step_default_instance_.digitalid_ = 0u;
  ::blox_test::Stepper::_Step_default_instance_.analogid_ = 0u;
  ::blox_test::Stepper::_Step_default_instance_.profileid_ = 0u;
  ::blox_test::Stepper::_Step_default_instance_.booleanvalue_ = false;
  ::blox_test::Stepper::_Step_default_instance_.timevalue_ = 0u;
  ::blox_test::Stepper::_Step_default_instance_.setpointvalue_ = 0;
  ::blox_test::Stepper::_Step_default_instance_.setpointoffsetvalue_ = 0;
  ::blox_test::Stepper::_Step_default_instance_.digitalvalue_ = 0;
  ::blox_test::Stepper::_Step_default_instance_.analogvalue_ = 0;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Step::kInstructionFieldNumber;
const int Step::kSetpointIdFieldNumber;
const int Step::kDigitalIdFieldNumber;
const int Step::kAnalogIdFieldNumber;
const int Step::kProfileIdFieldNumber;
const int Step::kBooleanValueFieldNumber;
const int Step::kTimeValueFieldNumber;
const int Step::kSetpointValueFieldNumber;
const int Step::kSetpointOffsetValueFieldNumber;
const int Step::kDigitalValueFieldNumber;
const int Step::kAnalogValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Step::Step()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Stepper_5ftest_2eproto::scc_info_Step.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:blox_test.Stepper.Step)
}
Step::Step(const Step& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  instruction_ = from.instruction_;
  clear_has_target_oneof();
  switch (from.target_oneof_case()) {
    case kSetpointId: {
      set_setpointid(from.setpointid());
      break;
    }
    case kDigitalId: {
      set_digitalid(from.digitalid());
      break;
    }
    case kAnalogId: {
      set_analogid(from.analogid());
      break;
    }
    case kProfileId: {
      set_profileid(from.profileid());
      break;
    }
    case TARGET_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_value_oneof();
  switch (from.value_oneof_case()) {
    case kBooleanValue: {
      set_booleanvalue(from.booleanvalue());
      break;
    }
    case kTimeValue: {
      set_timevalue(from.timevalue());
      break;
    }
    case kSetpointValue: {
      set_setpointvalue(from.setpointvalue());
      break;
    }
    case kSetpointOffsetValue: {
      set_setpointoffsetvalue(from.setpointoffsetvalue());
      break;
    }
    case kDigitalValue: {
      set_digitalvalue(from.digitalvalue());
      break;
    }
    case kAnalogValue: {
      set_analogvalue(from.analogvalue());
      break;
    }
    case VALUE_ONEOF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:blox_test.Stepper.Step)
}

void Step::SharedCtor() {
  instruction_ = 0;
  clear_has_target_oneof();
  clear_has_value_oneof();
}

Step::~Step() {
  // @@protoc_insertion_point(destructor:blox_test.Stepper.Step)
  SharedDtor();
}

void Step::SharedDtor() {
  if (has_target_oneof()) {
    clear_target_oneof();
  }
  if (has_value_oneof()) {
    clear_value_oneof();
  }
}

void Step::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Step::descriptor() {
  ::protobuf_Stepper_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Stepper_5ftest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Step& Step::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Stepper_5ftest_2eproto::scc_info_Step.base);
  return *internal_default_instance();
}


void Step::clear_target_oneof() {
// @@protoc_insertion_point(one_of_clear_start:blox_test.Stepper.Step)
  switch (target_oneof_case()) {
    case kSetpointId: {
      // No need to clear
      break;
    }
    case kDigitalId: {
      // No need to clear
      break;
    }
    case kAnalogId: {
      // No need to clear
      break;
    }
    case kProfileId: {
      // No need to clear
      break;
    }
    case TARGET_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TARGET_ONEOF_NOT_SET;
}

void Step::clear_value_oneof() {
// @@protoc_insertion_point(one_of_clear_start:blox_test.Stepper.Step)
  switch (value_oneof_case()) {
    case kBooleanValue: {
      // No need to clear
      break;
    }
    case kTimeValue: {
      // No need to clear
      break;
    }
    case kSetpointValue: {
      // No need to clear
      break;
    }
    case kSetpointOffsetValue: {
      // No need to clear
      break;
    }
    case kDigitalValue: {
      // No need to clear
      break;
    }
    case kAnalogValue: {
      // No need to clear
      break;
    }
    case VALUE_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = VALUE_ONEOF_NOT_SET;
}


void Step::Clear() {
// @@protoc_insertion_point(message_clear_start:blox_test.Stepper.Step)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instruction_ = 0;
  clear_target_oneof();
  clear_value_oneof();
  _internal_metadata_.Clear();
}

bool Step::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:blox_test.Stepper.Step)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .blox_test.Stepper.Instruction instruction = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_instruction(static_cast< ::blox_test::Stepper::Instruction >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 setpointId = 2 [(.nanopb) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          clear_target_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_oneof_.setpointid_)));
          set_has_setpointid();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 digitalId = 3 [(.nanopb) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_target_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_oneof_.digitalid_)));
          set_has_digitalid();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 analogId = 4 [(.nanopb) = {
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          clear_target_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_oneof_.analogid_)));
          set_has_analogid();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 profileId = 5 [(.nanopb) = {
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          clear_target_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_oneof_.profileid_)));
          set_has_profileid();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool booleanValue = 10 [(.brewblox.field) = {
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          clear_value_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_oneof_.booleanvalue_)));
          set_has_booleanvalue();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 timeValue = 11 [(.nanopb) = {
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          clear_value_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_oneof_.timevalue_)));
          set_has_timevalue();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 setpointValue = 12 [(.nanopb) = {
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          clear_value_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &value_oneof_.setpointvalue_)));
          set_has_setpointvalue();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 setpointOffsetValue = 13 [(.nanopb) = {
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          clear_value_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &value_oneof_.setpointoffsetvalue_)));
          set_has_setpointoffsetvalue();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .blox_test.IoArray.DigitalState digitalValue = 14 [(.brewblox.field) = {
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_digitalvalue(static_cast< ::blox_test::IoArray::DigitalState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 analogValue = 15 [(.nanopb) = {
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          clear_value_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &value_oneof_.analogvalue_)));
          set_has_analogvalue();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:blox_test.Stepper.Step)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:blox_test.Stepper.Step)
  return false;
#undef DO_
}

void Step::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:blox_test.Stepper.Step)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .blox_test.Stepper.Instruction instruction = 1;
  if (this->instruction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->instruction(), output);
  }

  // uint32 setpointId = 2 [(.nanopb) = {
  if (has_setpointid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->setpointid(), output);
  }

  // uint32 digitalId = 3 [(.nanopb) = {
  if (has_digitalid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->digitalid(), output);
  }

  // uint32 analogId = 4 [(.nanopb) = {
  if (has_analogid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->analogid(), output);
  }

  // uint32 profileId = 5 [(.nanopb) = {
  if (has_profileid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->profileid(), output);
  }

  // bool booleanValue = 10 [(.brewblox.field) = {
  if (has_booleanvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->booleanvalue(), output);
  }

  // uint32 timeValue = 11 [(.nanopb) = {
  if (has_timevalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->timevalue(), output);
  }

  // sint32 setpointValue = 12 [(.nanopb) = {
  if (has_setpointvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(12, this->setpointvalue(), output);
  }

  // sint32 setpointOffsetValue = 13 [(.nanopb) = {
  if (has_setpointoffsetvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(13, this->setpointoffsetvalue(), output);
  }

  // .blox_test.IoArray.DigitalState digitalValue = 14 [(.brewblox.field) = {
  if (has_digitalvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      14, this->digitalvalue(), output);
  }

  // sint32 analogValue = 15 [(.nanopb) = {
  if (has_analogvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(15, this->analogvalue(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:blox_test.Stepper.Step)
}

::google::protobuf::uint8* Step::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:blox_test.Stepper.Step)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .blox_test.Stepper.Instruction instruction = 1;
  if (this->instruction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->instruction(), target);
  }

  // uint32 setpointId = 2 [(.nanopb) = {
  if (has_setpointid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->setpointid(), target);
  }

  // uint32 digitalId = 3 [(.nanopb) = {
  if (has_digitalid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->digitalid(), target);
  }

  // uint32 analogId = 4 [(.nanopb) = {
  if (has_analogid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->analogid(), target);
  }

  // uint32 profileId = 5 [(.nanopb) = {
  if (has_profileid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->profileid(), target);
  }

  // bool booleanValue = 10 [(.brewblox.field) = {
  if (has_booleanvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->booleanvalue(), target);
  }

  // uint32 timeValue = 11 [(.nanopb) = {
  if (has_timevalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->timevalue(), target);
  }

  // sint32 setpointValue = 12 [(.nanopb) = {
  if (has_setpointvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(12, this->setpointvalue(), target);
  }

  // sint32 setpointOffsetValue = 13 [(.nanopb) = {
  if (has_setpointoffsetvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(13, this->setpointoffsetvalue(), target);
  }

  // .blox_test.IoArray.DigitalState digitalValue = 14 [(.brewblox.field) = {
  if (has_digitalvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      14, this->digitalvalue(), target);
  }

  // sint32 analogValue = 15 [(.nanopb) = {
  if (has_analogvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(15, this->analogvalue(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blox_test.Stepper.Step)
  return target;
}

size_t Step::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blox_test.Stepper.Step)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .blox_test.Stepper.Instruction instruction = 1;
  if (this->instruction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->instruction());
  }

  switch (target_oneof_case()) {
    // uint32 setpointId = 2 [(.nanopb) = {
    case kSetpointId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->setpointid());
      break;
    }
    // uint32 digitalId = 3 [(.nanopb) = {
    case kDigitalId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->digitalid());
      break;
    }
    // uint32 analogId = 4 [(.nanopb) = {
    case kAnalogId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->analogid());
      break;
    }
    // uint32 profileId = 5 [(.nanopb) = {
    case kProfileId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->profileid());
      break;
    }
    case TARGET_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (value_oneof_case()) {
    // bool booleanValue = 10 [(.brewblox.field) = {
    case kBooleanValue: {
      total_size += 1 + 1;
      break;
    }
    // uint32 timeValue = 11 [(.nanopb) = {
    case kTimeValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->timevalue());
      break;
    }
    // sint32 setpointValue = 12 [(.nanopb) = {
    case kSetpointValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->setpointvalue());
      break;
    }
    // sint32 setpointOffsetValue = 13 [(.nanopb) = {
    case kSetpointOffsetValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->setpointoffsetvalue());
      break;
    }
    // .blox_test.IoArray.DigitalState digitalValue = 14 [(.brewblox.field) = {
    case kDigitalValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->digitalvalue());
      break;
    }
    // sint32 analogValue = 15 [(.nanopb) = {
    case kAnalogValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->analogvalue());
      break;
    }
    case VALUE_ONEOF_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Step::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:blox_test.Stepper.Step)
  GOOGLE_DCHECK_NE(&from, this);
  const Step* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Step>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:blox_test.Stepper.Step)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:blox_test.Stepper.Step)
    MergeFrom(*source);
  }
}

void Step::MergeFrom(const Step& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blox_test.Stepper.Step)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.instruction() != 0) {
    set_instruction(from.instruction());
  }
  switch (from.target_oneof_case()) {
    case kSetpointId: {
      set_setpointid(from.setpointid());
      break;
    }
    case kDigitalId: {
      set_digitalid(from.digitalid());
      break;
    }
    case kAnalogId: {
      set_analogid(from.analogid());
      break;
    }
    case kProfileId: {
      set_profileid(from.profileid());
      break;
    }
    case TARGET_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.value_oneof_case()) {
    case kBooleanValue: {
      set_booleanvalue(from.booleanvalue());
      break;
    }
    case kTimeValue: {
      set_timevalue(from.timevalue());
      break;
    }
    case kSetpointValue: {
      set_setpointvalue(from.setpointvalue());
      break;
    }
    case kSetpointOffsetValue: {
      set_setpointoffsetvalue(from.setpointoffsetvalue());
      break;
    }
    case kDigitalValue: {
      set_digitalvalue(from.digitalvalue());
      break;
    }
    case kAnalogValue: {
      set_analogvalue(from.analogvalue());
      break;
    }
    case VALUE_ONEOF_NOT_SET: {
      break;
    }
  }
}

void Step::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:blox_test.Stepper.Step)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Step::CopyFrom(const Step& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blox_test.Stepper.Step)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Step::IsInitialized() const {
  return true;
}

void Step::Swap(Step* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Step::InternalSwap(Step* other) {
  using std::swap;
  swap(instruction_, other->instruction_);
  swap(target_oneof_, other->target_oneof_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(value_oneof_, other->value_oneof_);
  swap(_oneof_case_[1], other->_oneof_case_[1]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Step::GetMetadata() const {
  protobuf_Stepper_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Stepper_5ftest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Block::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Block::kEnabledFieldNumber;
const int Block::kActiveStepFieldNumber;
const int Block::kActiveStepStartedAtFieldNumber;
const int Block::kStepsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Block::Block()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Stepper_5ftest_2eproto::scc_info_Block.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:blox_test.Stepper.Block)
}
Block::Block(const Block& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      steps_(from.steps_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&enabled_, &from.enabled_,
    static_cast<size_t>(reinterpret_cast<char*>(&activestepstartedat_) -
    reinterpret_cast<char*>(&enabled_)) + sizeof(activestepstartedat_));
  // @@protoc_insertion_point(copy_constructor:blox_test.Stepper.Block)
}

void Block::SharedCtor() {
  ::memset(&enabled_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&activestepstartedat_) -
      reinterpret_cast<char*>(&enabled_)) + sizeof(activestepstartedat_));
}

Block::~Block() {
  // @@protoc_insertion_point(destructor:blox_test.Stepper.Block)
  SharedDtor();
}

void Block::SharedDtor() {
}

void Block::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Block::descriptor() {
  ::protobuf_Stepper_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Stepper_5ftest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Block& Block::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Stepper_5ftest_2eproto::scc_info_Block.base);
  return *internal_default_instance();
}


void Block::Clear() {
// @@protoc_insertion_point(message_clear_start:blox_test.Stepper.Block)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steps_.Clear();
  ::memset(&enabled_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&activestepstartedat_) -
      reinterpret_cast<char*>(&enabled_)) + sizeof(activestepstartedat_));
  _internal_metadata_.Clear();
}

bool Block::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:blox_test.Stepper.Block)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool enabled = 1 [(.brewblox.field) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 activeStep = 2 [(.nanopb) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &activestep_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 activeStepStartedAt = 3 [(.brewblox.field) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &activestepstartedat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .blox_test.Stepper.Step steps = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_steps()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:blox_test.Stepper.Block)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:blox_test.Stepper.Block)
  return false;
#undef DO_
}

void Block::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:blox_test.Stepper.Block)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1 [(.brewblox.field) = {
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enabled(), output);
  }

  // uint32 activeStep = 2 [(.nanopb) = {
  if (this->activestep() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->activestep(), output);
  }

  // uint32 activeStepStartedAt = 3 [(.brewblox.field) = {
  if (this->activestepstartedat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->activestepstartedat(), output);
  }

  // repeated .blox_test.Stepper.Step steps = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->steps_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->steps(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:blox_test.Stepper.Block)
}

::google::protobuf::uint8* Block::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:blox_test.Stepper.Block)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1 [(.brewblox.field) = {
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enabled(), target);
  }

  // uint32 activeStep = 2 [(.nanopb) = {
  if (this->activestep() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->activestep(), target);
  }

  // uint32 activeStepStartedAt = 3 [(.brewblox.field) = {
  if (this->activestepstartedat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->activestepstartedat(), target);
  }

  // repeated .blox_test.Stepper.Step steps = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->steps_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->steps(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blox_test.Stepper.Block)
  return target;
}

size_t Block::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blox_test.Stepper.Block)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .blox_test.Stepper.Step steps = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->steps_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->steps(static_cast<int>(i)));
    }
  }

  // bool enabled = 1 [(.brewblox.field) = {
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  // uint32 activeStep = 2 [(.nanopb) = {
  if (this->activestep() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->activestep());
  }

  // uint32 activeStepStartedAt = 3 [(.brewblox.field) = {
  if (this->activestepstartedat() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->activestepstartedat());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Block::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:blox_test.Stepper.Block)
  GOOGLE_DCHECK_NE(&from, this);
  const Block* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Block>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:blox_test.Stepper.Block)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:blox_test.Stepper.Block)
    MergeFrom(*source);
  }
}

void Block::MergeFrom(const Block& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blox_test.Stepper.Block)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  steps_.MergeFrom(from.steps_);
  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
  if (from.activestep() != 0) {
    set_activestep(from.activestep());
  }
  if (from.activestepstartedat() != 0) {
    set_activestepstartedat(from.activestepstartedat());
  }
}

void Block::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:blox_test.Stepper.Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Block::CopyFrom(const Block& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blox_test.Stepper.Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Block::IsInitialized() const {
  return true;
}

void Block::Swap(Block* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Block::InternalSwap(Block* other) {
  using std::swap;
  CastToBase(&steps_)->InternalSwap(CastToBase(&other->steps_));
  swap(enabled_, other->enabled_);
  swap(activestep_, other->activestep_);
  swap(activestepstartedat_, other->activestepstartedat_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Block::GetMetadata() const {
  protobuf_Stepper_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Stepper_5ftest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Stepper
}  // namespace blox_test
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::blox_test::Stepper::Step* Arena::CreateMaybeMessage< ::blox_test::Stepper::Step >(Arena* arena) {
  return Arena::CreateInternal< ::blox_test::Stepper::Step >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::blox_test::Stepper::Block* Arena::CreateMaybeMessage< ::blox_test::Stepper::Block >(Arena* arena) {
  return Arena::CreateInternal< ::blox_test::Stepper::Block >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
